"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tanstack_query-devtools_build_Devtools_XYYT2JS6_js"],{

/***/ "(app-pages-browser)/./node_modules/@tanstack/query-devtools/build/Devtools/XYYT2JS6.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tanstack/query-devtools/build/Devtools/XYYT2JS6.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Devtools_default; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk/KQZGNKMT.js */ \"(app-pages-browser)/./node_modules/@tanstack/query-devtools/build/chunk/KQZGNKMT.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n          transform: rotate(\",\n        \"deg);\\n        \"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            & svg {\\n              top: -1px;\\n            }\\n          \"\n    ]);\n    _templateObject1 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n          width: \",\n        \";\\n          height: \",\n        \";\\n        \"\n    ]);\n    _templateObject2 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      & * {\\n        font-size: \",\n        \";\\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\\n          'Liberation Mono', 'Courier New', monospace;\\n      }\\n      position: relative;\\n      outline: none;\\n      word-break: break-word;\\n    \"\n    ]);\n    _templateObject3 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject4() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      margin: 0 0 0 0.5em;\\n      padding-left: 0.75em;\\n      border-left: 2px solid \",\n        \";\\n      /* outline: 1px solid \",\n        \"; */\\n    \"\n    ]);\n    _templateObject4 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject5() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      & path {\\n        stroke: \",\n        \";\\n      }\\n      & svg {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      display: inline-flex;\\n      align-items: center;\\n      transition: all 0.1s ease;\\n      /* outline: 1px solid \",\n        \"; */\\n    \"\n    ]);\n    _templateObject5 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject6() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      line-height: \",\n        \";\\n      min-height: \",\n        \";\\n      gap: \",\n        \";\\n    \"\n    ]);\n    _templateObject6 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject7() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      cursor: pointer;\\n      color: inherit;\\n      font: inherit;\\n      outline: inherit;\\n      height: \",\n        \";\\n      background: transparent;\\n      border: none;\\n      padding: 0;\\n      display: inline-flex;\\n      align-items: center;\\n      gap: \",\n        \";\\n      position: relative;\\n      /* outline: 1px solid \",\n        \"; */\\n\\n      &:focus-visible {\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n\\n      & svg {\\n        position: relative;\\n        left: 1px;\\n      }\\n    \"\n    ]);\n    _templateObject7 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject8() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      color: \",\n        \";\\n      font-size: \",\n        \";\\n      margin-left: \",\n        \";\\n      /* outline: 1px solid \",\n        \"; */\\n    \"\n    ]);\n    _templateObject8 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject9() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      color: \",\n        \";\\n      white-space: nowrap;\\n    \"\n    ]);\n    _templateObject9 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject10() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      color: \",\n        \";\\n      flex-grow: 1;\\n    \"\n    ]);\n    _templateObject10 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject11() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: inline-flex;\\n      gap: \",\n        \";\\n      align-items: center;\\n    \"\n    ]);\n    _templateObject11 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject12() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: inline-flex;\\n      gap: \",\n        \";\\n      width: 100%;\\n      margin: \",\n        \" 0px;\\n      line-height: \",\n        \";\\n      align-items: center;\\n    \"\n    ]);\n    _templateObject12 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject13() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border: none;\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n      flex-grow: 1;\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject13 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject14() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: transparent;\\n      color: \",\n        \";\\n      border: none;\\n      display: inline-flex;\\n      padding: 0px;\\n      align-items: center;\\n      justify-content: center;\\n      cursor: pointer;\\n      width: \",\n        \";\\n      height: \",\n        \";\\n      position: relative;\\n      z-index: 1;\\n\\n      &:hover svg {\\n        color: \",\n        \";\\n      }\\n\\n      &:focus-visible {\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n        outline-offset: 2px;\\n      }\\n    \"\n    ]);\n    _templateObject14 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject15() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            & .tsqd-panel-transition-exit-active,\\n            & .tsqd-panel-transition-enter-active {\\n              transition:\\n                opacity 0.3s,\\n                transform 0.3s;\\n            }\\n\\n            & .tsqd-panel-transition-exit-to,\\n            & .tsqd-panel-transition-enter {\\n              \",\n        \"\\n            }\\n\\n            & .tsqd-button-transition-exit-active,\\n            & .tsqd-button-transition-enter-active {\\n              transition:\\n                opacity 0.3s,\\n                transform 0.3s;\\n              opacity: 1;\\n            }\\n\\n            & .tsqd-button-transition-exit-to,\\n            & .tsqd-button-transition-enter {\\n              transform: \",\n        \";\\n              opacity: 0;\\n            }\\n          \"\n    ]);\n    _templateObject15 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject16() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        flex-direction: column;\\n        background-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject16 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject17() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex-direction: row;\\n      background-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject17 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject18() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            min-width: min-content;\\n          \"\n    ]);\n    _templateObject18 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject19() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        flex-direction: column;\\n        background-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject19 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject20() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex-direction: row;\\n      background-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject20 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject21() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            min-width: min-content;\\n          \"\n    ]);\n    _templateObject21 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject22() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n              height: 50%;\\n              max-height: 50%;\\n            \"\n    ]);\n    _templateObject22 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject23() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n              height: 100%;\\n              max-height: 100%;\\n            \"\n    ]);\n    _templateObject23 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject24() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n      \"\n    ]);\n    _templateObject24 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject25() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n    \"\n    ]);\n    _templateObject25 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject26() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n      \"\n    ]);\n    _templateObject26 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject27() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n    \"\n    ]);\n    _templateObject27 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject28() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            cursor: pointer;\\n            &:hover {\\n              background: \",\n        \"\",\n        \";\\n            }\\n          \"\n    ]);\n    _templateObject28 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject29() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n            width: \",\n        \";\\n            height: \",\n        \";\\n            border-radius: \",\n        \";\\n            background-color: \",\n        \";\\n          \"\n    ]);\n    _templateObject29 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject30() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n              background-color: \",\n        \";\\n              color: \",\n        \";\\n            \"\n    ]);\n    _templateObject30 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject31() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n        border-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject31 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject32() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      border-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject32 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject33() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                  color: \",\n        \";\\n                \"\n    ]);\n    _templateObject33 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject34() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                  background-color: \",\n        \";\\n                \"\n    ]);\n    _templateObject34 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject35() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                  background-color: \",\n        \";\\n                \"\n    ]);\n    _templateObject35 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject36() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject36 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject37() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject37 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject38() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject38 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject39() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject39 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject40() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject40 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject41() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject41 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject42() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject42 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject43() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject43 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject44() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                color: \",\n        \";\\n              \"\n    ]);\n    _templateObject44 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject45() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n                background-color: \",\n        \";\\n              \"\n    ]);\n    _templateObject45 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject46() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n        background-color: \",\n        \";\\n        color: \",\n        \";\\n        border-color: \",\n        \";\\n      \"\n    ]);\n    _templateObject46 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject47() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      border-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject47 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject48() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      z-index: 100000;\\n      position: fixed;\\n      padding: 4px;\\n      text-align: left;\\n\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 9999px;\\n      box-shadow: \",\n        \";\\n      overflow: hidden;\\n\\n      & div {\\n        position: absolute;\\n        top: -8px;\\n        left: -8px;\\n        right: -8px;\\n        bottom: -8px;\\n        border-radius: 9999px;\\n\\n        & svg {\\n          position: absolute;\\n          width: 100%;\\n          height: 100%;\\n        }\\n        filter: blur(6px) saturate(1.2) contrast(1.1);\\n      }\\n\\n      &:focus-within {\\n        outline-offset: 2px;\\n        outline: 3px solid \",\n        \";\\n      }\\n\\n      & button {\\n        position: relative;\\n        z-index: 1;\\n        padding: 0;\\n        border-radius: 9999px;\\n        background-color: transparent;\\n        border: none;\\n        height: 40px;\\n        display: flex;\\n        width: 40px;\\n        overflow: hidden;\\n        cursor: pointer;\\n        outline: none;\\n        & svg {\\n          position: absolute;\\n          width: 100%;\\n          height: 100%;\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject48 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject49() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: fixed;\\n      z-index: 9999;\\n      display: flex;\\n      gap: \",\n        \";\\n      & * {\\n        box-sizing: border-box;\\n        text-transform: none;\\n      }\\n\\n      & *::-webkit-scrollbar {\\n        width: 7px;\\n      }\\n\\n      & *::-webkit-scrollbar-track {\\n        background: transparent;\\n      }\\n\\n      & *::-webkit-scrollbar-thumb {\\n        background: \",\n        \";\\n      }\\n\\n      & *::-webkit-scrollbar-thumb:hover {\\n        background: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject49 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject50() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 12px;\\n      right: 12px;\\n    \"\n    ]);\n    _templateObject50 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject51() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 12px;\\n      left: 12px;\\n    \"\n    ]);\n    _templateObject51 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject52() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 12px;\\n      left: 12px;\\n    \"\n    ]);\n    _templateObject52 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject53() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 12px;\\n      right: 12px;\\n    \"\n    ]);\n    _templateObject53 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject54() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: relative;\\n    \"\n    ]);\n    _templateObject54 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject55() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 0;\\n      right: 0;\\n      left: 0;\\n      max-height: 90%;\\n      min-height: \",\n        \";\\n      border-bottom: \",\n        \" 1px solid;\\n    \"\n    ]);\n    _templateObject55 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject56() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      right: 0;\\n      left: 0;\\n      max-height: 90%;\\n      min-height: \",\n        \";\\n      border-top: \",\n        \" 1px solid;\\n    \"\n    ]);\n    _templateObject56 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject57() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      right: 0;\\n      top: 0;\\n      border-left: \",\n        \" 1px solid;\\n      max-width: 90%;\\n    \"\n    ]);\n    _templateObject57 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject58() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      left: 0;\\n      top: 0;\\n      border-right: \",\n        \" 1px solid;\\n      max-width: 90%;\\n    \"\n    ]);\n    _templateObject58 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject59() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: absolute;\\n      cursor: pointer;\\n      z-index: 5;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      outline: none;\\n      background-color: \",\n        \";\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline: 2px solid \",\n        \";\\n      }\\n      & svg {\\n        color: \",\n        \";\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject59 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject60() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      right: \",\n        \";\\n      transform: translate(0, 100%);\\n      border-right: \",\n        \" 1px solid;\\n      border-left: \",\n        \" 1px solid;\\n      border-top: none;\\n      border-bottom: \",\n        \" 1px solid;\\n      border-radius: 0px 0px \",\n        \" \",\n        \";\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        bottom: 100%;\\n        left: -\",\n        \";\\n        height: \",\n        \";\\n        width: calc(100% + \",\n        \");\\n      }\\n\\n      & svg {\\n        transform: rotate(180deg);\\n      }\\n    \"\n    ]);\n    _templateObject60 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject61() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 0;\\n      right: \",\n        \";\\n      transform: translate(0, -100%);\\n      border-right: \",\n        \" 1px solid;\\n      border-left: \",\n        \" 1px solid;\\n      border-top: \",\n        \" 1px solid;\\n      border-bottom: none;\\n      border-radius: \",\n        \" \",\n        \" 0px 0px;\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        top: 100%;\\n        left: -\",\n        \";\\n        height: \",\n        \";\\n        width: calc(100% + \",\n        \");\\n      }\\n    \"\n    ]);\n    _templateObject61 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject62() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: \",\n        \";\\n      left: 0;\\n      transform: translate(-100%, 0);\\n      border-right: none;\\n      border-left: \",\n        \" 1px solid;\\n      border-top: \",\n        \" 1px solid;\\n      border-bottom: \",\n        \" 1px solid;\\n      border-radius: \",\n        \" 0px 0px \",\n        \";\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        left: 100%;\\n        height: calc(100% + \",\n        \");\\n        width: \",\n        \";\\n      }\\n\\n      & svg {\\n        transform: rotate(-90deg);\\n      }\\n    \"\n    ]);\n    _templateObject62 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject63() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: \",\n        \";\\n      right: 0;\\n      transform: translate(100%, 0);\\n      border-left: none;\\n      border-right: \",\n        \" 1px solid;\\n      border-top: \",\n        \" 1px solid;\\n      border-bottom: \",\n        \" 1px solid;\\n      border-radius: 0px \",\n        \" \",\n        \" 0px;\\n      padding: \",\n        \" \",\n        \" \",\n        \" \",\n        \";\\n\\n      &::after {\\n        content: ' ';\\n        position: absolute;\\n        right: 100%;\\n        height: calc(100% + \",\n        \");\\n        width: \",\n        \";\\n      }\\n\\n      & svg {\\n        transform: rotate(90deg);\\n      }\\n    \"\n    ]);\n    _templateObject63 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject64() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex: 1 1 700px;\\n      background-color: \",\n        \";\\n      display: flex;\\n      flex-direction: column;\\n      & * {\\n        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      }\\n    \"\n    ]);\n    _templateObject64 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject65() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: absolute;\\n      transition: background-color 0.125s ease;\\n      &:hover {\\n        background-color: \",\n        \"\",\n        \";\\n      }\\n      z-index: 4;\\n    \"\n    ]);\n    _templateObject65 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject66() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      bottom: 0;\\n      width: 100%;\\n      height: 3px;\\n      cursor: ns-resize;\\n    \"\n    ]);\n    _templateObject66 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject67() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      top: 0;\\n      width: 100%;\\n      height: 3px;\\n      cursor: ns-resize;\\n    \"\n    ]);\n    _templateObject67 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject68() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      left: 0;\\n      width: 3px;\\n      height: 100%;\\n      cursor: ew-resize;\\n    \"\n    ]);\n    _templateObject68 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject69() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      right: 0;\\n      width: 3px;\\n      height: 100%;\\n      cursor: ew-resize;\\n    \"\n    ]);\n    _templateObject69 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject70() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      padding: \",\n        \" \",\n        \";\\n      gap: \",\n        \";\\n      border-bottom: \",\n        \" 1px solid;\\n      align-items: center;\\n      & > button {\\n        padding: 0;\\n        background: transparent;\\n        border: none;\\n        display: flex;\\n        gap: \",\n        \";\\n        flex-direction: column;\\n      }\\n    \"\n    ]);\n    _templateObject70 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject71() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      align-items: center;\\n    \"\n    ]);\n    _templateObject71 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject72() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      cursor: pointer;\\n      display: flex;\\n      flex-direction: column;\\n      background-color: transparent;\\n      border: none;\\n      gap: \",\n        \";\\n      padding: 0px;\\n      &:hover {\\n        opacity: 0.7;\\n      }\\n      &:focus-visible {\\n        outline-offset: 4px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject72 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject73() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n      font-weight: \",\n        \";\\n      line-height: \",\n        \";\\n      white-space: nowrap;\\n      color: \",\n        \";\\n    \"\n    ]);\n    _templateObject73 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject74() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-weight: \",\n        \";\\n      font-size: \",\n        \";\\n      background: linear-gradient(\\n        to right,\\n        \",\n        \"\\n      );\\n      background-clip: text;\\n      -webkit-background-clip: text;\\n      line-height: 1;\\n      -webkit-text-fill-color: transparent;\\n      white-space: nowrap;\\n    \"\n    ]);\n    _templateObject74 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject75() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      height: min-content;\\n    \"\n    ]);\n    _templateObject75 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject76() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      box-sizing: border-box;\\n      height: \",\n        \";\\n      background: \",\n        \";\\n      color: \",\n        \";\\n      border-radius: \",\n        \";\\n      font-size: \",\n        \";\\n      padding: \",\n        \";\\n      padding-left: \",\n        \";\\n      align-items: center;\\n      font-weight: \",\n        \";\\n      border: \",\n        \";\\n      user-select: none;\\n      position: relative;\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject76 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject77() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n    \"\n    ]);\n    _templateObject77 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject78() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n      padding: 0 5px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      color: \",\n        \";\\n      background-color: \",\n        \";\\n      border-radius: 2px;\\n      font-variant-numeric: tabular-nums;\\n      height: \",\n        \";\\n    \"\n    ]);\n    _templateObject78 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject79() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      position: absolute;\\n      z-index: 1;\\n      background-color: \",\n        \";\\n      top: 100%;\\n      left: 50%;\\n      transform: translate(-50%, calc(\",\n        \"));\\n      padding: \",\n        \" \",\n        \";\\n      border-radius: \",\n        \";\\n      font-size: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      color: \",\n        \";\\n\\n      &::before {\\n        top: 0px;\\n        content: ' ';\\n        display: block;\\n        left: 50%;\\n        transform: translate(-50%, -100%);\\n        position: absolute;\\n        border-color: transparent transparent\\n          \",\n        \" transparent;\\n        border-style: solid;\\n        border-width: 7px;\\n        /* transform: rotate(180deg); */\\n      }\\n\\n      &::after {\\n        top: 0px;\\n        content: ' ';\\n        display: block;\\n        left: 50%;\\n        transform: translate(-50%, calc(-100% + 2px));\\n        position: absolute;\\n        border-color: transparent transparent\\n          \",\n        \" transparent;\\n        border-style: solid;\\n        border-width: 7px;\\n      }\\n    \"\n    ]);\n    _templateObject79 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject80() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n      & > button {\\n        cursor: pointer;\\n        padding: \",\n        \" \",\n        \" \",\n        \"\\n          \",\n        \";\\n        border-radius: \",\n        \";\\n        background-color: \",\n        \";\\n        border: 1px solid \",\n        \";\\n        color: \",\n        \";\\n        font-size: \",\n        \";\\n        display: flex;\\n        align-items: center;\\n        line-height: \",\n        \";\\n        gap: \",\n        \";\\n        max-width: 160px;\\n        &:focus-visible {\\n          outline-offset: 2px;\\n          border-radius: \",\n        \";\\n          outline: 2px solid \",\n        \";\\n        }\\n        & svg {\\n          width: \",\n        \";\\n          height: \",\n        \";\\n          color: \",\n        \";\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject80 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject81() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      padding: \",\n        \" \",\n        \";\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      display: flex;\\n      box-sizing: content-box;\\n      align-items: center;\\n      gap: \",\n        \";\\n      max-width: 160px;\\n      min-width: 100px;\\n      border: 1px solid \",\n        \";\\n      height: min-content;\\n      color: \",\n        \";\\n      & > svg {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      & input {\\n        font-size: \",\n        \";\\n        width: 100%;\\n        background-color: \",\n        \";\\n        border: none;\\n        padding: 0;\\n        line-height: \",\n        \";\\n        color: \",\n        \";\\n        &::placeholder {\\n          color: \",\n        \";\\n        }\\n        &:focus {\\n          outline: none;\\n        }\\n      }\\n\\n      &:focus-within {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject81 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject82() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      padding: \",\n        \" \",\n        \";\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      display: flex;\\n      align-items: center;\\n      gap: \",\n        \";\\n      box-sizing: content-box;\\n      max-width: 160px;\\n      border: 1px solid \",\n        \";\\n      height: min-content;\\n      & > svg {\\n        color: \",\n        \";\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      & > select {\\n        appearance: none;\\n        color: \",\n        \";\\n        min-width: 100px;\\n        line-height: \",\n        \";\\n        font-size: \",\n        \";\\n        background-color: \",\n        \";\\n        border: none;\\n        &:focus {\\n          outline: none;\\n        }\\n      }\\n      &:focus-within {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject82 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject83() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      gap: \",\n        \";\\n    \"\n    ]);\n    _templateObject83 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject84() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      width: \",\n        \";\\n      height: \",\n        \";\\n      justify-content: center;\\n      display: flex;\\n      align-items: center;\\n      gap: \",\n        \";\\n      max-width: 160px;\\n      cursor: pointer;\\n      padding: 0;\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      & svg {\\n        color: \",\n        \";\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject84 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject85() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      & svg {\\n        stroke: \",\n        \";\\n        fill: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject85 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject86() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex: 1;\\n      overflow-y: auto;\\n      & > div {\\n        display: flex;\\n        flex-direction: column;\\n      }\\n    \"\n    ]);\n    _templateObject86 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject87() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      padding: 0;\\n      border: none;\\n      cursor: pointer;\\n      color: \",\n        \";\\n      background-color: \",\n        \";\\n      line-height: 1;\\n      &:focus {\\n        outline: none;\\n      }\\n      &:focus-visible {\\n        outline-offset: -2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n      &:hover .tsqd-query-hash {\\n        background-color: \",\n        \";\\n      }\\n\\n      & .tsqd-query-observer-count {\\n        padding: 0 \",\n        \";\\n        user-select: none;\\n        min-width: \",\n        \";\\n        align-self: stretch;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        font-size: \",\n        \";\\n        font-weight: \",\n        \";\\n        border-bottom-width: 1px;\\n        border-bottom-style: solid;\\n        border-bottom: 1px solid \",\n        \";\\n      }\\n      & .tsqd-query-hash {\\n        user-select: text;\\n        font-size: \",\n        \";\\n        display: flex;\\n        align-items: center;\\n        min-height: \",\n        \";\\n        flex: 1;\\n        padding: \",\n        \" \",\n        \";\\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\\n          'Liberation Mono', 'Courier New', monospace;\\n        border-bottom: 1px solid \",\n        \";\\n        text-align: left;\\n        text-overflow: clip;\\n        word-break: break-word;\\n      }\\n\\n      & .tsqd-query-disabled-indicator {\\n        align-self: stretch;\\n        display: flex;\\n        align-items: center;\\n        padding: 0 \",\n        \";\\n        color: \",\n        \";\\n        background-color: \",\n        \";\\n        border-bottom: 1px solid \",\n        \";\\n        font-size: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject87 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject88() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n    \"\n    ]);\n    _templateObject88 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject89() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex: 1 1 700px;\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      display: flex;\\n      flex-direction: column;\\n      overflow-y: auto;\\n      display: flex;\\n      text-align: left;\\n    \"\n    ]);\n    _templateObject89 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject90() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      position: sticky;\\n      top: 0;\\n      z-index: 2;\\n      background-color: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      font-weight: \",\n        \";\\n      font-size: \",\n        \";\\n      line-height: \",\n        \";\\n      text-align: left;\\n    \"\n    ]);\n    _templateObject90 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject91() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      margin: \",\n        \" 0px \",\n        \" 0px;\\n      & > div {\\n        display: flex;\\n        align-items: stretch;\\n        padding: 0 \",\n        \";\\n        line-height: \",\n        \";\\n        justify-content: space-between;\\n        & > span {\\n          font-size: \",\n        \";\\n        }\\n        & > span:nth-child(2) {\\n          font-variant-numeric: tabular-nums;\\n        }\\n      }\\n\\n      & > div:first-child {\\n        margin-bottom: \",\n        \";\\n      }\\n\\n      & code {\\n        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\\n          'Liberation Mono', 'Courier New', monospace;\\n        margin: 0;\\n        font-size: \",\n        \";\\n        line-height: \",\n        \";\\n      }\\n\\n      & pre {\\n        margin: 0;\\n        display: flex;\\n        align-items: center;\\n      }\\n    \"\n    ]);\n    _templateObject91 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject92() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border: 1px solid \",\n        \";\\n      border-radius: \",\n        \";\\n      font-weight: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n    \"\n    ]);\n    _templateObject92 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject93() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      flex-wrap: wrap;\\n      margin: \",\n        \" 0px \",\n        \" 0px;\\n      display: flex;\\n      gap: \",\n        \";\\n      padding: 0px \",\n        \";\\n      & > button {\\n        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n        font-size: \",\n        \";\\n        padding: \",\n        \" \",\n        \";\\n        display: flex;\\n        border-radius: \",\n        \";\\n        background-color: \",\n        \";\\n        border: 1px solid \",\n        \";\\n        align-items: center;\\n        gap: \",\n        \";\\n        font-weight: \",\n        \";\\n        line-height: \",\n        \";\\n        cursor: pointer;\\n        &:focus-visible {\\n          outline-offset: 2px;\\n          border-radius: \",\n        \";\\n          outline: 2px solid \",\n        \";\\n        }\\n        &:hover {\\n          background-color: \",\n        \";\\n        }\\n\\n        &:disabled {\\n          opacity: 0.6;\\n          cursor: not-allowed;\\n        }\\n\\n        & > span {\\n          width: \",\n        \";\\n          height: \",\n        \";\\n          border-radius: \",\n        \";\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject93 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject94() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      font-size: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      display: flex;\\n      border-radius: \",\n        \";\\n      overflow: hidden;\\n      background-color: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      align-items: center;\\n      gap: \",\n        \";\\n      font-weight: \",\n        \";\\n      line-height: \",\n        \";\\n      color: \",\n        \";\\n      cursor: pointer;\\n      position: relative;\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      & > span {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n        border-radius: \",\n        \";\\n      }\\n      &:focus-within {\\n        outline-offset: 2px;\\n        border-radius: \",\n        \";\\n        outline: 2px solid \",\n        \";\\n      }\\n      & select {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        appearance: none;\\n        background-color: transparent;\\n        border: none;\\n        color: transparent;\\n        outline: none;\\n      }\\n\\n      & svg path {\\n        stroke: \",\n        \";\\n      }\\n      & svg {\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject94 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject95() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      & * {\\n        font-family: ui-sans-serif, Inter, system-ui, sans-serif, sans-serif;\\n      }\\n      flex-direction: column;\\n      gap: \",\n        \";\\n      border-radius: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      background-color: \",\n        \";\\n      font-size: \",\n        \";\\n      color: \",\n        \";\\n      z-index: 99999;\\n      min-width: 120px;\\n      padding: \",\n        \";\\n    \"\n    ]);\n    _templateObject95 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject96() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      border-radius: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      cursor: pointer;\\n      background-color: transparent;\\n      border: none;\\n      color: \",\n        \";\\n      & svg {\\n        color: \",\n        \";\\n        transform: rotate(-90deg);\\n        width: \",\n        \";\\n        height: \",\n        \";\\n      }\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        outline: 2px solid \",\n        \";\\n      }\\n      &.data-disabled {\\n        opacity: 0.6;\\n        cursor: not-allowed;\\n      }\\n    \"\n    ]);\n    _templateObject96 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject97() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      padding: \",\n        \" \",\n        \";\\n      font-weight: \",\n        \";\\n      border-bottom: 1px solid \",\n        \";\\n      color: \",\n        \";\\n      font-size: \",\n        \";\\n    \"\n    ]);\n    _templateObject97 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject98() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      color: \",\n        \";\\n      font-size: \",\n        \";\\n      border-radius: \",\n        \";\\n      padding: \",\n        \" \",\n        \";\\n      cursor: pointer;\\n      background-color: transparent;\\n      border: none;\\n      & svg {\\n        color: \",\n        \";\\n      }\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n      &:focus-visible {\\n        outline-offset: 2px;\\n        outline: 2px solid \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject98 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject99() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      background-color: \",\n        \";\\n      color: \",\n        \";\\n      & svg {\\n        color: \",\n        \";\\n      }\\n      &:hover {\\n        background-color: \",\n        \";\\n      }\\n    \"\n    ]);\n    _templateObject99 = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject100() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n      border-radius: \",\n        \";\\n      background-color: \",\n        \";\\n      border: 1px solid \",\n        \";\\n      display: flex;\\n      padding: 0;\\n      font-size: \",\n        \";\\n      color: \",\n        \";\\n      overflow: hidden;\\n\\n      &:has(:focus-visible) {\\n        outline: 2px solid \",\n        \";\\n      }\\n\\n      & .tsqd-radio-toggle {\\n        opacity: 0.5;\\n        display: flex;\\n        & label {\\n          display: flex;\\n          align-items: center;\\n          cursor: pointer;\\n          line-height: \",\n        \";\\n        }\\n\\n        & label:hover {\\n          background-color: \",\n        \";\\n        }\\n      }\\n\\n      & > [data-checked] {\\n        opacity: 1;\\n        background-color: \",\n        \";\\n        & label:hover {\\n          background-color: \",\n        \";\\n        }\\n      }\\n\\n      & .tsqd-radio-toggle:first-child {\\n        & label {\\n          padding: 0 \",\n        \" 0 \",\n        \";\\n        }\\n        border-right: 1px solid \",\n        \";\\n      }\\n\\n      & .tsqd-radio-toggle:nth-child(2) {\\n        & label {\\n          padding: 0 \",\n        \" 0 \",\n        \";\\n        }\\n      }\\n    \"\n    ]);\n    _templateObject100 = function() {\n        return data;\n    };\n    return data;\n}\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$(), _s27 = $RefreshSig$(), _s28 = $RefreshSig$(), _s29 = $RefreshSig$(), _s30 = $RefreshSig$(), _s31 = $RefreshSig$(), _s32 = $RefreshSig$(), _s33 = $RefreshSig$(), _s34 = $RefreshSig$(), _s35 = $RefreshSig$(), _s36 = $RefreshSig$(), _s37 = $RefreshSig$(), _s38 = $RefreshSig$(), _s39 = $RefreshSig$(), _s40 = $RefreshSig$(), _s41 = $RefreshSig$(), _s42 = $RefreshSig$(), _s43 = $RefreshSig$(), _s44 = $RefreshSig$(), _s45 = $RefreshSig$(), _s46 = $RefreshSig$(), _s47 = $RefreshSig$(), _s48 = $RefreshSig$(), _s49 = $RefreshSig$(), _s50 = $RefreshSig$(), _s51 = $RefreshSig$(), _s52 = $RefreshSig$(), _s53 = $RefreshSig$(), _s54 = $RefreshSig$(), _s55 = $RefreshSig$(), _s56 = $RefreshSig$(), _s57 = $RefreshSig$(), _s58 = $RefreshSig$(), _s59 = $RefreshSig$(), _s60 = $RefreshSig$(), _s61 = $RefreshSig$(), _s62 = $RefreshSig$(), _s63 = $RefreshSig$(), _s64 = $RefreshSig$(), _s65 = $RefreshSig$(), _s66 = $RefreshSig$(), _s67 = $RefreshSig$();\n\n// ../../node_modules/.pnpm/@tanstack+match-sorter-utils@8.11.8/node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs\nvar characterMap = {\n    À: \"A\",\n    Á: \"A\",\n    Â: \"A\",\n    Ã: \"A\",\n    Ä: \"A\",\n    Å: \"A\",\n    Ấ: \"A\",\n    Ắ: \"A\",\n    Ẳ: \"A\",\n    Ẵ: \"A\",\n    Ặ: \"A\",\n    Æ: \"AE\",\n    Ầ: \"A\",\n    Ằ: \"A\",\n    Ȃ: \"A\",\n    Ç: \"C\",\n    Ḉ: \"C\",\n    È: \"E\",\n    É: \"E\",\n    Ê: \"E\",\n    Ë: \"E\",\n    Ế: \"E\",\n    Ḗ: \"E\",\n    Ề: \"E\",\n    Ḕ: \"E\",\n    Ḝ: \"E\",\n    Ȇ: \"E\",\n    Ì: \"I\",\n    Í: \"I\",\n    Î: \"I\",\n    Ï: \"I\",\n    Ḯ: \"I\",\n    Ȋ: \"I\",\n    Ð: \"D\",\n    Ñ: \"N\",\n    Ò: \"O\",\n    Ó: \"O\",\n    Ô: \"O\",\n    Õ: \"O\",\n    Ö: \"O\",\n    Ø: \"O\",\n    Ố: \"O\",\n    Ṍ: \"O\",\n    Ṓ: \"O\",\n    Ȏ: \"O\",\n    Ù: \"U\",\n    Ú: \"U\",\n    Û: \"U\",\n    Ü: \"U\",\n    Ý: \"Y\",\n    à: \"a\",\n    á: \"a\",\n    â: \"a\",\n    ã: \"a\",\n    ä: \"a\",\n    å: \"a\",\n    ấ: \"a\",\n    ắ: \"a\",\n    ẳ: \"a\",\n    ẵ: \"a\",\n    ặ: \"a\",\n    æ: \"ae\",\n    ầ: \"a\",\n    ằ: \"a\",\n    ȃ: \"a\",\n    ç: \"c\",\n    ḉ: \"c\",\n    è: \"e\",\n    é: \"e\",\n    ê: \"e\",\n    ë: \"e\",\n    ế: \"e\",\n    ḗ: \"e\",\n    ề: \"e\",\n    ḕ: \"e\",\n    ḝ: \"e\",\n    ȇ: \"e\",\n    ì: \"i\",\n    í: \"i\",\n    î: \"i\",\n    ï: \"i\",\n    ḯ: \"i\",\n    ȋ: \"i\",\n    ð: \"d\",\n    ñ: \"n\",\n    ò: \"o\",\n    ó: \"o\",\n    ô: \"o\",\n    õ: \"o\",\n    ö: \"o\",\n    ø: \"o\",\n    ố: \"o\",\n    ṍ: \"o\",\n    ṓ: \"o\",\n    ȏ: \"o\",\n    ù: \"u\",\n    ú: \"u\",\n    û: \"u\",\n    ü: \"u\",\n    ý: \"y\",\n    ÿ: \"y\",\n    Ā: \"A\",\n    ā: \"a\",\n    Ă: \"A\",\n    ă: \"a\",\n    Ą: \"A\",\n    ą: \"a\",\n    Ć: \"C\",\n    ć: \"c\",\n    Ĉ: \"C\",\n    ĉ: \"c\",\n    Ċ: \"C\",\n    ċ: \"c\",\n    Č: \"C\",\n    č: \"c\",\n    C̆: \"C\",\n    c̆: \"c\",\n    Ď: \"D\",\n    ď: \"d\",\n    Đ: \"D\",\n    đ: \"d\",\n    Ē: \"E\",\n    ē: \"e\",\n    Ĕ: \"E\",\n    ĕ: \"e\",\n    Ė: \"E\",\n    ė: \"e\",\n    Ę: \"E\",\n    ę: \"e\",\n    Ě: \"E\",\n    ě: \"e\",\n    Ĝ: \"G\",\n    Ǵ: \"G\",\n    ĝ: \"g\",\n    ǵ: \"g\",\n    Ğ: \"G\",\n    ğ: \"g\",\n    Ġ: \"G\",\n    ġ: \"g\",\n    Ģ: \"G\",\n    ģ: \"g\",\n    Ĥ: \"H\",\n    ĥ: \"h\",\n    Ħ: \"H\",\n    ħ: \"h\",\n    Ḫ: \"H\",\n    ḫ: \"h\",\n    Ĩ: \"I\",\n    ĩ: \"i\",\n    Ī: \"I\",\n    ī: \"i\",\n    Ĭ: \"I\",\n    ĭ: \"i\",\n    Į: \"I\",\n    į: \"i\",\n    İ: \"I\",\n    ı: \"i\",\n    Ĳ: \"IJ\",\n    ĳ: \"ij\",\n    Ĵ: \"J\",\n    ĵ: \"j\",\n    Ķ: \"K\",\n    ķ: \"k\",\n    Ḱ: \"K\",\n    ḱ: \"k\",\n    K̆: \"K\",\n    k̆: \"k\",\n    Ĺ: \"L\",\n    ĺ: \"l\",\n    Ļ: \"L\",\n    ļ: \"l\",\n    Ľ: \"L\",\n    ľ: \"l\",\n    Ŀ: \"L\",\n    ŀ: \"l\",\n    Ł: \"l\",\n    ł: \"l\",\n    Ḿ: \"M\",\n    ḿ: \"m\",\n    M̆: \"M\",\n    m̆: \"m\",\n    Ń: \"N\",\n    ń: \"n\",\n    Ņ: \"N\",\n    ņ: \"n\",\n    Ň: \"N\",\n    ň: \"n\",\n    ŉ: \"n\",\n    N̆: \"N\",\n    n̆: \"n\",\n    Ō: \"O\",\n    ō: \"o\",\n    Ŏ: \"O\",\n    ŏ: \"o\",\n    Ő: \"O\",\n    ő: \"o\",\n    Œ: \"OE\",\n    œ: \"oe\",\n    P̆: \"P\",\n    p̆: \"p\",\n    Ŕ: \"R\",\n    ŕ: \"r\",\n    Ŗ: \"R\",\n    ŗ: \"r\",\n    Ř: \"R\",\n    ř: \"r\",\n    R̆: \"R\",\n    r̆: \"r\",\n    Ȓ: \"R\",\n    ȓ: \"r\",\n    Ś: \"S\",\n    ś: \"s\",\n    Ŝ: \"S\",\n    ŝ: \"s\",\n    Ş: \"S\",\n    Ș: \"S\",\n    ș: \"s\",\n    ş: \"s\",\n    Š: \"S\",\n    š: \"s\",\n    Ţ: \"T\",\n    ţ: \"t\",\n    ț: \"t\",\n    Ț: \"T\",\n    Ť: \"T\",\n    ť: \"t\",\n    Ŧ: \"T\",\n    ŧ: \"t\",\n    T̆: \"T\",\n    t̆: \"t\",\n    Ũ: \"U\",\n    ũ: \"u\",\n    Ū: \"U\",\n    ū: \"u\",\n    Ŭ: \"U\",\n    ŭ: \"u\",\n    Ů: \"U\",\n    ů: \"u\",\n    Ű: \"U\",\n    ű: \"u\",\n    Ų: \"U\",\n    ų: \"u\",\n    Ȗ: \"U\",\n    ȗ: \"u\",\n    V̆: \"V\",\n    v̆: \"v\",\n    Ŵ: \"W\",\n    ŵ: \"w\",\n    Ẃ: \"W\",\n    ẃ: \"w\",\n    X̆: \"X\",\n    x̆: \"x\",\n    Ŷ: \"Y\",\n    ŷ: \"y\",\n    Ÿ: \"Y\",\n    Y̆: \"Y\",\n    y̆: \"y\",\n    Ź: \"Z\",\n    ź: \"z\",\n    Ż: \"Z\",\n    ż: \"z\",\n    Ž: \"Z\",\n    ž: \"z\",\n    ſ: \"s\",\n    ƒ: \"f\",\n    Ơ: \"O\",\n    ơ: \"o\",\n    Ư: \"U\",\n    ư: \"u\",\n    Ǎ: \"A\",\n    ǎ: \"a\",\n    Ǐ: \"I\",\n    ǐ: \"i\",\n    Ǒ: \"O\",\n    ǒ: \"o\",\n    Ǔ: \"U\",\n    ǔ: \"u\",\n    Ǖ: \"U\",\n    ǖ: \"u\",\n    Ǘ: \"U\",\n    ǘ: \"u\",\n    Ǚ: \"U\",\n    ǚ: \"u\",\n    Ǜ: \"U\",\n    ǜ: \"u\",\n    Ứ: \"U\",\n    ứ: \"u\",\n    Ṹ: \"U\",\n    ṹ: \"u\",\n    Ǻ: \"A\",\n    ǻ: \"a\",\n    Ǽ: \"AE\",\n    ǽ: \"ae\",\n    Ǿ: \"O\",\n    ǿ: \"o\",\n    Þ: \"TH\",\n    þ: \"th\",\n    Ṕ: \"P\",\n    ṕ: \"p\",\n    Ṥ: \"S\",\n    ṥ: \"s\",\n    X́: \"X\",\n    x́: \"x\",\n    Ѓ: \"Г\",\n    ѓ: \"г\",\n    Ќ: \"К\",\n    ќ: \"к\",\n    A̋: \"A\",\n    a̋: \"a\",\n    E̋: \"E\",\n    e̋: \"e\",\n    I̋: \"I\",\n    i̋: \"i\",\n    Ǹ: \"N\",\n    ǹ: \"n\",\n    Ồ: \"O\",\n    ồ: \"o\",\n    Ṑ: \"O\",\n    ṑ: \"o\",\n    Ừ: \"U\",\n    ừ: \"u\",\n    Ẁ: \"W\",\n    ẁ: \"w\",\n    Ỳ: \"Y\",\n    ỳ: \"y\",\n    Ȁ: \"A\",\n    ȁ: \"a\",\n    Ȅ: \"E\",\n    ȅ: \"e\",\n    Ȉ: \"I\",\n    ȉ: \"i\",\n    Ȍ: \"O\",\n    ȍ: \"o\",\n    Ȑ: \"R\",\n    ȑ: \"r\",\n    Ȕ: \"U\",\n    ȕ: \"u\",\n    B̌: \"B\",\n    b̌: \"b\",\n    Č̣: \"C\",\n    č̣: \"c\",\n    Ê̌: \"E\",\n    ê̌: \"e\",\n    F̌: \"F\",\n    f̌: \"f\",\n    Ǧ: \"G\",\n    ǧ: \"g\",\n    Ȟ: \"H\",\n    ȟ: \"h\",\n    J̌: \"J\",\n    ǰ: \"j\",\n    Ǩ: \"K\",\n    ǩ: \"k\",\n    M̌: \"M\",\n    m̌: \"m\",\n    P̌: \"P\",\n    p̌: \"p\",\n    Q̌: \"Q\",\n    q̌: \"q\",\n    Ř̩: \"R\",\n    ř̩: \"r\",\n    Ṧ: \"S\",\n    ṧ: \"s\",\n    V̌: \"V\",\n    v̌: \"v\",\n    W̌: \"W\",\n    w̌: \"w\",\n    X̌: \"X\",\n    x̌: \"x\",\n    Y̌: \"Y\",\n    y̌: \"y\",\n    A̧: \"A\",\n    a̧: \"a\",\n    B̧: \"B\",\n    b̧: \"b\",\n    Ḑ: \"D\",\n    ḑ: \"d\",\n    Ȩ: \"E\",\n    ȩ: \"e\",\n    Ɛ̧: \"E\",\n    ɛ̧: \"e\",\n    Ḩ: \"H\",\n    ḩ: \"h\",\n    I̧: \"I\",\n    i̧: \"i\",\n    Ɨ̧: \"I\",\n    ɨ̧: \"i\",\n    M̧: \"M\",\n    m̧: \"m\",\n    O̧: \"O\",\n    o̧: \"o\",\n    Q̧: \"Q\",\n    q̧: \"q\",\n    U̧: \"U\",\n    u̧: \"u\",\n    X̧: \"X\",\n    x̧: \"x\",\n    Z̧: \"Z\",\n    z̧: \"z\"\n};\nvar chars = Object.keys(characterMap).join(\"|\");\nvar allAccents = new RegExp(chars, \"g\");\nfunction removeAccents(str) {\n    return str.replace(allAccents, (match)=>{\n        return characterMap[match];\n    });\n}\nvar rankings = {\n    CASE_SENSITIVE_EQUAL: 7,\n    EQUAL: 6,\n    STARTS_WITH: 5,\n    WORD_STARTS_WITH: 4,\n    CONTAINS: 3,\n    ACRONYM: 2,\n    MATCHES: 1,\n    NO_MATCH: 0\n};\nfunction rankItem(item, value, options) {\n    var _options$threshold;\n    options = options || {};\n    options.threshold = (_options$threshold = options.threshold) != null ? _options$threshold : rankings.MATCHES;\n    if (!options.accessors) {\n        const rank = getMatchRanking(item, value, options);\n        return {\n            // ends up being duplicate of 'item' in matches but consistent\n            rankedValue: item,\n            rank,\n            accessorIndex: -1,\n            accessorThreshold: options.threshold,\n            passed: rank >= options.threshold\n        };\n    }\n    const valuesToRank = getAllValuesToRank(item, options.accessors);\n    const rankingInfo = {\n        rankedValue: item,\n        rank: rankings.NO_MATCH,\n        accessorIndex: -1,\n        accessorThreshold: options.threshold,\n        passed: false\n    };\n    for(let i2 = 0; i2 < valuesToRank.length; i2++){\n        const rankValue = valuesToRank[i2];\n        let newRank = getMatchRanking(rankValue.itemValue, value, options);\n        const { minRanking, maxRanking, threshold = options.threshold } = rankValue.attributes;\n        if (newRank < minRanking && newRank >= rankings.MATCHES) {\n            newRank = minRanking;\n        } else if (newRank > maxRanking) {\n            newRank = maxRanking;\n        }\n        newRank = Math.min(newRank, maxRanking);\n        if (newRank >= threshold && newRank > rankingInfo.rank) {\n            rankingInfo.rank = newRank;\n            rankingInfo.passed = true;\n            rankingInfo.accessorIndex = i2;\n            rankingInfo.accessorThreshold = threshold;\n            rankingInfo.rankedValue = rankValue.itemValue;\n        }\n    }\n    return rankingInfo;\n}\nfunction getMatchRanking(testString, stringToRank, options) {\n    testString = prepareValueForComparison(testString, options);\n    stringToRank = prepareValueForComparison(stringToRank, options);\n    if (stringToRank.length > testString.length) {\n        return rankings.NO_MATCH;\n    }\n    if (testString === stringToRank) {\n        return rankings.CASE_SENSITIVE_EQUAL;\n    }\n    testString = testString.toLowerCase();\n    stringToRank = stringToRank.toLowerCase();\n    if (testString === stringToRank) {\n        return rankings.EQUAL;\n    }\n    if (testString.startsWith(stringToRank)) {\n        return rankings.STARTS_WITH;\n    }\n    if (testString.includes(\" \".concat(stringToRank))) {\n        return rankings.WORD_STARTS_WITH;\n    }\n    if (testString.includes(stringToRank)) {\n        return rankings.CONTAINS;\n    } else if (stringToRank.length === 1) {\n        return rankings.NO_MATCH;\n    }\n    if (getAcronym(testString).includes(stringToRank)) {\n        return rankings.ACRONYM;\n    }\n    return getClosenessRanking(testString, stringToRank);\n}\nfunction getAcronym(string) {\n    let acronym = \"\";\n    const wordsInString = string.split(\" \");\n    wordsInString.forEach((wordInString)=>{\n        const splitByHyphenWords = wordInString.split(\"-\");\n        splitByHyphenWords.forEach((splitByHyphenWord)=>{\n            acronym += splitByHyphenWord.substr(0, 1);\n        });\n    });\n    return acronym;\n}\nfunction getClosenessRanking(testString, stringToRank) {\n    let matchingInOrderCharCount = 0;\n    let charNumber = 0;\n    function findMatchingCharacter(matchChar, string, index) {\n        for(let j = index, J = string.length; j < J; j++){\n            const stringChar = string[j];\n            if (stringChar === matchChar) {\n                matchingInOrderCharCount += 1;\n                return j + 1;\n            }\n        }\n        return -1;\n    }\n    function getRanking(spread3) {\n        const spreadPercentage = 1 / spread3;\n        const inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n        const ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n        return ranking;\n    }\n    const firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n    if (firstIndex < 0) {\n        return rankings.NO_MATCH;\n    }\n    charNumber = firstIndex;\n    for(let i2 = 1, I = stringToRank.length; i2 < I; i2++){\n        const matchChar = stringToRank[i2];\n        charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n        const found = charNumber > -1;\n        if (!found) {\n            return rankings.NO_MATCH;\n        }\n    }\n    const spread2 = charNumber - firstIndex;\n    return getRanking(spread2);\n}\nfunction prepareValueForComparison(value, _ref) {\n    let { keepDiacritics } = _ref;\n    value = \"\".concat(value);\n    if (!keepDiacritics) {\n        value = removeAccents(value);\n    }\n    return value;\n}\nfunction getItemValues(item, accessor) {\n    let accessorFn = accessor;\n    if (typeof accessor === \"object\") {\n        accessorFn = accessor.accessor;\n    }\n    const value = accessorFn(item);\n    if (value == null) {\n        return [];\n    }\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [\n        String(value)\n    ];\n}\nfunction getAllValuesToRank(item, accessors) {\n    const allValues = [];\n    for(let j = 0, J = accessors.length; j < J; j++){\n        const accessor = accessors[j];\n        const attributes = getAccessorAttributes(accessor);\n        const itemValues = getItemValues(item, accessor);\n        for(let i2 = 0, I = itemValues.length; i2 < I; i2++){\n            allValues.push({\n                itemValue: itemValues[i2],\n                attributes\n            });\n        }\n    }\n    return allValues;\n}\nvar defaultKeyAttributes = {\n    maxRanking: Infinity,\n    minRanking: -Infinity\n};\nfunction getAccessorAttributes(accessor) {\n    if (typeof accessor === \"function\") {\n        return defaultKeyAttributes;\n    }\n    return {\n        ...defaultKeyAttributes,\n        ...accessor\n    };\n}\n// ../../node_modules/.pnpm/goober@2.1.13_csstype@3.1.2/node_modules/goober/dist/goober.modern.js\nvar e = {\n    data: \"\"\n};\nvar t = (t2)=> true ? ((t2 ? t2.querySelector(\"#_goober\") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement(\"style\")), {\n        innerHTML: \" \",\n        id: \"_goober\"\n    })).firstChild : 0;\nvar l = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g;\nvar a = /\\/\\*[^]*?\\*\\/|  +/g;\nvar n = /\\n+/g;\nvar o = (e2, t2)=>{\n    let r2 = \"\", l2 = \"\", a2 = \"\";\n    for(let n2 in e2){\n        let c2 = e2[n2];\n        \"@\" == n2[0] ? \"i\" == n2[1] ? r2 = n2 + \" \" + c2 + \";\" : l2 += \"f\" == n2[1] ? o(c2, n2) : n2 + \"{\" + o(c2, \"k\" == n2[1] ? \"\" : t2) + \"}\" : \"object\" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3)=>n2.replace(/(^:.*)|([^,])+/g, (t3)=>/&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + \" \" + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, \"-$&\").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + \":\" + c2 + \";\");\n    }\n    return r2 + (t2 && a2 ? t2 + \"{\" + a2 + \"}\" : a2) + l2;\n};\nvar c = {};\nvar s = (e2)=>{\n    if (\"object\" == typeof e2) {\n        let t2 = \"\";\n        for(let r2 in e2)t2 += r2 + s(e2[r2]);\n        return t2;\n    }\n    return e2;\n};\nvar i = (e2, t2, r2, i2, p2)=>{\n    let u2 = s(e2), d = c[u2] || (c[u2] = ((e3)=>{\n        let t3 = 0, r3 = 11;\n        for(; t3 < e3.length;)r3 = 101 * r3 + e3.charCodeAt(t3++) >>> 0;\n        return \"go\" + r3;\n    })(u2));\n    if (!c[d]) {\n        let t3 = u2 !== e2 ? e2 : ((e3)=>{\n            let t4, r3, o2 = [\n                {}\n            ];\n            for(; t4 = l.exec(e3.replace(a, \"\"));)t4[4] ? o2.shift() : t4[3] ? (r3 = t4[3].replace(n, \" \").trim(), o2.unshift(o2[0][r3] = o2[0][r3] || {})) : o2[0][t4[1]] = t4[2].replace(n, \" \").trim();\n            return o2[0];\n        })(e2);\n        c[d] = o(p2 ? {\n            [\"@keyframes \" + d]: t3\n        } : t3, r2 ? \"\" : \".\" + d);\n    }\n    let f = r2 && c.g ? c.g : null;\n    return r2 && (c.g = c[d]), ((e3, t3, r3, l2)=>{\n        l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r3 ? e3 + t3.data : t3.data + e3);\n    })(c[d], t2, i2, f), d;\n};\nvar p = (e2, t2, r2)=>e2.reduce((e3, l2, a2)=>{\n        let n2 = t2[a2];\n        if (n2 && n2.call) {\n            let e4 = n2(r2), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;\n            n2 = t3 ? \".\" + t3 : e4 && \"object\" == typeof e4 ? e4.props ? \"\" : o(e4, \"\") : false === e4 ? \"\" : e4;\n        }\n        return e3 + l2 + (null == n2 ? \"\" : n2);\n    }, \"\");\nfunction u(e2) {\n    let r2 = this || {}, l2 = e2.call ? e2(r2.p) : e2;\n    return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r2.p) : l2.reduce((e3, t2)=>Object.assign(e3, t2 && t2.call ? t2(r2.p) : t2), {}) : l2, t(r2.target), r2.g, r2.o, r2.k);\n}\nu.bind({\n    g: 1\n});\nu.bind({\n    k: 1\n});\n// ../../node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs\nfunction r(e2) {\n    var t2, f, n2 = \"\";\n    if (\"string\" == typeof e2 || \"number\" == typeof e2) n2 += e2;\n    else if (\"object\" == typeof e2) if (Array.isArray(e2)) for(t2 = 0; t2 < e2.length; t2++)e2[t2] && (f = r(e2[t2])) && (n2 && (n2 += \" \"), n2 += f);\n    else for(t2 in e2)e2[t2] && (n2 && (n2 += \" \"), n2 += t2);\n    return n2;\n}\nfunction clsx() {\n    for(var e2, t2, f = 0, n2 = \"\"; f < arguments.length;)(e2 = arguments[f++]) && (t2 = r(e2)) && (n2 && (n2 += \" \"), n2 += t2);\n    return n2;\n}\n// ../../node_modules/.pnpm/@solid-primitives+transition-group@1.0.3_solid-js@1.8.14/node_modules/@solid-primitives/transition-group/dist/index.js\nvar noop = ()=>{};\nfunction createListTransition(source, options) {\n    _s();\n    const initSource = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(source);\n    if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n        const copy = initSource.slice();\n        return ()=>copy;\n    }\n    const { onChange } = options;\n    let prevSet = new Set(options.appear ? void 0 : initSource);\n    const exiting = /* @__PURE__ */ new WeakSet();\n    const [toRemove, setToRemove] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([], {\n        equals: false\n    });\n    const [isTransitionPending] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useTransition)();\n    const finishRemoved = options.exitMethod === \"remove\" ? noop : (els)=>{\n        setToRemove((p2)=>(p2.push.apply(p2, els), p2));\n        for (const el of els)exiting.delete(el);\n    };\n    const handleRemoved = options.exitMethod === \"remove\" ? noop : options.exitMethod === \"keep-index\" ? (els, el, i2)=>els.splice(i2, 0, el) : (els, el)=>els.push(el);\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)((prev)=>{\n        const elsToRemove = toRemove();\n        const sourceList = source();\n        sourceList[_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$TRACK];\n        if ((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(isTransitionPending)) {\n            isTransitionPending();\n            return prev;\n        }\n        if (elsToRemove.length) {\n            const next = prev.filter((e2)=>!elsToRemove.includes(e2));\n            elsToRemove.length = 0;\n            onChange({\n                list: next,\n                added: [],\n                removed: [],\n                unchanged: next,\n                finishRemoved\n            });\n            return next;\n        }\n        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            const nextSet = new Set(sourceList);\n            const next = sourceList.slice();\n            const added = [];\n            const removed = [];\n            const unchanged = [];\n            for (const el of sourceList){\n                (prevSet.has(el) ? unchanged : added).push(el);\n            }\n            let nothingChanged = !added.length;\n            for(let i2 = 0; i2 < prev.length; i2++){\n                const el = prev[i2];\n                if (!nextSet.has(el)) {\n                    if (!exiting.has(el)) {\n                        removed.push(el);\n                        exiting.add(el);\n                    }\n                    handleRemoved(next, el, i2);\n                }\n                if (nothingChanged && el !== next[i2]) nothingChanged = false;\n            }\n            if (!removed.length && nothingChanged) return prev;\n            onChange({\n                list: next,\n                added,\n                removed,\n                unchanged,\n                finishRemoved\n            });\n            prevSet = nextSet;\n            return next;\n        });\n    }, options.appear ? [] : initSource.slice());\n}\n_s(createListTransition, \"NgwygDCtH1iRpwx4nv2y42vGpHo=\", false, function() {\n    return [\n        _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useTransition\n    ];\n});\n// ../../node_modules/.pnpm/@solid-primitives+utils@6.2.1_solid-js@1.8.14/node_modules/@solid-primitives/utils/dist/chunk/R5675YMU.js\nvar isClient = !_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer;\nvar isDev = isClient && !!_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.DEV;\nvar noop2 = ()=>void 0;\nvar isNonNullable = (i2)=>i2 != null;\nvar filterNonNullable = (arr)=>arr.filter(isNonNullable);\nfunction chain(callbacks) {\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        for (const callback of callbacks)callback && callback(...args);\n    };\n}\nfunction reverseChain(callbacks) {\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        for(let i2 = callbacks.length - 1; i2 >= 0; i2--){\n            const callback = callbacks[i2];\n            callback && callback(...args);\n        }\n    };\n}\nvar access = (v)=>typeof v === \"function\" && !v.length ? v() : v;\nvar asArray = (value)=>Array.isArray(value) ? value : value ? [\n        value\n    ] : [];\nfunction accessWith(valueOrFn) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    return typeof valueOrFn === \"function\" ? valueOrFn(...args) : valueOrFn;\n}\nvar tryOnCleanup = isDev ? (fn)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getOwner)() ? (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(fn) : fn : _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup;\nfunction handleDiffArray(current, prev, handleAdded, handleRemoved) {\n    const currLength = current.length;\n    const prevLength = prev.length;\n    let i2 = 0;\n    if (!prevLength) {\n        for(; i2 < currLength; i2++)handleAdded(current[i2]);\n        return;\n    }\n    if (!currLength) {\n        for(; i2 < prevLength; i2++)handleRemoved(prev[i2]);\n        return;\n    }\n    for(; i2 < prevLength; i2++){\n        if (prev[i2] !== current[i2]) break;\n    }\n    let prevEl;\n    let currEl;\n    prev = prev.slice(i2);\n    current = current.slice(i2);\n    for (prevEl of prev){\n        if (!current.includes(prevEl)) handleRemoved(prevEl);\n    }\n    for (currEl of current){\n        if (!prev.includes(currEl)) handleAdded(currEl);\n    }\n}\n// ../../node_modules/.pnpm/@solid-primitives+refs@1.0.5_solid-js@1.8.14/node_modules/@solid-primitives/refs/dist/index.js\nfunction mergeRefs() {\n    for(var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++){\n        refs[_key] = arguments[_key];\n    }\n    return chain(refs);\n}\nvar defaultElementPredicate = _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer ? (item)=>item != null && typeof item === \"object\" && \"t\" in item : (item)=>item instanceof Element;\nfunction getResolvedElements(value, predicate) {\n    if (predicate(value)) return value;\n    if (typeof value === \"function\" && !value.length) return getResolvedElements(value(), predicate);\n    if (Array.isArray(value)) {\n        const results = [];\n        for (const item of value){\n            const result = getResolvedElements(item, predicate);\n            if (result) Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n        }\n        return results.length ? results : null;\n    }\n    return null;\n}\nfunction resolveElements(fn) {\n    let predicate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultElementPredicate, serverPredicate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultElementPredicate;\n    const children2 = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(fn);\n    const memo = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>getResolvedElements(children2(), _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer ? serverPredicate : predicate));\n    memo.toArray = ()=>{\n        const value = memo();\n        return Array.isArray(value) ? value : value ? [\n            value\n        ] : [];\n    };\n    return memo;\n}\n// ../../node_modules/.pnpm/solid-transition-group@0.2.3_solid-js@1.8.14/node_modules/solid-transition-group/dist/index.js\nfunction createClassnames(props) {\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const name = props.name || \"s\";\n        return {\n            enterActive: (props.enterActiveClass || name + \"-enter-active\").split(\" \"),\n            enter: (props.enterClass || name + \"-enter\").split(\" \"),\n            enterTo: (props.enterToClass || name + \"-enter-to\").split(\" \"),\n            exitActive: (props.exitActiveClass || name + \"-exit-active\").split(\" \"),\n            exit: (props.exitClass || name + \"-exit\").split(\" \"),\n            exitTo: (props.exitToClass || name + \"-exit-to\").split(\" \"),\n            move: (props.moveClass || name + \"-move\").split(\" \")\n        };\n    });\n}\nfunction nextFrame(fn) {\n    requestAnimationFrame(()=>requestAnimationFrame(fn));\n}\nfunction enterTransition(classes, events, el, done) {\n    const { onBeforeEnter, onEnter, onAfterEnter } = events;\n    onBeforeEnter === null || onBeforeEnter === void 0 ? void 0 : onBeforeEnter(el);\n    el.classList.add(...classes.enter);\n    el.classList.add(...classes.enterActive);\n    queueMicrotask(()=>{\n        if (!el.parentNode) return done === null || done === void 0 ? void 0 : done();\n        onEnter === null || onEnter === void 0 ? void 0 : onEnter(el, ()=>endTransition());\n    });\n    nextFrame(()=>{\n        el.classList.remove(...classes.enter);\n        el.classList.add(...classes.enterTo);\n        if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n        }\n    });\n    function endTransition(e2) {\n        if (!e2 || e2.target === el) {\n            done === null || done === void 0 ? void 0 : done();\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...classes.enterActive);\n            el.classList.remove(...classes.enterTo);\n            onAfterEnter === null || onAfterEnter === void 0 ? void 0 : onAfterEnter(el);\n        }\n    }\n}\nfunction exitTransition(classes, events, el, done) {\n    const { onBeforeExit, onExit, onAfterExit } = events;\n    if (!el.parentNode) return done === null || done === void 0 ? void 0 : done();\n    onBeforeExit === null || onBeforeExit === void 0 ? void 0 : onBeforeExit(el);\n    el.classList.add(...classes.exit);\n    el.classList.add(...classes.exitActive);\n    onExit === null || onExit === void 0 ? void 0 : onExit(el, ()=>endTransition());\n    nextFrame(()=>{\n        el.classList.remove(...classes.exit);\n        el.classList.add(...classes.exitTo);\n        if (!onExit || onExit.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n        }\n    });\n    function endTransition(e2) {\n        if (!e2 || e2.target === el) {\n            done === null || done === void 0 ? void 0 : done();\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...classes.exitActive);\n            el.classList.remove(...classes.exitTo);\n            onAfterExit === null || onAfterExit === void 0 ? void 0 : onAfterExit(el);\n        }\n    }\n}\nvar TransitionGroup = (props)=>{\n    const classnames = createClassnames(props);\n    return createListTransition(resolveElements(()=>props.children).toArray, {\n        appear: props.appear,\n        exitMethod: \"keep-index\",\n        onChange (param) {\n            let { added, removed, finishRemoved, list } = param;\n            const classes = classnames();\n            for (const el of added){\n                enterTransition(classes, props, el);\n            }\n            const toMove = [];\n            for (const el of list){\n                if (el.isConnected && (el instanceof HTMLElement || el instanceof SVGElement)) {\n                    toMove.push({\n                        el,\n                        rect: el.getBoundingClientRect()\n                    });\n                }\n            }\n            queueMicrotask(()=>{\n                const moved = [];\n                for (const { el, rect } of toMove){\n                    if (el.isConnected) {\n                        const newRect = el.getBoundingClientRect(), dX = rect.left - newRect.left, dY = rect.top - newRect.top;\n                        if (dX || dY) {\n                            el.style.transform = \"translate(\".concat(dX, \"px, \").concat(dY, \"px)\");\n                            el.style.transitionDuration = \"0s\";\n                            moved.push(el);\n                        }\n                    }\n                }\n                document.body.offsetHeight;\n                for (const el of moved){\n                    let endTransition2 = function(e2) {\n                        if (e2.target === el || /transform$/.test(e2.propertyName)) {\n                            el.removeEventListener(\"transitionend\", endTransition2);\n                            el.classList.remove(...classes.move);\n                        }\n                    };\n                    el.classList.add(...classes.move);\n                    el.style.transform = el.style.transitionDuration = \"\";\n                    el.addEventListener(\"transitionend\", endTransition2);\n                }\n            });\n            for (const el of removed){\n                exitTransition(classes, props, el, ()=>finishRemoved([\n                        el\n                    ]));\n            }\n        }\n    });\n};\n_c = TransitionGroup;\n// ../../node_modules/.pnpm/@solid-primitives+keyed@1.2.0_solid-js@1.8.14/node_modules/@solid-primitives/keyed/dist/index.js\nvar FALLBACK = Symbol(\"fallback\");\nfunction dispose(list) {\n    for (const o2 of list)o2.dispose();\n}\nfunction keyArray(items, keyFn, mapFn) {\n    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n    if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n        const itemsRef = items();\n        let s2 = [];\n        if (itemsRef && itemsRef.length) {\n            for(let i2 = 0, len = itemsRef.length; i2 < len; i2++)s2.push(mapFn(()=>itemsRef[i2], ()=>i2));\n        } else if (options.fallback) s2 = [\n            options.fallback()\n        ];\n        return ()=>s2;\n    }\n    const prev = /* @__PURE__ */ new Map();\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>dispose(prev.values()));\n    return ()=>{\n        const list = items() || [];\n        list[_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$TRACK];\n        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            if (!list.length) {\n                dispose(prev.values());\n                prev.clear();\n                if (!options.fallback) return [];\n                const fb2 = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRoot)((dispose2)=>{\n                    prev.set(FALLBACK, {\n                        dispose: dispose2\n                    });\n                    return options.fallback();\n                });\n                return [\n                    fb2\n                ];\n            }\n            const result = new Array(list.length);\n            const fb = prev.get(FALLBACK);\n            if (!prev.size || fb) {\n                fb === null || fb === void 0 ? void 0 : fb.dispose();\n                prev.delete(FALLBACK);\n                for(let i2 = 0; i2 < list.length; i2++){\n                    const item = list[i2];\n                    const key = keyFn(item, i2);\n                    addNewItem(result, item, i2, key);\n                }\n                return result;\n            }\n            const prevKeys = new Set(prev.keys());\n            for(let i2 = 0; i2 < list.length; i2++){\n                const item = list[i2];\n                const key = keyFn(item, i2);\n                prevKeys.delete(key);\n                const lookup = prev.get(key);\n                if (lookup) {\n                    var _lookup_setIndex;\n                    result[i2] = lookup.mapped;\n                    (_lookup_setIndex = lookup.setIndex) === null || _lookup_setIndex === void 0 ? void 0 : _lookup_setIndex.call(lookup, i2);\n                    lookup.setItem(()=>item);\n                } else addNewItem(result, item, i2, key);\n            }\n            for (const key of prevKeys){\n                var _prev_get;\n                (_prev_get = prev.get(key)) === null || _prev_get === void 0 ? void 0 : _prev_get.dispose();\n                prev.delete(key);\n            }\n            return result;\n        });\n    };\n    function addNewItem(list, item, i2, key) {\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRoot)((dispose2)=>{\n            const [getItem, setItem] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(item);\n            const save = {\n                setItem,\n                dispose: dispose2\n            };\n            if (mapFn.length > 1) {\n                const [index, setIndex] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(i2);\n                save.setIndex = setIndex;\n                save.mapped = mapFn(getItem, index);\n            } else save.mapped = mapFn(getItem);\n            prev.set(key, save);\n            list[i2] = save.mapped;\n        });\n    }\n}\nfunction Key(props) {\n    const { by } = props;\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(keyArray(()=>props.each, typeof by === \"function\" ? by : (v)=>v[by], props.children, \"fallback\" in props ? {\n        fallback: ()=>props.fallback\n    } : void 0));\n}\n_c1 = Key;\n// ../../node_modules/.pnpm/@solid-primitives+storage@1.3.11_solid-js@1.8.14/node_modules/@solid-primitives/storage/dist/index.js\nfunction createStorage(props) {\n    const [error, setError] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const handleError = (props === null || props === void 0 ? void 0 : props.throw) ? (err, fallback)=>{\n        setError(err instanceof Error ? err : new Error(fallback));\n        throw err;\n    } : (err, fallback)=>{\n        setError(err instanceof Error ? err : new Error(fallback));\n    };\n    const apis = (props === null || props === void 0 ? void 0 : props.api) ? Array.isArray(props.api) ? props.api : [\n        props.api\n    ] : [\n        globalThis.localStorage\n    ].filter(Boolean);\n    const prefix = (props === null || props === void 0 ? void 0 : props.prefix) ? \"\".concat(props.prefix, \".\") : \"\";\n    const signals = /* @__PURE__ */ new Map();\n    const store = new Proxy({}, {\n        get (_, key) {\n            let node = signals.get(key);\n            if (!node) {\n                node = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(void 0, {\n                    equals: false\n                });\n                signals.set(key, node);\n            }\n            node[0]();\n            const value = apis.reduce((result, api)=>{\n                if (result !== null || !api) {\n                    return result;\n                }\n                try {\n                    return api.getItem(\"\".concat(prefix).concat(key));\n                } catch (err) {\n                    handleError(err, \"Error reading \".concat(prefix).concat(key, \" from \").concat(api[\"name\"]));\n                    return null;\n                }\n            }, null);\n            if (value !== null && (props === null || props === void 0 ? void 0 : props.deserializer)) {\n                return props.deserializer(value, key, props.options);\n            }\n            return value;\n        }\n    });\n    const setter = (key, value, options)=>{\n        const filteredValue = (props === null || props === void 0 ? void 0 : props.serializer) ? props.serializer(value, key, options !== null && options !== void 0 ? options : props.options) : value;\n        const apiKey = \"\".concat(prefix).concat(key);\n        apis.forEach((api)=>{\n            try {\n                api.getItem(apiKey) !== filteredValue && api.setItem(apiKey, filteredValue);\n            } catch (err) {\n                handleError(err, \"Error setting \".concat(prefix).concat(key, \" to \").concat(filteredValue, \" in \").concat(api.name));\n            }\n        });\n        const node = signals.get(key);\n        node && node[1]();\n    };\n    const remove = (key)=>apis.forEach((api)=>{\n            try {\n                api.removeItem(\"\".concat(prefix).concat(key));\n            } catch (err) {\n                handleError(err, \"Error removing \".concat(prefix).concat(key, \" from \").concat(api.name));\n            }\n        });\n    const clear = ()=>apis.forEach((api)=>{\n            try {\n                api.clear();\n            } catch (err) {\n                handleError(err, \"Error clearing \".concat(api.name));\n            }\n        });\n    const toJSON = ()=>{\n        const result = {};\n        const addValue = (key, value)=>{\n            if (!result.hasOwnProperty(key)) {\n                const filteredValue = value && (props === null || props === void 0 ? void 0 : props.deserializer) ? props.deserializer(value, key, props.options) : value;\n                if (filteredValue) {\n                    result[key] = filteredValue;\n                }\n            }\n        };\n        apis.forEach((api)=>{\n            if (typeof api.getAll === \"function\") {\n                let values;\n                try {\n                    values = api.getAll();\n                } catch (err) {\n                    handleError(err, \"Error getting all values from in \".concat(api.name));\n                }\n                for (const key of values){\n                    addValue(key, values[key]);\n                }\n            } else {\n                let index = 0, key;\n                try {\n                    while(key = api.key(index++)){\n                        if (!result.hasOwnProperty(key)) {\n                            addValue(key, api.getItem(key));\n                        }\n                    }\n                } catch (err) {\n                    handleError(err, \"Error getting all values from \".concat(api.name));\n                }\n            }\n        });\n        return result;\n    };\n    (props === null || props === void 0 ? void 0 : props.sync) !== false && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        const listener = (ev)=>{\n            var _signals_get;\n            let changed = false;\n            apis.forEach((api)=>{\n                try {\n                    if (api !== ev.storageArea && ev.key && ev.newValue !== api.getItem(ev.key)) {\n                        ev.newValue ? api.setItem(ev.key, ev.newValue) : api.removeItem(ev.key);\n                        changed = true;\n                    }\n                } catch (err) {\n                    handleError(err, \"Error synching api \".concat(api.name, \" from storage event (\").concat(ev.key, \"=\").concat(ev.newValue, \")\"));\n                }\n            });\n            changed && ev.key && ((_signals_get = signals.get(ev.key)) === null || _signals_get === void 0 ? void 0 : _signals_get[1]());\n        };\n        if (\"addEventListener\" in globalThis) {\n            globalThis.addEventListener(\"storage\", listener);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>globalThis.removeEventListener(\"storage\", listener));\n        } else {\n            apis.forEach((api)=>{\n                var _api_addEventListener;\n                return (_api_addEventListener = api.addEventListener) === null || _api_addEventListener === void 0 ? void 0 : _api_addEventListener.call(api, \"storage\", listener);\n            });\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>apis.forEach((api)=>{\n                    var _api_removeEventListener;\n                    return (_api_removeEventListener = api.removeEventListener) === null || _api_removeEventListener === void 0 ? void 0 : _api_removeEventListener.call(api, \"storage\", listener);\n                }));\n        }\n    });\n    return [\n        store,\n        setter,\n        {\n            clear,\n            error,\n            remove,\n            toJSON\n        }\n    ];\n}\nvar createLocalStorage = createStorage;\nvar addClearMethod = (storage)=>{\n    if (typeof storage.clear === \"function\") {\n        return storage;\n    }\n    storage.clear = ()=>{\n        let key;\n        while(key = storage.key(0)){\n            storage.removeItem(key);\n        }\n    };\n    return storage;\n};\nvar serializeCookieOptions = (options)=>{\n    if (!options) {\n        return \"\";\n    }\n    let memo = \"\";\n    for(const key in options){\n        if (!options.hasOwnProperty(key)) {\n            continue;\n        }\n        const value = options[key];\n        memo += value instanceof Date ? \"; \".concat(key, \"=\").concat(value.toUTCString()) : typeof value === \"boolean\" ? \"; \".concat(key) : \"; \".concat(key, \"=\").concat(value);\n    }\n    return memo;\n};\nvar cookieStorage = addClearMethod({\n    _cookies: [\n        globalThis.document,\n        \"cookie\"\n    ],\n    getItem: (key)=>{\n        var _cookieStorage__cookies__cookieStorage__cookies__match;\n        var _cookieStorage__cookies__cookieStorage__cookies__match_pop;\n        return (_cookieStorage__cookies__cookieStorage__cookies__match_pop = (_cookieStorage__cookies__cookieStorage__cookies__match = cookieStorage._cookies[0][cookieStorage._cookies[1]].match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\")) === null || _cookieStorage__cookies__cookieStorage__cookies__match === void 0 ? void 0 : _cookieStorage__cookies__cookieStorage__cookies__match.pop()) !== null && _cookieStorage__cookies__cookieStorage__cookies__match_pop !== void 0 ? _cookieStorage__cookies__cookieStorage__cookies__match_pop : null;\n    },\n    setItem: (key, value, options)=>{\n        const oldValue = cookieStorage.getItem(key);\n        cookieStorage._cookies[0][cookieStorage._cookies[1]] = \"\".concat(key, \"=\").concat(value).concat(serializeCookieOptions(options));\n        const storageEvent = Object.assign(new Event(\"storage\"), {\n            key,\n            oldValue,\n            newValue: value,\n            url: globalThis.document.URL,\n            storageArea: cookieStorage\n        });\n        window.dispatchEvent(storageEvent);\n    },\n    removeItem: (key)=>{\n        cookieStorage._cookies[0][cookieStorage._cookies[1]] = \"\".concat(key, \"=deleted\").concat(serializeCookieOptions({\n            expires: /* @__PURE__ */ new Date(0)\n        }));\n    },\n    key: (index)=>{\n        let key = null;\n        let count = 0;\n        cookieStorage._cookies[0][cookieStorage._cookies[1]].replace(/(?:^|;)\\s*(.+?)\\s*=\\s*[^;]+/g, (_, found)=>{\n            if (!key && found && count++ === index) {\n                key = found;\n            }\n            return \"\";\n        });\n        return key;\n    },\n    get length () {\n        let length = 0;\n        cookieStorage._cookies[0][cookieStorage._cookies[1]].replace(/(?:^|;)\\s*.+?\\s*=\\s*[^;]+/g, (found)=>{\n            length += found ? 1 : 0;\n            return \"\";\n        });\n        return length;\n    }\n});\n// ../../node_modules/.pnpm/@solid-primitives+event-listener@2.3.0_solid-js@1.8.14/node_modules/@solid-primitives/event-listener/dist/index.js\nfunction makeEventListener(target, type, handler, options) {\n    target.addEventListener(type, handler, options);\n    return tryOnCleanup(target.removeEventListener.bind(target, type, handler, options));\n}\nfunction createEventListener(targets, type, handler, options) {\n    if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) return;\n    const attachListeners = ()=>{\n        asArray(access(targets)).forEach((el)=>{\n            if (el) asArray(access(type)).forEach((type2)=>makeEventListener(el, type2, handler, options));\n        });\n    };\n    if (typeof targets === \"function\") (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(attachListeners);\n    else (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(attachListeners);\n}\n// ../../node_modules/.pnpm/@solid-primitives+resize-observer@2.0.22_solid-js@1.8.14/node_modules/@solid-primitives/resize-observer/dist/index.js\nfunction makeResizeObserver(callback, options) {\n    if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n        return {\n            observe: noop2,\n            unobserve: noop2\n        };\n    }\n    const observer = new ResizeObserver(callback);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(observer.disconnect.bind(observer));\n    return {\n        observe: (ref)=>observer.observe(ref, options),\n        unobserve: observer.unobserve.bind(observer)\n    };\n}\nfunction createResizeObserver(targets, onResize, options) {\n    if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) return;\n    const previousMap = /* @__PURE__ */ new WeakMap(), { observe, unobserve } = makeResizeObserver((entries2)=>{\n        for (const entry of entries2){\n            const { contentRect, target } = entry, width = Math.round(contentRect.width), height = Math.round(contentRect.height), previous = previousMap.get(target);\n            if (!previous || previous.width !== width || previous.height !== height) {\n                onResize(contentRect, target, entry);\n                previousMap.set(target, {\n                    width,\n                    height\n                });\n            }\n        }\n    }, options);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((prev)=>{\n        const refs = filterNonNullable(asArray(access(targets)));\n        handleDiffArray(refs, prev, observe, unobserve);\n        return refs;\n    }, []);\n}\n// ../../node_modules/.pnpm/@solid-primitives+props@3.1.8_solid-js@1.8.14/node_modules/@solid-primitives/props/dist/index.js\nfunction trueFn2() {\n    return true;\n}\nvar propTraps = {\n    get (_, property, receiver) {\n        if (property === _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY) return receiver;\n        return _.get(property);\n    },\n    has (_, property) {\n        return _.has(property);\n    },\n    set: trueFn2,\n    deleteProperty: trueFn2,\n    getOwnPropertyDescriptor (_, property) {\n        return {\n            configurable: true,\n            enumerable: true,\n            get () {\n                return _.get(property);\n            },\n            set: trueFn2,\n            deleteProperty: trueFn2\n        };\n    },\n    ownKeys (_) {\n        return _.keys();\n    }\n};\nvar extractCSSregex = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nfunction stringStyleToObject(style2) {\n    const object = {};\n    let match;\n    while(match = extractCSSregex.exec(style2)){\n        object[match[1]] = match[2];\n    }\n    return object;\n}\nfunction combineStyle(a2, b2) {\n    if (typeof a2 === \"string\") {\n        if (typeof b2 === \"string\") return \"\".concat(a2, \";\").concat(b2);\n        a2 = stringStyleToObject(a2);\n    } else if (typeof b2 === \"string\") {\n        b2 = stringStyleToObject(b2);\n    }\n    return {\n        ...a2,\n        ...b2\n    };\n}\nvar reduce = (sources, key, calc)=>{\n    let v = void 0;\n    for (const props of sources){\n        const propV = access(props)[key];\n        if (!v) v = propV;\n        else if (propV) v = calc(v, propV);\n    }\n    return v;\n};\nfunction combineProps() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var _args_;\n    const restArgs = Array.isArray(args[0]);\n    const sources = restArgs ? args[0] : args;\n    if (sources.length === 1) return sources[0];\n    const chainFn = restArgs && ((_args_ = args[1]) === null || _args_ === void 0 ? void 0 : _args_.reverseEventHandlers) ? reverseChain : chain;\n    const listeners2 = {};\n    for (const props of sources){\n        const propsObj = access(props);\n        for(const key in propsObj){\n            if (key[0] === \"o\" && key[1] === \"n\" && key[2]) {\n                const v = propsObj[key];\n                const name = key.toLowerCase();\n                const callback = typeof v === \"function\" ? v : // jsx event handlers can be tuples of [callback, arg]\n                Array.isArray(v) ? v.length === 1 ? v[0] : v[0].bind(void 0, v[1]) : void 0;\n                if (callback) listeners2[name] ? listeners2[name].push(callback) : listeners2[name] = [\n                    callback\n                ];\n                else delete listeners2[name];\n            }\n        }\n    }\n    const merge = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)(...sources);\n    return new Proxy({\n        get (key) {\n            if (typeof key !== \"string\") return Reflect.get(merge, key);\n            if (key === \"style\") return reduce(sources, \"style\", combineStyle);\n            if (key === \"ref\") {\n                const callbacks = [];\n                for (const props of sources){\n                    const cb = access(props)[key];\n                    if (typeof cb === \"function\") callbacks.push(cb);\n                }\n                return chainFn(callbacks);\n            }\n            if (key[0] === \"o\" && key[1] === \"n\" && key[2]) {\n                const callbacks = listeners2[key.toLowerCase()];\n                return callbacks ? chainFn(callbacks) : Reflect.get(merge, key);\n            }\n            if (key === \"class\" || key === \"className\") return reduce(sources, key, (a2, b2)=>\"\".concat(a2, \" \").concat(b2));\n            if (key === \"classList\") return reduce(sources, key, (a2, b2)=>({\n                    ...a2,\n                    ...b2\n                }));\n            return Reflect.get(merge, key);\n        },\n        has (key) {\n            return Reflect.has(merge, key);\n        },\n        keys () {\n            return Object.keys(merge);\n        }\n    }, propTraps);\n}\n// ../../node_modules/.pnpm/@kobalte+utils@0.9.0_solid-js@1.8.14/node_modules/@kobalte/utils/dist/index.js\nfunction addItemToArray(array, item) {\n    let index = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;\n    if (!(index in array)) {\n        return [\n            ...array,\n            item\n        ];\n    }\n    return [\n        ...array.slice(0, index),\n        item,\n        ...array.slice(index)\n    ];\n}\nfunction removeItemFromArray(array, item) {\n    const updatedArray = [\n        ...array\n    ];\n    const index = updatedArray.indexOf(item);\n    if (index !== -1) {\n        updatedArray.splice(index, 1);\n    }\n    return updatedArray;\n}\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isString(value) {\n    return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\nfunction createGenerateId(baseId) {\n    return (suffix)=>\"\".concat(baseId(), \"-\").concat(suffix);\n}\nfunction contains(parent, child) {\n    if (!parent) {\n        return false;\n    }\n    return parent === child || parent.contains(child);\n}\nfunction getActiveElement(node) {\n    let activeDescendant = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const { activeElement } = getDocument(node);\n    if (!(activeElement === null || activeElement === void 0 ? void 0 : activeElement.nodeName)) {\n        return null;\n    }\n    if (isFrame(activeElement) && activeElement.contentDocument) {\n        return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n    }\n    if (activeDescendant) {\n        const id = activeElement.getAttribute(\"aria-activedescendant\");\n        if (id) {\n            const element = getDocument(activeElement).getElementById(id);\n            if (element) {\n                return element;\n            }\n        }\n    }\n    return activeElement;\n}\nfunction getWindow(node) {\n    return getDocument(node).defaultView || window;\n}\nfunction getDocument(node) {\n    return node ? node.ownerDocument || node : document;\n}\nfunction isFrame(element) {\n    return element.tagName === \"IFRAME\";\n}\nvar EventKey = /* @__PURE__ */ ((EventKey2)=>{\n    EventKey2[\"Escape\"] = \"Escape\";\n    EventKey2[\"Enter\"] = \"Enter\";\n    EventKey2[\"Tab\"] = \"Tab\";\n    EventKey2[\"Space\"] = \" \";\n    EventKey2[\"ArrowDown\"] = \"ArrowDown\";\n    EventKey2[\"ArrowLeft\"] = \"ArrowLeft\";\n    EventKey2[\"ArrowRight\"] = \"ArrowRight\";\n    EventKey2[\"ArrowUp\"] = \"ArrowUp\";\n    EventKey2[\"End\"] = \"End\";\n    EventKey2[\"Home\"] = \"Home\";\n    EventKey2[\"PageDown\"] = \"PageDown\";\n    EventKey2[\"PageUp\"] = \"PageUp\";\n    return EventKey2;\n})(EventKey || {});\nfunction testPlatform(re) {\n    var _window_navigator_userAgentData;\n    return  true && window.navigator != null ? // @ts-ignore\n    re.test(((_window_navigator_userAgentData = window.navigator[\"userAgentData\"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;\n}\nfunction isMac() {\n    return testPlatform(/^Mac/i);\n}\nfunction isIPhone() {\n    return testPlatform(/^iPhone/i);\n}\nfunction isIPad() {\n    return testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    isMac() && navigator.maxTouchPoints > 1;\n}\nfunction isIOS() {\n    return isIPhone() || isIPad();\n}\nfunction isAppleDevice() {\n    return isMac() || isIOS();\n}\nfunction callHandler(event, handler) {\n    if (handler) {\n        if (isFunction(handler)) {\n            handler(event);\n        } else {\n            handler[0](handler[1], event);\n        }\n    }\n    return event === null || event === void 0 ? void 0 : event.defaultPrevented;\n}\nfunction composeEventHandlers(handlers) {\n    return (event)=>{\n        for (const handler of handlers){\n            callHandler(event, handler);\n        }\n    };\n}\nfunction isCtrlKey(e2) {\n    if (isMac()) {\n        return e2.metaKey && !e2.ctrlKey;\n    }\n    return e2.ctrlKey && !e2.metaKey;\n}\nfunction focusWithoutScrolling(element) {\n    if (!element) {\n        return;\n    }\n    if (supportsPreventScroll()) {\n        element.focus({\n            preventScroll: true\n        });\n    } else {\n        const scrollableElements = getScrollableElements(element);\n        element.focus();\n        restoreScrollPosition(scrollableElements);\n    }\n}\nvar supportsPreventScrollCached = null;\nfunction supportsPreventScroll() {\n    if (supportsPreventScrollCached == null) {\n        supportsPreventScrollCached = false;\n        try {\n            const focusElem = document.createElement(\"div\");\n            focusElem.focus({\n                get preventScroll () {\n                    supportsPreventScrollCached = true;\n                    return true;\n                }\n            });\n        } catch (e2) {}\n    }\n    return supportsPreventScrollCached;\n}\nfunction getScrollableElements(element) {\n    let parent = element.parentNode;\n    const scrollableElements = [];\n    const rootScrollingElement = document.scrollingElement || document.documentElement;\n    while(parent instanceof HTMLElement && parent !== rootScrollingElement){\n        if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) {\n            scrollableElements.push({\n                element: parent,\n                scrollTop: parent.scrollTop,\n                scrollLeft: parent.scrollLeft\n            });\n        }\n        parent = parent.parentNode;\n    }\n    if (rootScrollingElement instanceof HTMLElement) {\n        scrollableElements.push({\n            element: rootScrollingElement,\n            scrollTop: rootScrollingElement.scrollTop,\n            scrollLeft: rootScrollingElement.scrollLeft\n        });\n    }\n    return scrollableElements;\n}\nfunction restoreScrollPosition(scrollableElements) {\n    for (const { element, scrollTop, scrollLeft } of scrollableElements){\n        element.scrollTop = scrollTop;\n        element.scrollLeft = scrollLeft;\n    }\n}\nvar focusableElements = [\n    \"input:not([type='hidden']):not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"button:not([disabled])\",\n    \"a[href]\",\n    \"area[href]\",\n    \"[tabindex]\",\n    \"iframe\",\n    \"object\",\n    \"embed\",\n    \"audio[controls]\",\n    \"video[controls]\",\n    \"[contenteditable]:not([contenteditable='false'])\"\n];\nvar tabbableElements = [\n    ...focusableElements,\n    '[tabindex]:not([tabindex=\"-1\"]):not([disabled])'\n];\nvar FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\nvar TABBABLE_ELEMENT_SELECTOR = tabbableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction getAllTabbableIn(container, includeContainer) {\n    const elements = Array.from(container.querySelectorAll(FOCUSABLE_ELEMENT_SELECTOR));\n    const tabbableElements2 = elements.filter(isTabbable);\n    if (includeContainer && isTabbable(container)) {\n        tabbableElements2.unshift(container);\n    }\n    tabbableElements2.forEach((element, i2)=>{\n        if (isFrame(element) && element.contentDocument) {\n            const frameBody = element.contentDocument.body;\n            const allFrameTabbable = getAllTabbableIn(frameBody, false);\n            tabbableElements2.splice(i2, 1, ...allFrameTabbable);\n        }\n    });\n    return tabbableElements2;\n}\nfunction isTabbable(element) {\n    return isFocusable(element) && !hasNegativeTabIndex(element);\n}\nfunction isFocusable(element) {\n    return element.matches(FOCUSABLE_ELEMENT_SELECTOR) && isElementVisible(element);\n}\nfunction hasNegativeTabIndex(element) {\n    const tabIndex = parseInt(element.getAttribute(\"tabindex\") || \"0\", 10);\n    return tabIndex < 0;\n}\nfunction isElementVisible(element, childElement) {\n    return element.nodeName !== \"#comment\" && isStyleVisible(element) && isAttributeVisible(element, childElement) && (!element.parentElement || isElementVisible(element.parentElement, element));\n}\nfunction isStyleVisible(element) {\n    if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n        return false;\n    }\n    const { display, visibility } = element.style;\n    let isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n    if (isVisible) {\n        if (!element.ownerDocument.defaultView) {\n            return isVisible;\n        }\n        const { getComputedStyle: getComputedStyle3 } = element.ownerDocument.defaultView;\n        const { display: computedDisplay, visibility: computedVisibility } = getComputedStyle3(element);\n        isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n    }\n    return isVisible;\n}\nfunction isAttributeVisible(element, childElement) {\n    return !element.hasAttribute(\"hidden\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction isElementInScope(element, scope) {\n    return scope.some((node)=>node.contains(element));\n}\nfunction getFocusableTreeWalker(root, opts, scope) {\n    const selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n    const walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n        acceptNode (node) {\n            var _opts_from;\n            if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) {\n                return NodeFilter.FILTER_REJECT;\n            }\n            if (node.matches(selector) && isElementVisible(node) && (!scope || isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) {\n                return NodeFilter.FILTER_ACCEPT;\n            }\n            return NodeFilter.FILTER_SKIP;\n        }\n    });\n    if (opts === null || opts === void 0 ? void 0 : opts.from) {\n        walker.currentNode = opts.from;\n    }\n    return walker;\n}\nfunction noop3() {\n    return;\n}\nfunction isPointInPolygon(point, polygon) {\n    const [x, y] = point;\n    let inside = false;\n    const length = polygon.length;\n    for(let l2 = length, i2 = 0, j = l2 - 1; i2 < l2; j = i2++){\n        const [xi, yi] = polygon[i2];\n        const [xj, yj] = polygon[j];\n        const [, vy] = polygon[j === 0 ? l2 - 1 : j - 1] || [\n            0,\n            0\n        ];\n        const where = (yi - yj) * (x - xi) - (xi - xj) * (y - yi);\n        if (yj < yi) {\n            if (y >= yj && y < yi) {\n                if (where === 0) return true;\n                if (where > 0) {\n                    if (y === yj) {\n                        if (y > vy) {\n                            inside = !inside;\n                        }\n                    } else {\n                        inside = !inside;\n                    }\n                }\n            }\n        } else if (yi < yj) {\n            if (y > yi && y <= yj) {\n                if (where === 0) return true;\n                if (where < 0) {\n                    if (y === yj) {\n                        if (y < vy) {\n                            inside = !inside;\n                        }\n                    } else {\n                        inside = !inside;\n                    }\n                }\n            }\n        } else if (y == yi && (x >= xj && x <= xi || x >= xi && x <= xj)) {\n            return true;\n        }\n    }\n    return inside;\n}\nfunction mergeDefaultProps(defaultProps, props) {\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)(defaultProps, props);\n}\nvar transitionsByElement = /* @__PURE__ */ new Map();\nvar transitionCallbacks = /* @__PURE__ */ new Set();\nfunction setupGlobalEvents() {\n    if (false) {}\n    const onTransitionStart = (e2)=>{\n        if (!e2.target) {\n            return;\n        }\n        let transitions = transitionsByElement.get(e2.target);\n        if (!transitions) {\n            transitions = /* @__PURE__ */ new Set();\n            transitionsByElement.set(e2.target, transitions);\n            e2.target.addEventListener(\"transitioncancel\", onTransitionEnd);\n        }\n        transitions.add(e2.propertyName);\n    };\n    const onTransitionEnd = (e2)=>{\n        if (!e2.target) {\n            return;\n        }\n        const properties = transitionsByElement.get(e2.target);\n        if (!properties) {\n            return;\n        }\n        properties.delete(e2.propertyName);\n        if (properties.size === 0) {\n            e2.target.removeEventListener(\"transitioncancel\", onTransitionEnd);\n            transitionsByElement.delete(e2.target);\n        }\n        if (transitionsByElement.size === 0) {\n            for (const cb of transitionCallbacks){\n                cb();\n            }\n            transitionCallbacks.clear();\n        }\n    };\n    document.body.addEventListener(\"transitionrun\", onTransitionStart);\n    document.body.addEventListener(\"transitionend\", onTransitionEnd);\n}\nif (typeof document !== \"undefined\") {\n    if (document.readyState !== \"loading\") {\n        setupGlobalEvents();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", setupGlobalEvents);\n    }\n}\nfunction scrollIntoView(scrollView, element) {\n    const offsetX = relativeOffset(scrollView, element, \"left\");\n    const offsetY = relativeOffset(scrollView, element, \"top\");\n    const width = element.offsetWidth;\n    const height = element.offsetHeight;\n    let x = scrollView.scrollLeft;\n    let y = scrollView.scrollTop;\n    const maxX = x + scrollView.offsetWidth;\n    const maxY = y + scrollView.offsetHeight;\n    if (offsetX <= x) {\n        x = offsetX;\n    } else if (offsetX + width > maxX) {\n        x += offsetX + width - maxX;\n    }\n    if (offsetY <= y) {\n        y = offsetY;\n    } else if (offsetY + height > maxY) {\n        y += offsetY + height - maxY;\n    }\n    scrollView.scrollLeft = x;\n    scrollView.scrollTop = y;\n}\nfunction relativeOffset(ancestor, child, axis) {\n    const prop = axis === \"left\" ? \"offsetLeft\" : \"offsetTop\";\n    let sum = 0;\n    while(child.offsetParent){\n        sum += child[prop];\n        if (child.offsetParent === ancestor) {\n            break;\n        } else if (child.offsetParent.contains(ancestor)) {\n            sum -= ancestor[prop];\n            break;\n        }\n        child = child.offsetParent;\n    }\n    return sum;\n}\nvar visuallyHiddenStyles = {\n    border: \"0\",\n    clip: \"rect(0 0 0 0)\",\n    \"clip-path\": \"inset(50%)\",\n    height: \"1px\",\n    margin: \"0 -1px -1px 0\",\n    overflow: \"hidden\",\n    padding: \"0\",\n    position: \"absolute\",\n    width: \"1px\",\n    \"white-space\": \"nowrap\"\n};\n// ../../node_modules/.pnpm/solid-js@1.8.14/node_modules/solid-js/store/dist/store.js\nvar $RAW = Symbol(\"store-raw\");\nvar $NODE = Symbol(\"store-node\");\nvar $HAS = Symbol(\"store-has\");\nvar $SELF = Symbol(\"store-self\");\nfunction wrap$1(value) {\n    let p2 = value[_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY];\n    if (!p2) {\n        Object.defineProperty(value, _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY, {\n            value: p2 = new Proxy(value, proxyTraps$1)\n        });\n        if (!Array.isArray(value)) {\n            const keys2 = Object.keys(value), desc = Object.getOwnPropertyDescriptors(value);\n            for(let i2 = 0, l2 = keys2.length; i2 < l2; i2++){\n                const prop = keys2[i2];\n                if (desc[prop].get) {\n                    Object.defineProperty(value, prop, {\n                        enumerable: desc[prop].enumerable,\n                        get: desc[prop].get.bind(p2)\n                    });\n                }\n            }\n        }\n    }\n    return p2;\n}\nfunction isWrappable(obj) {\n    let proto;\n    return obj != null && typeof obj === \"object\" && (obj[_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item) {\n    let set = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : /* @__PURE__ */ new Set();\n    let result, unwrapped, v, prop;\n    if (result = item != null && item[$RAW]) return result;\n    if (!isWrappable(item) || set.has(item)) return item;\n    if (Array.isArray(item)) {\n        if (Object.isFrozen(item)) item = item.slice(0);\n        else set.add(item);\n        for(let i2 = 0, l2 = item.length; i2 < l2; i2++){\n            v = item[i2];\n            if ((unwrapped = unwrap(v, set)) !== v) item[i2] = unwrapped;\n        }\n    } else {\n        if (Object.isFrozen(item)) item = Object.assign({}, item);\n        else set.add(item);\n        const keys2 = Object.keys(item), desc = Object.getOwnPropertyDescriptors(item);\n        for(let i2 = 0, l2 = keys2.length; i2 < l2; i2++){\n            prop = keys2[i2];\n            if (desc[prop].get) continue;\n            v = item[prop];\n            if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n        }\n    }\n    return item;\n}\nfunction getNodes(target, symbol) {\n    let nodes = target[symbol];\n    if (!nodes) Object.defineProperty(target, symbol, {\n        value: nodes = /* @__PURE__ */ Object.create(null)\n    });\n    return nodes;\n}\nfunction getNode(nodes, property, value) {\n    if (nodes[property]) return nodes[property];\n    const [s2, set] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(value, {\n        equals: false,\n        internal: true\n    });\n    s2.$ = set;\n    return nodes[property] = s2;\n}\nfunction proxyDescriptor$1(target, property) {\n    const desc = Reflect.getOwnPropertyDescriptor(target, property);\n    if (!desc || desc.get || !desc.configurable || property === _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY || property === $NODE) return desc;\n    delete desc.value;\n    delete desc.writable;\n    desc.get = ()=>target[_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY][property];\n    return desc;\n}\nfunction trackSelf(target) {\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getListener)() && getNode(getNodes(target, $NODE), $SELF)();\n}\nfunction ownKeys(target) {\n    trackSelf(target);\n    return Reflect.ownKeys(target);\n}\nvar proxyTraps$1 = {\n    get (target, property, receiver) {\n        if (property === $RAW) return target;\n        if (property === _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY) return receiver;\n        if (property === _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$TRACK) {\n            trackSelf(target);\n            return receiver;\n        }\n        const nodes = getNodes(target, $NODE);\n        const tracked = nodes[property];\n        let value = tracked ? tracked() : target[property];\n        if (property === $NODE || property === $HAS || property === \"__proto__\") return value;\n        if (!tracked) {\n            const desc = Object.getOwnPropertyDescriptor(target, property);\n            if ((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getListener)() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getNode(nodes, property, value)();\n        }\n        return isWrappable(value) ? wrap$1(value) : value;\n    },\n    has (target, property) {\n        if (property === $RAW || property === _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$PROXY || property === _chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.$TRACK || property === $NODE || property === $HAS || property === \"__proto__\") return true;\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getListener)() && getNode(getNodes(target, $HAS), property)();\n        return property in target;\n    },\n    set () {\n        return true;\n    },\n    deleteProperty () {\n        return true;\n    },\n    ownKeys,\n    getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state2, property, value) {\n    let deleting = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n    if (!deleting && state2[property] === value) return;\n    const prev = state2[property], len = state2.length;\n    if (value === void 0) {\n        delete state2[property];\n        if (state2[$HAS] && state2[$HAS][property] && prev !== void 0) state2[$HAS][property].$();\n    } else {\n        state2[property] = value;\n        if (state2[$HAS] && state2[$HAS][property] && prev === void 0) state2[$HAS][property].$();\n    }\n    let nodes = getNodes(state2, $NODE), node;\n    if (node = getNode(nodes, property, prev)) node.$(()=>value);\n    if (Array.isArray(state2) && state2.length !== len) {\n        for(let i2 = state2.length; i2 < len; i2++)(node = nodes[i2]) && node.$();\n        (node = getNode(nodes, \"length\", len)) && node.$(state2.length);\n    }\n    (node = nodes[$SELF]) && node.$();\n}\nfunction mergeStoreNode(state2, value) {\n    const keys2 = Object.keys(value);\n    for(let i2 = 0; i2 < keys2.length; i2 += 1){\n        const key = keys2[i2];\n        setProperty(state2, key, value[key]);\n    }\n}\nfunction updateArray(current, next) {\n    if (typeof next === \"function\") next = next(current);\n    next = unwrap(next);\n    if (Array.isArray(next)) {\n        if (current === next) return;\n        let i2 = 0, len = next.length;\n        for(; i2 < len; i2++){\n            const value = next[i2];\n            if (current[i2] !== value) setProperty(current, i2, value);\n        }\n        setProperty(current, \"length\", len);\n    } else mergeStoreNode(current, next);\n}\nfunction updatePath(current, path) {\n    let traversed = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];\n    let part, prev = current;\n    if (path.length > 1) {\n        part = path.shift();\n        const partType = typeof part, isArray2 = Array.isArray(current);\n        if (Array.isArray(part)) {\n            for(let i2 = 0; i2 < part.length; i2++){\n                updatePath(current, [\n                    part[i2]\n                ].concat(path), traversed);\n            }\n            return;\n        } else if (isArray2 && partType === \"function\") {\n            for(let i2 = 0; i2 < current.length; i2++){\n                if (part(current[i2], i2)) updatePath(current, [\n                    i2\n                ].concat(path), traversed);\n            }\n            return;\n        } else if (isArray2 && partType === \"object\") {\n            const { from = 0, to = current.length - 1, by = 1 } = part;\n            for(let i2 = from; i2 <= to; i2 += by){\n                updatePath(current, [\n                    i2\n                ].concat(path), traversed);\n            }\n            return;\n        } else if (path.length > 1) {\n            updatePath(current[part], path, [\n                part\n            ].concat(traversed));\n            return;\n        }\n        prev = current[part];\n        traversed = [\n            part\n        ].concat(traversed);\n    }\n    let value = path[0];\n    if (typeof value === \"function\") {\n        value = value(prev, traversed);\n        if (value === prev) return;\n    }\n    if (part === void 0 && value == void 0) return;\n    value = unwrap(value);\n    if (part === void 0 || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n        mergeStoreNode(prev, value);\n    } else setProperty(current, part, value);\n}\nfunction createStore() {\n    for(var _len = arguments.length, _tmp = new Array(_len), _key = 0; _key < _len; _key++){\n        _tmp[_key] = arguments[_key];\n    }\n    let [store, options] = _tmp;\n    const unwrappedStore = unwrap(store || {});\n    const isArray2 = Array.isArray(unwrappedStore);\n    const wrappedStore = wrap$1(unwrappedStore);\n    function setStore() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.batch)(()=>{\n            isArray2 && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n        });\n    }\n    return [\n        wrappedStore,\n        setStore\n    ];\n}\n// ../../node_modules/.pnpm/@internationalized+message@3.1.1/node_modules/@internationalized/message/dist/import.mjs\nvar $d6fd23bc337660df$export$64839e615120df17 = class {\n    getStringForLocale(key, locale) {\n        let strings = this.messages[locale];\n        if (!strings) {\n            strings = $d6fd23bc337660df$var$getStringsForLocale(locale, this.messages, this.defaultLocale);\n            this.messages[locale] = strings;\n        }\n        let string = strings[key];\n        if (!string) throw new Error(\"Could not find intl message \".concat(key, \" in \").concat(locale, \" locale\"));\n        return string;\n    }\n    constructor(messages, defaultLocale = \"en-US\"){\n        this.messages = {\n            ...messages\n        };\n        this.defaultLocale = defaultLocale;\n    }\n};\nfunction $d6fd23bc337660df$var$getStringsForLocale(locale, strings) {\n    let defaultLocale = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"en-US\";\n    if (strings[locale]) return strings[locale];\n    let language = $d6fd23bc337660df$var$getLanguage(locale);\n    if (strings[language]) return strings[language];\n    for(let key in strings){\n        if (key.startsWith(language + \"-\")) return strings[key];\n    }\n    return strings[defaultLocale];\n}\nfunction $d6fd23bc337660df$var$getLanguage(locale) {\n    if (Intl.Locale) return new Intl.Locale(locale).language;\n    return locale.split(\"-\")[0];\n}\n// ../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs\nvar sides = [\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n];\nvar min = Math.min;\nvar max = Math.max;\nvar round = Math.round;\nvar floor = Math.floor;\nvar createCoords = (v)=>({\n        x: v,\n        y: v\n    });\nvar oppositeSideMap = {\n    left: \"right\",\n    right: \"left\",\n    bottom: \"top\",\n    top: \"bottom\"\n};\nvar oppositeAlignmentMap = {\n    start: \"end\",\n    end: \"start\"\n};\nfunction clamp2(start, value, end) {\n    return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n    return typeof value === \"function\" ? value(param) : value;\n}\nfunction getSide(placement) {\n    return placement.split(\"-\")[0];\n}\nfunction getAlignment(placement) {\n    return placement.split(\"-\")[1];\n}\nfunction getOppositeAxis(axis) {\n    return axis === \"x\" ? \"y\" : \"x\";\n}\nfunction getAxisLength(axis) {\n    return axis === \"y\" ? \"height\" : \"width\";\n}\nfunction getSideAxis(placement) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].includes(getSide(placement)) ? \"y\" : \"x\";\n}\nfunction getAlignmentAxis(placement) {\n    return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n    if (rtl === void 0) {\n        rtl = false;\n    }\n    const alignment = getAlignment(placement);\n    const alignmentAxis = getAlignmentAxis(placement);\n    const length = getAxisLength(alignmentAxis);\n    let mainAlignmentSide = alignmentAxis === \"x\" ? alignment === (rtl ? \"end\" : \"start\") ? \"right\" : \"left\" : alignment === \"start\" ? \"bottom\" : \"top\";\n    if (rects.reference[length] > rects.floating[length]) {\n        mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n    }\n    return [\n        mainAlignmentSide,\n        getOppositePlacement(mainAlignmentSide)\n    ];\n}\nfunction getExpandedPlacements(placement) {\n    const oppositePlacement = getOppositePlacement(placement);\n    return [\n        getOppositeAlignmentPlacement(placement),\n        oppositePlacement,\n        getOppositeAlignmentPlacement(oppositePlacement)\n    ];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n    return placement.replace(/start|end/g, (alignment)=>oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n    const lr = [\n        \"left\",\n        \"right\"\n    ];\n    const rl = [\n        \"right\",\n        \"left\"\n    ];\n    const tb = [\n        \"top\",\n        \"bottom\"\n    ];\n    const bt = [\n        \"bottom\",\n        \"top\"\n    ];\n    switch(side){\n        case \"top\":\n        case \"bottom\":\n            if (rtl) return isStart ? rl : lr;\n            return isStart ? lr : rl;\n        case \"left\":\n        case \"right\":\n            return isStart ? tb : bt;\n        default:\n            return [];\n    }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n    const alignment = getAlignment(placement);\n    let list = getSideList(getSide(placement), direction === \"start\", rtl);\n    if (alignment) {\n        list = list.map((side)=>side + \"-\" + alignment);\n        if (flipAlignment) {\n            list = list.concat(list.map(getOppositeAlignmentPlacement));\n        }\n    }\n    return list;\n}\nfunction getOppositePlacement(placement) {\n    return placement.replace(/left|right|bottom|top/g, (side)=>oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        ...padding\n    };\n}\nfunction getPaddingObject(padding) {\n    return typeof padding !== \"number\" ? expandPaddingObject(padding) : {\n        top: padding,\n        right: padding,\n        bottom: padding,\n        left: padding\n    };\n}\nfunction rectToClientRect(rect) {\n    return {\n        ...rect,\n        top: rect.y,\n        left: rect.x,\n        right: rect.x + rect.width,\n        bottom: rect.y + rect.height\n    };\n}\n// ../../node_modules/.pnpm/@floating-ui+core@1.5.0/node_modules/@floating-ui/core/dist/floating-ui.core.mjs\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n    let { reference, floating } = _ref;\n    const sideAxis = getSideAxis(placement);\n    const alignmentAxis = getAlignmentAxis(placement);\n    const alignLength = getAxisLength(alignmentAxis);\n    const side = getSide(placement);\n    const isVertical = sideAxis === \"y\";\n    const commonX = reference.x + reference.width / 2 - floating.width / 2;\n    const commonY = reference.y + reference.height / 2 - floating.height / 2;\n    const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n    let coords;\n    switch(side){\n        case \"top\":\n            coords = {\n                x: commonX,\n                y: reference.y - floating.height\n            };\n            break;\n        case \"bottom\":\n            coords = {\n                x: commonX,\n                y: reference.y + reference.height\n            };\n            break;\n        case \"right\":\n            coords = {\n                x: reference.x + reference.width,\n                y: commonY\n            };\n            break;\n        case \"left\":\n            coords = {\n                x: reference.x - floating.width,\n                y: commonY\n            };\n            break;\n        default:\n            coords = {\n                x: reference.x,\n                y: reference.y\n            };\n    }\n    switch(getAlignment(placement)){\n        case \"start\":\n            coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n            break;\n        case \"end\":\n            coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n            break;\n    }\n    return coords;\n}\nvar computePosition = async (reference, floating, config)=>{\n    const { placement = \"bottom\", strategy = \"absolute\", middleware = [], platform: platform2 } = config;\n    const validMiddleware = middleware.filter(Boolean);\n    const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));\n    let rects = await platform2.getElementRects({\n        reference,\n        floating,\n        strategy\n    });\n    let { x, y } = computeCoordsFromPlacement(rects, placement, rtl);\n    let statefulPlacement = placement;\n    let middlewareData = {};\n    let resetCount = 0;\n    for(let i2 = 0; i2 < validMiddleware.length; i2++){\n        const { name, fn } = validMiddleware[i2];\n        const { x: nextX, y: nextY, data, reset } = await fn({\n            x,\n            y,\n            initialPlacement: placement,\n            placement: statefulPlacement,\n            strategy,\n            middlewareData,\n            rects,\n            platform: platform2,\n            elements: {\n                reference,\n                floating\n            }\n        });\n        x = nextX != null ? nextX : x;\n        y = nextY != null ? nextY : y;\n        middlewareData = {\n            ...middlewareData,\n            [name]: {\n                ...middlewareData[name],\n                ...data\n            }\n        };\n        if (reset && resetCount <= 50) {\n            resetCount++;\n            if (typeof reset === \"object\") {\n                if (reset.placement) {\n                    statefulPlacement = reset.placement;\n                }\n                if (reset.rects) {\n                    rects = reset.rects === true ? await platform2.getElementRects({\n                        reference,\n                        floating,\n                        strategy\n                    }) : reset.rects;\n                }\n                ({ x, y } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n            }\n            i2 = -1;\n            continue;\n        }\n    }\n    return {\n        x,\n        y,\n        placement: statefulPlacement,\n        strategy,\n        middlewareData\n    };\n};\nasync function detectOverflow(state2, options) {\n    var _await$platform$isEle;\n    if (options === void 0) {\n        options = {};\n    }\n    const { x, y, platform: platform2, rects, elements, strategy } = state2;\n    const { boundary = \"clippingAncestors\", rootBoundary = \"viewport\", elementContext = \"floating\", altBoundary = false, padding = 0 } = evaluate(options, state2);\n    const paddingObject = getPaddingObject(padding);\n    const altContext = elementContext === \"floating\" ? \"reference\" : \"floating\";\n    const element = elements[altBoundary ? altContext : elementContext];\n    const clippingClientRect = rectToClientRect(await platform2.getClippingRect({\n        element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),\n        boundary,\n        rootBoundary,\n        strategy\n    }));\n    const rect = elementContext === \"floating\" ? {\n        ...rects.floating,\n        x,\n        y\n    } : rects.reference;\n    const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));\n    const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {\n        x: 1,\n        y: 1\n    } : {\n        x: 1,\n        y: 1\n    };\n    const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect,\n        offsetParent,\n        strategy\n    }) : rect);\n    return {\n        top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n        bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n        left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n        right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n    };\n}\nvar arrow = (options)=>({\n        name: \"arrow\",\n        options,\n        async fn (state2) {\n            const { x, y, placement, rects, platform: platform2, elements, middlewareData } = state2;\n            const { element, padding = 0 } = evaluate(options, state2) || {};\n            if (element == null) {\n                return {};\n            }\n            const paddingObject = getPaddingObject(padding);\n            const coords = {\n                x,\n                y\n            };\n            const axis = getAlignmentAxis(placement);\n            const length = getAxisLength(axis);\n            const arrowDimensions = await platform2.getDimensions(element);\n            const isYAxis = axis === \"y\";\n            const minProp = isYAxis ? \"top\" : \"left\";\n            const maxProp = isYAxis ? \"bottom\" : \"right\";\n            const clientProp = isYAxis ? \"clientHeight\" : \"clientWidth\";\n            const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n            const startDiff = coords[axis] - rects.reference[axis];\n            const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));\n            let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n            if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {\n                clientSize = elements.floating[clientProp] || rects.floating[length];\n            }\n            const centerToReference = endDiff / 2 - startDiff / 2;\n            const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n            const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n            const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n            const min$1 = minPadding;\n            const max2 = clientSize - arrowDimensions[length] - maxPadding;\n            const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n            const offset2 = clamp2(min$1, center, max2);\n            const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset2 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n            const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;\n            return {\n                [axis]: coords[axis] + alignmentOffset,\n                data: {\n                    [axis]: offset2,\n                    centerOffset: center - offset2 - alignmentOffset,\n                    ...shouldAddOffset && {\n                        alignmentOffset\n                    }\n                },\n                reset: shouldAddOffset\n            };\n        }\n    });\nvar flip = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"flip\",\n        options,\n        async fn (state2) {\n            var _middlewareData$arrow, _middlewareData$flip;\n            const { placement, middlewareData, rects, initialPlacement, platform: platform2, elements } = state2;\n            const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = true, fallbackPlacements: specifiedFallbackPlacements, fallbackStrategy = \"bestFit\", fallbackAxisSideDirection = \"none\", flipAlignment = true, ...detectOverflowOptions } = evaluate(options, state2);\n            if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n                return {};\n            }\n            const side = getSide(placement);\n            const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n            const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));\n            const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [\n                getOppositePlacement(initialPlacement)\n            ] : getExpandedPlacements(initialPlacement));\n            if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== \"none\") {\n                fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n            }\n            const placements2 = [\n                initialPlacement,\n                ...fallbackPlacements\n            ];\n            const overflow = await detectOverflow(state2, detectOverflowOptions);\n            const overflows = [];\n            let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n            if (checkMainAxis) {\n                overflows.push(overflow[side]);\n            }\n            if (checkCrossAxis) {\n                const sides2 = getAlignmentSides(placement, rects, rtl);\n                overflows.push(overflow[sides2[0]], overflow[sides2[1]]);\n            }\n            overflowsData = [\n                ...overflowsData,\n                {\n                    placement,\n                    overflows\n                }\n            ];\n            if (!overflows.every((side2)=>side2 <= 0)) {\n                var _middlewareData$flip2, _overflowsData$filter;\n                const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                const nextPlacement = placements2[nextIndex];\n                if (nextPlacement) {\n                    return {\n                        data: {\n                            index: nextIndex,\n                            overflows: overflowsData\n                        },\n                        reset: {\n                            placement: nextPlacement\n                        }\n                    };\n                }\n                let resetPlacement = (_overflowsData$filter = overflowsData.filter((d)=>d.overflows[0] <= 0).sort((a2, b2)=>a2.overflows[1] - b2.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n                if (!resetPlacement) {\n                    switch(fallbackStrategy){\n                        case \"bestFit\":\n                            {\n                                var _overflowsData$map$so;\n                                const placement2 = (_overflowsData$map$so = overflowsData.map((d)=>[\n                                        d.placement,\n                                        d.overflows.filter((overflow2)=>overflow2 > 0).reduce((acc, overflow2)=>acc + overflow2, 0)\n                                    ]).sort((a2, b2)=>a2[1] - b2[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                                if (placement2) {\n                                    resetPlacement = placement2;\n                                }\n                                break;\n                            }\n                        case \"initialPlacement\":\n                            resetPlacement = initialPlacement;\n                            break;\n                    }\n                }\n                if (placement !== resetPlacement) {\n                    return {\n                        reset: {\n                            placement: resetPlacement\n                        }\n                    };\n                }\n            }\n            return {};\n        }\n    };\n};\nfunction getSideOffsets(overflow, rect) {\n    return {\n        top: overflow.top - rect.height,\n        right: overflow.right - rect.width,\n        bottom: overflow.bottom - rect.height,\n        left: overflow.left - rect.width\n    };\n}\nfunction isAnySideFullyClipped(overflow) {\n    return sides.some((side)=>overflow[side] >= 0);\n}\nvar hide = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"hide\",\n        options,\n        async fn (state2) {\n            const { rects } = state2;\n            const { strategy = \"referenceHidden\", ...detectOverflowOptions } = evaluate(options, state2);\n            switch(strategy){\n                case \"referenceHidden\":\n                    {\n                        const overflow = await detectOverflow(state2, {\n                            ...detectOverflowOptions,\n                            elementContext: \"reference\"\n                        });\n                        const offsets = getSideOffsets(overflow, rects.reference);\n                        return {\n                            data: {\n                                referenceHiddenOffsets: offsets,\n                                referenceHidden: isAnySideFullyClipped(offsets)\n                            }\n                        };\n                    }\n                case \"escaped\":\n                    {\n                        const overflow = await detectOverflow(state2, {\n                            ...detectOverflowOptions,\n                            altBoundary: true\n                        });\n                        const offsets = getSideOffsets(overflow, rects.floating);\n                        return {\n                            data: {\n                                escapedOffsets: offsets,\n                                escaped: isAnySideFullyClipped(offsets)\n                            }\n                        };\n                    }\n                default:\n                    {\n                        return {};\n                    }\n            }\n        }\n    };\n};\nasync function convertValueToCoords(state2, options) {\n    const { placement, platform: platform2, elements } = state2;\n    const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));\n    const side = getSide(placement);\n    const alignment = getAlignment(placement);\n    const isVertical = getSideAxis(placement) === \"y\";\n    const mainAxisMulti = [\n        \"left\",\n        \"top\"\n    ].includes(side) ? -1 : 1;\n    const crossAxisMulti = rtl && isVertical ? -1 : 1;\n    const rawValue = evaluate(options, state2);\n    let { mainAxis, crossAxis, alignmentAxis } = typeof rawValue === \"number\" ? {\n        mainAxis: rawValue,\n        crossAxis: 0,\n        alignmentAxis: null\n    } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        alignmentAxis: null,\n        ...rawValue\n    };\n    if (alignment && typeof alignmentAxis === \"number\") {\n        crossAxis = alignment === \"end\" ? alignmentAxis * -1 : alignmentAxis;\n    }\n    return isVertical ? {\n        x: crossAxis * crossAxisMulti,\n        y: mainAxis * mainAxisMulti\n    } : {\n        x: mainAxis * mainAxisMulti,\n        y: crossAxis * crossAxisMulti\n    };\n}\nvar offset = function(options) {\n    if (options === void 0) {\n        options = 0;\n    }\n    return {\n        name: \"offset\",\n        options,\n        async fn (state2) {\n            const { x, y } = state2;\n            const diffCoords = await convertValueToCoords(state2, options);\n            return {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords\n            };\n        }\n    };\n};\nvar shift = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"shift\",\n        options,\n        async fn (state2) {\n            const { x, y, placement } = state2;\n            const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = false, limiter = {\n                fn: (_ref)=>{\n                    let { x: x2, y: y2 } = _ref;\n                    return {\n                        x: x2,\n                        y: y2\n                    };\n                }\n            }, ...detectOverflowOptions } = evaluate(options, state2);\n            const coords = {\n                x,\n                y\n            };\n            const overflow = await detectOverflow(state2, detectOverflowOptions);\n            const crossAxis = getSideAxis(getSide(placement));\n            const mainAxis = getOppositeAxis(crossAxis);\n            let mainAxisCoord = coords[mainAxis];\n            let crossAxisCoord = coords[crossAxis];\n            if (checkMainAxis) {\n                const minSide = mainAxis === \"y\" ? \"top\" : \"left\";\n                const maxSide = mainAxis === \"y\" ? \"bottom\" : \"right\";\n                const min2 = mainAxisCoord + overflow[minSide];\n                const max2 = mainAxisCoord - overflow[maxSide];\n                mainAxisCoord = clamp2(min2, mainAxisCoord, max2);\n            }\n            if (checkCrossAxis) {\n                const minSide = crossAxis === \"y\" ? \"top\" : \"left\";\n                const maxSide = crossAxis === \"y\" ? \"bottom\" : \"right\";\n                const min2 = crossAxisCoord + overflow[minSide];\n                const max2 = crossAxisCoord - overflow[maxSide];\n                crossAxisCoord = clamp2(min2, crossAxisCoord, max2);\n            }\n            const limitedCoords = limiter.fn({\n                ...state2,\n                [mainAxis]: mainAxisCoord,\n                [crossAxis]: crossAxisCoord\n            });\n            return {\n                ...limitedCoords,\n                data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                }\n            };\n        }\n    };\n};\nvar size = function(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return {\n        name: \"size\",\n        options,\n        async fn (state2) {\n            const { placement, rects, platform: platform2, elements } = state2;\n            const { apply = ()=>{}, ...detectOverflowOptions } = evaluate(options, state2);\n            const overflow = await detectOverflow(state2, detectOverflowOptions);\n            const side = getSide(placement);\n            const alignment = getAlignment(placement);\n            const isYAxis = getSideAxis(placement) === \"y\";\n            const { width, height } = rects.floating;\n            let heightSide;\n            let widthSide;\n            if (side === \"top\" || side === \"bottom\") {\n                heightSide = side;\n                widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? \"start\" : \"end\") ? \"left\" : \"right\";\n            } else {\n                widthSide = side;\n                heightSide = alignment === \"end\" ? \"top\" : \"bottom\";\n            }\n            const overflowAvailableHeight = height - overflow[heightSide];\n            const overflowAvailableWidth = width - overflow[widthSide];\n            const noShift = !state2.middlewareData.shift;\n            let availableHeight = overflowAvailableHeight;\n            let availableWidth = overflowAvailableWidth;\n            if (isYAxis) {\n                const maximumClippingWidth = width - overflow.left - overflow.right;\n                availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n            } else {\n                const maximumClippingHeight = height - overflow.top - overflow.bottom;\n                availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n            }\n            if (noShift && !alignment) {\n                const xMin = max(overflow.left, 0);\n                const xMax = max(overflow.right, 0);\n                const yMin = max(overflow.top, 0);\n                const yMax = max(overflow.bottom, 0);\n                if (isYAxis) {\n                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                } else {\n                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                }\n            }\n            await apply({\n                ...state2,\n                availableWidth,\n                availableHeight\n            });\n            const nextDimensions = await platform2.getDimensions(elements.floating);\n            if (width !== nextDimensions.width || height !== nextDimensions.height) {\n                return {\n                    reset: {\n                        rects: true\n                    }\n                };\n            }\n            return {};\n        }\n    };\n};\n// ../../node_modules/.pnpm/@floating-ui+utils@0.1.6/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs\nfunction getNodeName(node) {\n    if (isNode(node)) {\n        return (node.nodeName || \"\").toLowerCase();\n    }\n    return \"#document\";\n}\nfunction getWindow2(node) {\n    var _node$ownerDocument;\n    return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n    var _ref;\n    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n    return value instanceof Node || value instanceof getWindow2(value).Node;\n}\nfunction isElement(value) {\n    return value instanceof Element || value instanceof getWindow2(value).Element;\n}\nfunction isHTMLElement(value) {\n    return value instanceof HTMLElement || value instanceof getWindow2(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n    if (typeof ShadowRoot === \"undefined\") {\n        return false;\n    }\n    return value instanceof ShadowRoot || value instanceof getWindow2(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n    const { overflow, overflowX, overflowY, display } = getComputedStyle2(element);\n    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && ![\n        \"inline\",\n        \"contents\"\n    ].includes(display);\n}\nfunction isTableElement(element) {\n    return [\n        \"table\",\n        \"td\",\n        \"th\"\n    ].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n    const webkit = isWebKit();\n    const css = getComputedStyle2(element);\n    return css.transform !== \"none\" || css.perspective !== \"none\" || (css.containerType ? css.containerType !== \"normal\" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== \"none\" : false) || !webkit && (css.filter ? css.filter !== \"none\" : false) || [\n        \"transform\",\n        \"perspective\",\n        \"filter\"\n    ].some((value)=>(css.willChange || \"\").includes(value)) || [\n        \"paint\",\n        \"layout\",\n        \"strict\",\n        \"content\"\n    ].some((value)=>(css.contain || \"\").includes(value));\n}\nfunction getContainingBlock(element) {\n    let currentNode = getParentNode(element);\n    while(isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)){\n        if (isContainingBlock(currentNode)) {\n            return currentNode;\n        } else {\n            currentNode = getParentNode(currentNode);\n        }\n    }\n    return null;\n}\nfunction isWebKit() {\n    if (typeof CSS === \"undefined\" || !CSS.supports) return false;\n    return CSS.supports(\"-webkit-backdrop-filter\", \"none\");\n}\nfunction isLastTraversableNode(node) {\n    return [\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].includes(getNodeName(node));\n}\nfunction getComputedStyle2(element) {\n    return getWindow2(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n    if (isElement(element)) {\n        return {\n            scrollLeft: element.scrollLeft,\n            scrollTop: element.scrollTop\n        };\n    }\n    return {\n        scrollLeft: element.pageXOffset,\n        scrollTop: element.pageYOffset\n    };\n}\nfunction getParentNode(node) {\n    if (getNodeName(node) === \"html\") {\n        return node;\n    }\n    const result = // Step into the shadow DOM of the parent of a slotted node.\n    node.assignedSlot || // DOM Element detected.\n    node.parentNode || // ShadowRoot detected.\n    isShadowRoot(node) && node.host || // Fallback.\n    getDocumentElement(node);\n    return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n    const parentNode = getParentNode(node);\n    if (isLastTraversableNode(parentNode)) {\n        return node.ownerDocument ? node.ownerDocument.body : node.body;\n    }\n    if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n        return parentNode;\n    }\n    return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n    var _node$ownerDocument2;\n    if (list === void 0) {\n        list = [];\n    }\n    if (traverseIframes === void 0) {\n        traverseIframes = true;\n    }\n    const scrollableAncestor = getNearestOverflowAncestor(node);\n    const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n    const win = getWindow2(scrollableAncestor);\n    if (isBody) {\n        return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n    }\n    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n// ../../node_modules/.pnpm/@floating-ui+dom@1.5.3/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\nfunction getCssDimensions(element) {\n    const css = getComputedStyle2(element);\n    let width = parseFloat(css.width) || 0;\n    let height = parseFloat(css.height) || 0;\n    const hasOffset = isHTMLElement(element);\n    const offsetWidth = hasOffset ? element.offsetWidth : width;\n    const offsetHeight = hasOffset ? element.offsetHeight : height;\n    const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n    if (shouldFallback) {\n        width = offsetWidth;\n        height = offsetHeight;\n    }\n    return {\n        width,\n        height,\n        $: shouldFallback\n    };\n}\nfunction unwrapElement(element) {\n    return !isElement(element) ? element.contextElement : element;\n}\nfunction getScale(element) {\n    const domElement = unwrapElement(element);\n    if (!isHTMLElement(domElement)) {\n        return createCoords(1);\n    }\n    const rect = domElement.getBoundingClientRect();\n    const { width, height, $ } = getCssDimensions(domElement);\n    let x = ($ ? round(rect.width) : rect.width) / width;\n    let y = ($ ? round(rect.height) : rect.height) / height;\n    if (!x || !Number.isFinite(x)) {\n        x = 1;\n    }\n    if (!y || !Number.isFinite(y)) {\n        y = 1;\n    }\n    return {\n        x,\n        y\n    };\n}\nvar noOffsets = /* @__PURE__ */ createCoords(0);\nfunction getVisualOffsets(element) {\n    const win = getWindow2(element);\n    if (!isWebKit() || !win.visualViewport) {\n        return noOffsets;\n    }\n    return {\n        x: win.visualViewport.offsetLeft,\n        y: win.visualViewport.offsetTop\n    };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n    if (isFixed === void 0) {\n        isFixed = false;\n    }\n    if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow2(element)) {\n        return false;\n    }\n    return isFixed;\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n    if (includeScale === void 0) {\n        includeScale = false;\n    }\n    if (isFixedStrategy === void 0) {\n        isFixedStrategy = false;\n    }\n    const clientRect = element.getBoundingClientRect();\n    const domElement = unwrapElement(element);\n    let scale = createCoords(1);\n    if (includeScale) {\n        if (offsetParent) {\n            if (isElement(offsetParent)) {\n                scale = getScale(offsetParent);\n            }\n        } else {\n            scale = getScale(element);\n        }\n    }\n    const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n    let x = (clientRect.left + visualOffsets.x) / scale.x;\n    let y = (clientRect.top + visualOffsets.y) / scale.y;\n    let width = clientRect.width / scale.x;\n    let height = clientRect.height / scale.y;\n    if (domElement) {\n        const win = getWindow2(domElement);\n        const offsetWin = offsetParent && isElement(offsetParent) ? getWindow2(offsetParent) : offsetParent;\n        let currentIFrame = win.frameElement;\n        while(currentIFrame && offsetParent && offsetWin !== win){\n            const iframeScale = getScale(currentIFrame);\n            const iframeRect = currentIFrame.getBoundingClientRect();\n            const css = getComputedStyle2(currentIFrame);\n            const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n            const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n            x *= iframeScale.x;\n            y *= iframeScale.y;\n            width *= iframeScale.x;\n            height *= iframeScale.y;\n            x += left;\n            y += top;\n            currentIFrame = getWindow2(currentIFrame).frameElement;\n        }\n    }\n    return rectToClientRect({\n        width,\n        height,\n        x,\n        y\n    });\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n    let { rect, offsetParent, strategy } = _ref;\n    const isOffsetParentAnElement = isHTMLElement(offsetParent);\n    const documentElement = getDocumentElement(offsetParent);\n    if (offsetParent === documentElement) {\n        return rect;\n    }\n    let scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    let scale = createCoords(1);\n    const offsets = createCoords(0);\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n        if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n            scroll = getNodeScroll(offsetParent);\n        }\n        if (isHTMLElement(offsetParent)) {\n            const offsetRect = getBoundingClientRect(offsetParent);\n            scale = getScale(offsetParent);\n            offsets.x = offsetRect.x + offsetParent.clientLeft;\n            offsets.y = offsetRect.y + offsetParent.clientTop;\n        }\n    }\n    return {\n        width: rect.width * scale.x,\n        height: rect.height * scale.y,\n        x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n        y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n    };\n}\nfunction getClientRects(element) {\n    return Array.from(element.getClientRects());\n}\nfunction getWindowScrollBarX(element) {\n    return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getDocumentRect(element) {\n    const html = getDocumentElement(element);\n    const scroll = getNodeScroll(element);\n    const body = element.ownerDocument.body;\n    const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n    const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n    let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n    const y = -scroll.scrollTop;\n    if (getComputedStyle2(body).direction === \"rtl\") {\n        x += max(html.clientWidth, body.clientWidth) - width;\n    }\n    return {\n        width,\n        height,\n        x,\n        y\n    };\n}\nfunction getViewportRect(element, strategy) {\n    const win = getWindow2(element);\n    const html = getDocumentElement(element);\n    const visualViewport = win.visualViewport;\n    let width = html.clientWidth;\n    let height = html.clientHeight;\n    let x = 0;\n    let y = 0;\n    if (visualViewport) {\n        width = visualViewport.width;\n        height = visualViewport.height;\n        const visualViewportBased = isWebKit();\n        if (!visualViewportBased || visualViewportBased && strategy === \"fixed\") {\n            x = visualViewport.offsetLeft;\n            y = visualViewport.offsetTop;\n        }\n    }\n    return {\n        width,\n        height,\n        x,\n        y\n    };\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n    const clientRect = getBoundingClientRect(element, true, strategy === \"fixed\");\n    const top = clientRect.top + element.clientTop;\n    const left = clientRect.left + element.clientLeft;\n    const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n    const width = element.clientWidth * scale.x;\n    const height = element.clientHeight * scale.y;\n    const x = left * scale.x;\n    const y = top * scale.y;\n    return {\n        width,\n        height,\n        x,\n        y\n    };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n    let rect;\n    if (clippingAncestor === \"viewport\") {\n        rect = getViewportRect(element, strategy);\n    } else if (clippingAncestor === \"document\") {\n        rect = getDocumentRect(getDocumentElement(element));\n    } else if (isElement(clippingAncestor)) {\n        rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n    } else {\n        const visualOffsets = getVisualOffsets(element);\n        rect = {\n            ...clippingAncestor,\n            x: clippingAncestor.x - visualOffsets.x,\n            y: clippingAncestor.y - visualOffsets.y\n        };\n    }\n    return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n    const parentNode = getParentNode(element);\n    if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n        return false;\n    }\n    return getComputedStyle2(parentNode).position === \"fixed\" || hasFixedPositionAncestor(parentNode, stopNode);\n}\nfunction getClippingElementAncestors(element, cache) {\n    const cachedResult = cache.get(element);\n    if (cachedResult) {\n        return cachedResult;\n    }\n    let result = getOverflowAncestors(element, [], false).filter((el)=>isElement(el) && getNodeName(el) !== \"body\");\n    let currentContainingBlockComputedStyle = null;\n    const elementIsFixed = getComputedStyle2(element).position === \"fixed\";\n    let currentNode = elementIsFixed ? getParentNode(element) : element;\n    while(isElement(currentNode) && !isLastTraversableNode(currentNode)){\n        const computedStyle = getComputedStyle2(currentNode);\n        const currentNodeIsContaining = isContainingBlock(currentNode);\n        if (!currentNodeIsContaining && computedStyle.position === \"fixed\") {\n            currentContainingBlockComputedStyle = null;\n        }\n        const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === \"static\" && !!currentContainingBlockComputedStyle && [\n            \"absolute\",\n            \"fixed\"\n        ].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n        if (shouldDropCurrentNode) {\n            result = result.filter((ancestor)=>ancestor !== currentNode);\n        } else {\n            currentContainingBlockComputedStyle = computedStyle;\n        }\n        currentNode = getParentNode(currentNode);\n    }\n    cache.set(element, result);\n    return result;\n}\nfunction getClippingRect(_ref) {\n    let { element, boundary, rootBoundary, strategy } = _ref;\n    const elementClippingAncestors = boundary === \"clippingAncestors\" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n    const clippingAncestors = [\n        ...elementClippingAncestors,\n        rootBoundary\n    ];\n    const firstClippingAncestor = clippingAncestors[0];\n    const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor)=>{\n        const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n        accRect.top = max(rect.top, accRect.top);\n        accRect.right = min(rect.right, accRect.right);\n        accRect.bottom = min(rect.bottom, accRect.bottom);\n        accRect.left = max(rect.left, accRect.left);\n        return accRect;\n    }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n    return {\n        width: clippingRect.right - clippingRect.left,\n        height: clippingRect.bottom - clippingRect.top,\n        x: clippingRect.left,\n        y: clippingRect.top\n    };\n}\nfunction getDimensions(element) {\n    return getCssDimensions(element);\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n    const isOffsetParentAnElement = isHTMLElement(offsetParent);\n    const documentElement = getDocumentElement(offsetParent);\n    const isFixed = strategy === \"fixed\";\n    const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n    let scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    const offsets = createCoords(0);\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n            scroll = getNodeScroll(offsetParent);\n        }\n        if (isOffsetParentAnElement) {\n            const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n            offsets.x = offsetRect.x + offsetParent.clientLeft;\n            offsets.y = offsetRect.y + offsetParent.clientTop;\n        } else if (documentElement) {\n            offsets.x = getWindowScrollBarX(documentElement);\n        }\n    }\n    return {\n        x: rect.left + scroll.scrollLeft - offsets.x,\n        y: rect.top + scroll.scrollTop - offsets.y,\n        width: rect.width,\n        height: rect.height\n    };\n}\nfunction getTrueOffsetParent(element, polyfill) {\n    if (!isHTMLElement(element) || getComputedStyle2(element).position === \"fixed\") {\n        return null;\n    }\n    if (polyfill) {\n        return polyfill(element);\n    }\n    return element.offsetParent;\n}\nfunction getOffsetParent(element, polyfill) {\n    const window2 = getWindow2(element);\n    if (!isHTMLElement(element)) {\n        return window2;\n    }\n    let offsetParent = getTrueOffsetParent(element, polyfill);\n    while(offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === \"static\"){\n        offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n    }\n    if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle2(offsetParent).position === \"static\" && !isContainingBlock(offsetParent))) {\n        return window2;\n    }\n    return offsetParent || getContainingBlock(element) || window2;\n}\nvar getElementRects = async function(_ref) {\n    let { reference, floating, strategy } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n        reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n        floating: {\n            x: 0,\n            y: 0,\n            ...await getDimensionsFn(floating)\n        }\n    };\n};\nfunction isRTL(element) {\n    return getComputedStyle2(element).direction === \"rtl\";\n}\nvar platform = {\n    convertOffsetParentRelativeRectToViewportRelativeRect,\n    getDocumentElement,\n    getClippingRect,\n    getOffsetParent,\n    getElementRects,\n    getClientRects,\n    getDimensions,\n    getScale,\n    isElement,\n    isRTL\n};\nfunction observeMove(element, onMove) {\n    let io = null;\n    let timeoutId;\n    const root = getDocumentElement(element);\n    function cleanup() {\n        clearTimeout(timeoutId);\n        io && io.disconnect();\n        io = null;\n    }\n    function refresh(skip, threshold) {\n        if (skip === void 0) {\n            skip = false;\n        }\n        if (threshold === void 0) {\n            threshold = 1;\n        }\n        cleanup();\n        const { left, top, width, height } = element.getBoundingClientRect();\n        if (!skip) {\n            onMove();\n        }\n        if (!width || !height) {\n            return;\n        }\n        const insetTop = floor(top);\n        const insetRight = floor(root.clientWidth - (left + width));\n        const insetBottom = floor(root.clientHeight - (top + height));\n        const insetLeft = floor(left);\n        const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n        const options = {\n            rootMargin,\n            threshold: max(0, min(1, threshold)) || 1\n        };\n        let isFirstUpdate = true;\n        function handleObserve(entries2) {\n            const ratio = entries2[0].intersectionRatio;\n            if (ratio !== threshold) {\n                if (!isFirstUpdate) {\n                    return refresh();\n                }\n                if (!ratio) {\n                    timeoutId = setTimeout(()=>{\n                        refresh(false, 1e-7);\n                    }, 100);\n                } else {\n                    refresh(false, ratio);\n                }\n            }\n            isFirstUpdate = false;\n        }\n        try {\n            io = new IntersectionObserver(handleObserve, {\n                ...options,\n                // Handle <iframe>s\n                root: root.ownerDocument\n            });\n        } catch (e2) {\n            io = new IntersectionObserver(handleObserve, options);\n        }\n        io.observe(element);\n    }\n    refresh(true);\n    return cleanup;\n}\nfunction autoUpdate(reference, floating, update, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    const { ancestorScroll = true, ancestorResize = true, elementResize = typeof ResizeObserver === \"function\", layoutShift = typeof IntersectionObserver === \"function\", animationFrame = false } = options;\n    const referenceEl = unwrapElement(reference);\n    const ancestors = ancestorScroll || ancestorResize ? [\n        ...referenceEl ? getOverflowAncestors(referenceEl) : [],\n        ...getOverflowAncestors(floating)\n    ] : [];\n    ancestors.forEach((ancestor)=>{\n        ancestorScroll && ancestor.addEventListener(\"scroll\", update, {\n            passive: true\n        });\n        ancestorResize && ancestor.addEventListener(\"resize\", update);\n    });\n    const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n    let reobserveFrame = -1;\n    let resizeObserver = null;\n    if (elementResize) {\n        resizeObserver = new ResizeObserver((_ref)=>{\n            let [firstEntry] = _ref;\n            if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n                resizeObserver.unobserve(floating);\n                cancelAnimationFrame(reobserveFrame);\n                reobserveFrame = requestAnimationFrame(()=>{\n                    resizeObserver && resizeObserver.observe(floating);\n                });\n            }\n            update();\n        });\n        if (referenceEl && !animationFrame) {\n            resizeObserver.observe(referenceEl);\n        }\n        resizeObserver.observe(floating);\n    }\n    let frameId;\n    let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n    if (animationFrame) {\n        frameLoop();\n    }\n    function frameLoop() {\n        const nextRefRect = getBoundingClientRect(reference);\n        if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n            update();\n        }\n        prevRefRect = nextRefRect;\n        frameId = requestAnimationFrame(frameLoop);\n    }\n    update();\n    return ()=>{\n        ancestors.forEach((ancestor)=>{\n            ancestorScroll && ancestor.removeEventListener(\"scroll\", update);\n            ancestorResize && ancestor.removeEventListener(\"resize\", update);\n        });\n        cleanupIo && cleanupIo();\n        resizeObserver && resizeObserver.disconnect();\n        resizeObserver = null;\n        if (animationFrame) {\n            cancelAnimationFrame(frameId);\n        }\n    };\n}\nvar computePosition2 = (reference, floating, options)=>{\n    const cache = /* @__PURE__ */ new Map();\n    const mergedOptions = {\n        platform,\n        ...options\n    };\n    const platformWithCache = {\n        ...mergedOptions.platform,\n        _c: cache\n    };\n    return computePosition(reference, floating, {\n        ...mergedOptions,\n        platform: platformWithCache\n    });\n};\n// ../../node_modules/.pnpm/@kobalte+core@0.11.2_solid-js@1.8.14/node_modules/@kobalte/core/dist/esm/index.js\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction buildNodes(params) {\n    var _params_startIndex;\n    let index = (_params_startIndex = params.startIndex) !== null && _params_startIndex !== void 0 ? _params_startIndex : 0;\n    var _params_startLevel;\n    const level = (_params_startLevel = params.startLevel) !== null && _params_startLevel !== void 0 ? _params_startLevel : 0;\n    const nodes = [];\n    const getKey = (data)=>{\n        if (data == null) {\n            return \"\";\n        }\n        var _params_getKey;\n        const _getKey = (_params_getKey = params.getKey) !== null && _params_getKey !== void 0 ? _params_getKey : \"key\";\n        const dataKey = isString(_getKey) ? data[_getKey] : _getKey(data);\n        return dataKey != null ? String(dataKey) : \"\";\n    };\n    const getTextValue = (data)=>{\n        if (data == null) {\n            return \"\";\n        }\n        var _params_getTextValue;\n        const _getTextValue = (_params_getTextValue = params.getTextValue) !== null && _params_getTextValue !== void 0 ? _params_getTextValue : \"textValue\";\n        const dataTextValue = isString(_getTextValue) ? data[_getTextValue] : _getTextValue(data);\n        return dataTextValue != null ? String(dataTextValue) : \"\";\n    };\n    const getDisabled = (data)=>{\n        if (data == null) {\n            return false;\n        }\n        var _params_getDisabled;\n        const _getDisabled = (_params_getDisabled = params.getDisabled) !== null && _params_getDisabled !== void 0 ? _params_getDisabled : \"disabled\";\n        var _ref;\n        return (_ref = isString(_getDisabled) ? data[_getDisabled] : _getDisabled(data)) !== null && _ref !== void 0 ? _ref : false;\n    };\n    const getSectionChildren = (data)=>{\n        var _params_getSectionChildren;\n        if (data == null) {\n            return void 0;\n        }\n        if (isString(params.getSectionChildren)) {\n            return data[params.getSectionChildren];\n        }\n        return (_params_getSectionChildren = params.getSectionChildren) === null || _params_getSectionChildren === void 0 ? void 0 : _params_getSectionChildren.call(params, data);\n    };\n    for (const data of params.dataSource){\n        if (isString(data) || isNumber(data)) {\n            nodes.push({\n                type: \"item\",\n                rawValue: data,\n                key: String(data),\n                textValue: String(data),\n                disabled: getDisabled(data),\n                level,\n                index\n            });\n            index++;\n            continue;\n        }\n        if (getSectionChildren(data) != null) {\n            nodes.push({\n                type: \"section\",\n                rawValue: data,\n                key: \"\",\n                // not applicable here\n                textValue: \"\",\n                // not applicable here\n                disabled: false,\n                // not applicable here\n                level,\n                index\n            });\n            index++;\n            var _getSectionChildren;\n            const sectionChildren = (_getSectionChildren = getSectionChildren(data)) !== null && _getSectionChildren !== void 0 ? _getSectionChildren : [];\n            if (sectionChildren.length > 0) {\n                const childNodes = buildNodes({\n                    dataSource: sectionChildren,\n                    getKey: params.getKey,\n                    getTextValue: params.getTextValue,\n                    getDisabled: params.getDisabled,\n                    getSectionChildren: params.getSectionChildren,\n                    startIndex: index,\n                    startLevel: level + 1\n                });\n                nodes.push(...childNodes);\n                index += childNodes.length;\n            }\n        } else {\n            nodes.push({\n                type: \"item\",\n                rawValue: data,\n                key: getKey(data),\n                textValue: getTextValue(data),\n                disabled: getDisabled(data),\n                level,\n                index\n            });\n            index++;\n        }\n    }\n    return nodes;\n}\nfunction createCollection(props) {\n    let deps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    const initialNodes = buildNodes({\n        dataSource: access(props.dataSource),\n        getKey: access(props.getKey),\n        getTextValue: access(props.getTextValue),\n        getDisabled: access(props.getDisabled),\n        getSectionChildren: access(props.getSectionChildren)\n    });\n    const [collection, setCollection] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(props.factory(initialNodes));\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        ()=>access(props.dataSource),\n        ()=>access(props.getKey),\n        ()=>access(props.getTextValue),\n        ()=>access(props.getDisabled),\n        ()=>access(props.getSectionChildren),\n        ()=>props.factory,\n        ...deps\n    ], (param)=>{\n        let [dataSource, getKey, getTextValue, getDisabled, getSectionChildren, factory] = param;\n        const nodes = buildNodes({\n            dataSource,\n            getKey,\n            getTextValue,\n            getDisabled,\n            getSectionChildren\n        });\n        setCollection(()=>factory(nodes));\n    }, {\n        defer: true\n    }));\n    return collection;\n}\nfunction createControllableSignal(props) {\n    var _props_defaultValue;\n    const [_value, _setValue] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)((_props_defaultValue = props.defaultValue) === null || _props_defaultValue === void 0 ? void 0 : _props_defaultValue.call(props));\n    const isControlled = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _props_value;\n        return ((_props_value = props.value) === null || _props_value === void 0 ? void 0 : _props_value.call(props)) !== void 0;\n    });\n    const value = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _props_value;\n        return isControlled() ? (_props_value = props.value) === null || _props_value === void 0 ? void 0 : _props_value.call(props) : _value();\n    });\n    const setValue = (next)=>{\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.untrack)(()=>{\n            const nextValue = accessWith(next, value());\n            if (!Object.is(nextValue, value())) {\n                var _props_onChange;\n                if (!isControlled()) {\n                    _setValue(nextValue);\n                }\n                (_props_onChange = props.onChange) === null || _props_onChange === void 0 ? void 0 : _props_onChange.call(props, nextValue);\n            }\n            return nextValue;\n        });\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction createControllableBooleanSignal(props) {\n    const [_value, setValue] = createControllableSignal(props);\n    const value = ()=>{\n        var _value1;\n        return (_value1 = _value()) !== null && _value1 !== void 0 ? _value1 : false;\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction createControllableArraySignal(props) {\n    const [_value, setValue] = createControllableSignal(props);\n    const value = ()=>{\n        var _value1;\n        return (_value1 = _value()) !== null && _value1 !== void 0 ? _value1 : [];\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction createDisclosureState() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [isOpen, setIsOpen] = createControllableBooleanSignal({\n        value: ()=>access(props.open),\n        defaultValue: ()=>!!access(props.defaultOpen),\n        onChange: (value)=>{\n            var _props_onOpenChange;\n            return (_props_onOpenChange = props.onOpenChange) === null || _props_onOpenChange === void 0 ? void 0 : _props_onOpenChange.call(props, value);\n        }\n    });\n    const open = ()=>{\n        setIsOpen(true);\n    };\n    const close = ()=>{\n        setIsOpen(false);\n    };\n    const toggle = ()=>{\n        isOpen() ? close() : open();\n    };\n    return {\n        isOpen,\n        setIsOpen,\n        open,\n        close,\n        toggle\n    };\n}\nfunction createEscapeKeyDown(props) {\n    const handleKeyDown = (event)=>{\n        if (event.key === EventKey.Escape) {\n            var _props_onEscapeKeyDown;\n            (_props_onEscapeKeyDown = props.onEscapeKeyDown) === null || _props_onEscapeKeyDown === void 0 ? void 0 : _props_onEscapeKeyDown.call(props, event);\n        }\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _props_ownerDocument;\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (access(props.isDisabled)) {\n            return;\n        }\n        var _props_ownerDocument1;\n        const document2 = (_props_ownerDocument1 = (_props_ownerDocument = props.ownerDocument) === null || _props_ownerDocument === void 0 ? void 0 : _props_ownerDocument.call(props)) !== null && _props_ownerDocument1 !== void 0 ? _props_ownerDocument1 : getDocument();\n        document2.addEventListener(\"keydown\", handleKeyDown);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            document2.removeEventListener(\"keydown\", handleKeyDown);\n        });\n    });\n}\nvar DATA_TOP_LAYER_ATTR = \"data-kb-top-layer\";\nvar originalBodyPointerEvents;\nvar hasDisabledBodyPointerEvents = false;\nvar layers = [];\nfunction indexOf(node) {\n    return layers.findIndex((layer)=>layer.node === node);\n}\nfunction find(node) {\n    return layers[indexOf(node)];\n}\nfunction isTopMostLayer(node) {\n    return layers[layers.length - 1].node === node;\n}\nfunction getPointerBlockingLayers() {\n    return layers.filter((layer)=>layer.isPointerBlocking);\n}\nfunction getTopMostPointerBlockingLayer() {\n    return [\n        ...getPointerBlockingLayers()\n    ].slice(-1)[0];\n}\nfunction hasPointerBlockingLayer() {\n    return getPointerBlockingLayers().length > 0;\n}\nfunction isBelowPointerBlockingLayer(node) {\n    var _getTopMostPointerBlockingLayer;\n    const highestBlockingIndex = indexOf((_getTopMostPointerBlockingLayer = getTopMostPointerBlockingLayer()) === null || _getTopMostPointerBlockingLayer === void 0 ? void 0 : _getTopMostPointerBlockingLayer.node);\n    return indexOf(node) < highestBlockingIndex;\n}\nfunction addLayer(layer) {\n    layers.push(layer);\n}\nfunction removeLayer(node) {\n    const index = indexOf(node);\n    if (index < 0) {\n        return;\n    }\n    layers.splice(index, 1);\n}\nfunction assignPointerEventToLayers() {\n    layers.forEach((param)=>{\n        let { node } = param;\n        node.style.pointerEvents = isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n    });\n}\nfunction disableBodyPointerEvents(node) {\n    if (hasPointerBlockingLayer() && !hasDisabledBodyPointerEvents) {\n        const ownerDocument = getDocument(node);\n        originalBodyPointerEvents = document.body.style.pointerEvents;\n        ownerDocument.body.style.pointerEvents = \"none\";\n        hasDisabledBodyPointerEvents = true;\n    }\n}\nfunction restoreBodyPointerEvents(node) {\n    if (hasPointerBlockingLayer()) {\n        return;\n    }\n    const ownerDocument = getDocument(node);\n    ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n    if (ownerDocument.body.style.length === 0) {\n        ownerDocument.body.removeAttribute(\"style\");\n    }\n    hasDisabledBodyPointerEvents = false;\n}\nvar layerStack = {\n    layers,\n    isTopMostLayer,\n    hasPointerBlockingLayer,\n    isBelowPointerBlockingLayer,\n    addLayer,\n    removeLayer,\n    indexOf,\n    find,\n    assignPointerEventToLayers,\n    disableBodyPointerEvents,\n    restoreBodyPointerEvents\n};\nvar AUTOFOCUS_ON_MOUNT_EVENT = \"focusScope.autoFocusOnMount\";\nvar AUTOFOCUS_ON_UNMOUNT_EVENT = \"focusScope.autoFocusOnUnmount\";\nvar EVENT_OPTIONS = {\n    bubbles: false,\n    cancelable: true\n};\nvar focusScopeStack = {\n    /** A stack of focus scopes, with the active one at the top */ stack: [],\n    active () {\n        return this.stack[0];\n    },\n    add (scope) {\n        if (scope !== this.active()) {\n            var _this_active;\n            (_this_active = this.active()) === null || _this_active === void 0 ? void 0 : _this_active.pause();\n        }\n        this.stack = removeItemFromArray(this.stack, scope);\n        this.stack.unshift(scope);\n    },\n    remove (scope) {\n        var _this_active;\n        this.stack = removeItemFromArray(this.stack, scope);\n        (_this_active = this.active()) === null || _this_active === void 0 ? void 0 : _this_active.resume();\n    }\n};\nfunction createFocusScope(props, ref) {\n    const [isPaused, setIsPaused] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const focusScope = {\n        pause () {\n            setIsPaused(true);\n        },\n        resume () {\n            setIsPaused(false);\n        }\n    };\n    let lastFocusedElement = null;\n    const onMountAutoFocus = (e2)=>{\n        var _props_onMountAutoFocus;\n        return (_props_onMountAutoFocus = props.onMountAutoFocus) === null || _props_onMountAutoFocus === void 0 ? void 0 : _props_onMountAutoFocus.call(props, e2);\n    };\n    const onUnmountAutoFocus = (e2)=>{\n        var _props_onUnmountAutoFocus;\n        return (_props_onUnmountAutoFocus = props.onUnmountAutoFocus) === null || _props_onUnmountAutoFocus === void 0 ? void 0 : _props_onUnmountAutoFocus.call(props, e2);\n    };\n    const ownerDocument = ()=>getDocument(ref());\n    const createSentinel = ()=>{\n        const element = ownerDocument().createElement(\"span\");\n        element.setAttribute(\"data-focus-trap\", \"\");\n        element.tabIndex = 0;\n        Object.assign(element.style, visuallyHiddenStyles);\n        return element;\n    };\n    const tabbables = ()=>{\n        const container = ref();\n        if (!container) {\n            return [];\n        }\n        return getAllTabbableIn(container, true).filter((el)=>!el.hasAttribute(\"data-focus-trap\"));\n    };\n    const firstTabbable = ()=>{\n        const items = tabbables();\n        return items.length > 0 ? items[0] : null;\n    };\n    const lastTabbable = ()=>{\n        const items = tabbables();\n        return items.length > 0 ? items[items.length - 1] : null;\n    };\n    const shouldPreventUnmountAutoFocus = ()=>{\n        const container = ref();\n        if (!container) {\n            return false;\n        }\n        const activeElement = getActiveElement(container);\n        if (!activeElement) {\n            return false;\n        }\n        if (contains(container, activeElement)) {\n            return false;\n        }\n        return isFocusable(activeElement);\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        const container = ref();\n        if (!container) {\n            return;\n        }\n        focusScopeStack.add(focusScope);\n        const previouslyFocusedElement = getActiveElement(container);\n        const hasFocusedCandidate = contains(container, previouslyFocusedElement);\n        if (!hasFocusedCandidate) {\n            const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT_EVENT, EVENT_OPTIONS);\n            container.addEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);\n            container.dispatchEvent(mountEvent);\n            if (!mountEvent.defaultPrevented) {\n                setTimeout(()=>{\n                    focusWithoutScrolling(firstTabbable());\n                    if (getActiveElement(container) === previouslyFocusedElement) {\n                        focusWithoutScrolling(container);\n                    }\n                }, 0);\n            }\n        }\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            container.removeEventListener(AUTOFOCUS_ON_MOUNT_EVENT, onMountAutoFocus);\n            setTimeout(()=>{\n                const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT_EVENT, EVENT_OPTIONS);\n                if (shouldPreventUnmountAutoFocus()) {\n                    unmountEvent.preventDefault();\n                }\n                container.addEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);\n                container.dispatchEvent(unmountEvent);\n                if (!unmountEvent.defaultPrevented) {\n                    focusWithoutScrolling(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : ownerDocument().body);\n                }\n                container.removeEventListener(AUTOFOCUS_ON_UNMOUNT_EVENT, onUnmountAutoFocus);\n                focusScopeStack.remove(focusScope);\n            }, 0);\n        });\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        const container = ref();\n        if (!container || !access(props.trapFocus) || isPaused()) {\n            return;\n        }\n        const onFocusIn = (event)=>{\n            const target = event.target;\n            if (target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(DATA_TOP_LAYER_ATTR, \"]\"))) {\n                return;\n            }\n            if (contains(container, target)) {\n                lastFocusedElement = target;\n            } else {\n                focusWithoutScrolling(lastFocusedElement);\n            }\n        };\n        const onFocusOut = (event)=>{\n            const relatedTarget = event.relatedTarget;\n            const target = relatedTarget !== null && relatedTarget !== void 0 ? relatedTarget : getActiveElement(container);\n            if (target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(DATA_TOP_LAYER_ATTR, \"]\"))) {\n                return;\n            }\n            if (!contains(container, target)) {\n                focusWithoutScrolling(lastFocusedElement);\n            }\n        };\n        ownerDocument().addEventListener(\"focusin\", onFocusIn);\n        ownerDocument().addEventListener(\"focusout\", onFocusOut);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            ownerDocument().removeEventListener(\"focusin\", onFocusIn);\n            ownerDocument().removeEventListener(\"focusout\", onFocusOut);\n        });\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        const container = ref();\n        if (!container || !access(props.trapFocus) || isPaused()) {\n            return;\n        }\n        const startSentinel = createSentinel();\n        container.insertAdjacentElement(\"afterbegin\", startSentinel);\n        const endSentinel = createSentinel();\n        container.insertAdjacentElement(\"beforeend\", endSentinel);\n        function onFocus(event) {\n            const first = firstTabbable();\n            const last = lastTabbable();\n            if (event.relatedTarget === first) {\n                focusWithoutScrolling(last);\n            } else {\n                focusWithoutScrolling(first);\n            }\n        }\n        startSentinel.addEventListener(\"focusin\", onFocus);\n        endSentinel.addEventListener(\"focusin\", onFocus);\n        const observer = new MutationObserver((mutations)=>{\n            for (const mutation of mutations){\n                if (mutation.previousSibling === endSentinel) {\n                    endSentinel.remove();\n                    container.insertAdjacentElement(\"beforeend\", endSentinel);\n                }\n                if (mutation.nextSibling === startSentinel) {\n                    startSentinel.remove();\n                    container.insertAdjacentElement(\"afterbegin\", startSentinel);\n                }\n            }\n        });\n        observer.observe(container, {\n            childList: true,\n            subtree: false\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            startSentinel.removeEventListener(\"focusin\", onFocus);\n            endSentinel.removeEventListener(\"focusin\", onFocus);\n            startSentinel.remove();\n            endSentinel.remove();\n            observer.disconnect();\n        });\n    });\n}\nfunction createFormResetListener(element, handler) {\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(element, (element2)=>{\n        if (element2 == null) {\n            return;\n        }\n        const form = getClosestForm(element2);\n        if (form == null) {\n            return;\n        }\n        form.addEventListener(\"reset\", handler, {\n            passive: true\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            form.removeEventListener(\"reset\", handler);\n        });\n    }));\n}\nfunction getClosestForm(element) {\n    return isFormElement(element) ? element.form : element.closest(\"form\");\n}\nfunction isFormElement(element) {\n    return element.matches(\"textarea, input, select, button\");\n}\nvar DATA_LIVE_ANNOUNCER_ATTR = \"data-live-announcer\";\nfunction createHideOutside(props) {\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (access(props.isDisabled)) {\n            return;\n        }\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(ariaHideOutside(access(props.targets), access(props.root)));\n    });\n}\nvar refCountMap = /* @__PURE__ */ new WeakMap();\nvar observerStack = [];\nfunction ariaHideOutside(targets) {\n    let root = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : document.body;\n    const visibleNodes = new Set(targets);\n    const hiddenNodes = /* @__PURE__ */ new Set();\n    const walk = (root2)=>{\n        for (const element of root2.querySelectorAll(\"[\".concat(DATA_LIVE_ANNOUNCER_ATTR, \"], [\").concat(DATA_TOP_LAYER_ATTR, \"]\"))){\n            visibleNodes.add(element);\n        }\n        const acceptNode = (node)=>{\n            if (visibleNodes.has(node) || node.parentElement && hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute(\"role\") !== \"row\") {\n                return NodeFilter.FILTER_REJECT;\n            }\n            for (const target of visibleNodes){\n                if (node.contains(target)) {\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n            return NodeFilter.FILTER_ACCEPT;\n        };\n        const walker = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {\n            acceptNode\n        });\n        const acceptRoot = acceptNode(root2);\n        if (acceptRoot === NodeFilter.FILTER_ACCEPT) {\n            hide2(root2);\n        }\n        if (acceptRoot !== NodeFilter.FILTER_REJECT) {\n            let node = walker.nextNode();\n            while(node != null){\n                hide2(node);\n                node = walker.nextNode();\n            }\n        }\n    };\n    const hide2 = (node)=>{\n        var _refCountMap_get;\n        const refCount = (_refCountMap_get = refCountMap.get(node)) !== null && _refCountMap_get !== void 0 ? _refCountMap_get : 0;\n        if (node.getAttribute(\"aria-hidden\") === \"true\" && refCount === 0) {\n            return;\n        }\n        if (refCount === 0) {\n            node.setAttribute(\"aria-hidden\", \"true\");\n        }\n        hiddenNodes.add(node);\n        refCountMap.set(node, refCount + 1);\n    };\n    if (observerStack.length) {\n        observerStack[observerStack.length - 1].disconnect();\n    }\n    walk(root);\n    const observer = new MutationObserver((changes)=>{\n        for (const change of changes){\n            if (change.type !== \"childList\" || change.addedNodes.length === 0) {\n                continue;\n            }\n            if (![\n                ...visibleNodes,\n                ...hiddenNodes\n            ].some((node)=>node.contains(change.target))) {\n                for (const node of change.removedNodes){\n                    if (node instanceof Element) {\n                        visibleNodes.delete(node);\n                        hiddenNodes.delete(node);\n                    }\n                }\n                for (const node of change.addedNodes){\n                    if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === \"true\" || node.dataset.reactAriaTopLayer === \"true\")) {\n                        visibleNodes.add(node);\n                    } else if (node instanceof Element) {\n                        walk(node);\n                    }\n                }\n            }\n        }\n    });\n    observer.observe(root, {\n        childList: true,\n        subtree: true\n    });\n    const observerWrapper = {\n        observe () {\n            observer.observe(root, {\n                childList: true,\n                subtree: true\n            });\n        },\n        disconnect () {\n            observer.disconnect();\n        }\n    };\n    observerStack.push(observerWrapper);\n    return ()=>{\n        observer.disconnect();\n        for (const node of hiddenNodes){\n            const count = refCountMap.get(node);\n            if (count == null) {\n                return;\n            }\n            if (count === 1) {\n                node.removeAttribute(\"aria-hidden\");\n                refCountMap.delete(node);\n            } else {\n                refCountMap.set(node, count - 1);\n            }\n        }\n        if (observerWrapper === observerStack[observerStack.length - 1]) {\n            observerStack.pop();\n            if (observerStack.length) {\n                observerStack[observerStack.length - 1].observe();\n            }\n        } else {\n            observerStack.splice(observerStack.indexOf(observerWrapper), 1);\n        }\n    };\n}\nvar POINTER_DOWN_OUTSIDE_EVENT = \"interactOutside.pointerDownOutside\";\nvar FOCUS_OUTSIDE_EVENT = \"interactOutside.focusOutside\";\nfunction createInteractOutside(props, ref) {\n    let pointerDownTimeoutId;\n    let clickHandler = noop3;\n    const ownerDocument = ()=>getDocument(ref());\n    const onPointerDownOutside = (e2)=>{\n        var _props_onPointerDownOutside;\n        return (_props_onPointerDownOutside = props.onPointerDownOutside) === null || _props_onPointerDownOutside === void 0 ? void 0 : _props_onPointerDownOutside.call(props, e2);\n    };\n    const onFocusOutside = (e2)=>{\n        var _props_onFocusOutside;\n        return (_props_onFocusOutside = props.onFocusOutside) === null || _props_onFocusOutside === void 0 ? void 0 : _props_onFocusOutside.call(props, e2);\n    };\n    const onInteractOutside = (e2)=>{\n        var _props_onInteractOutside;\n        return (_props_onInteractOutside = props.onInteractOutside) === null || _props_onInteractOutside === void 0 ? void 0 : _props_onInteractOutside.call(props, e2);\n    };\n    const isEventOutside = (e2)=>{\n        var _props_shouldExcludeElement;\n        const target = e2.target;\n        if (!(target instanceof HTMLElement)) {\n            return false;\n        }\n        if (target.closest(\"[\".concat(DATA_TOP_LAYER_ATTR, \"]\"))) {\n            return false;\n        }\n        if (!contains(ownerDocument(), target)) {\n            return false;\n        }\n        if (contains(ref(), target)) {\n            return false;\n        }\n        return !((_props_shouldExcludeElement = props.shouldExcludeElement) === null || _props_shouldExcludeElement === void 0 ? void 0 : _props_shouldExcludeElement.call(props, target));\n    };\n    const onPointerDown = (e2)=>{\n        function handler() {\n            const container = ref();\n            const target = e2.target;\n            if (!container || !target || !isEventOutside(e2)) {\n                return;\n            }\n            const handler2 = composeEventHandlers([\n                onPointerDownOutside,\n                onInteractOutside\n            ]);\n            target.addEventListener(POINTER_DOWN_OUTSIDE_EVENT, handler2, {\n                once: true\n            });\n            const pointerDownOutsideEvent = new CustomEvent(POINTER_DOWN_OUTSIDE_EVENT, {\n                bubbles: false,\n                cancelable: true,\n                detail: {\n                    originalEvent: e2,\n                    isContextMenu: e2.button === 2 || isCtrlKey(e2) && e2.button === 0\n                }\n            });\n            target.dispatchEvent(pointerDownOutsideEvent);\n        }\n        if (e2.pointerType === \"touch\") {\n            ownerDocument().removeEventListener(\"click\", handler);\n            clickHandler = handler;\n            ownerDocument().addEventListener(\"click\", handler, {\n                once: true\n            });\n        } else {\n            handler();\n        }\n    };\n    const onFocusIn = (e2)=>{\n        const container = ref();\n        const target = e2.target;\n        if (!container || !target || !isEventOutside(e2)) {\n            return;\n        }\n        const handler = composeEventHandlers([\n            onFocusOutside,\n            onInteractOutside\n        ]);\n        target.addEventListener(FOCUS_OUTSIDE_EVENT, handler, {\n            once: true\n        });\n        const focusOutsideEvent = new CustomEvent(FOCUS_OUTSIDE_EVENT, {\n            bubbles: false,\n            cancelable: true,\n            detail: {\n                originalEvent: e2,\n                isContextMenu: false\n            }\n        });\n        target.dispatchEvent(focusOutsideEvent);\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (access(props.isDisabled)) {\n            return;\n        }\n        pointerDownTimeoutId = window.setTimeout(()=>{\n            ownerDocument().addEventListener(\"pointerdown\", onPointerDown, true);\n        }, 0);\n        ownerDocument().addEventListener(\"focusin\", onFocusIn, true);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            window.clearTimeout(pointerDownTimeoutId);\n            ownerDocument().removeEventListener(\"click\", clickHandler);\n            ownerDocument().removeEventListener(\"pointerdown\", onPointerDown, true);\n            ownerDocument().removeEventListener(\"focusin\", onFocusIn, true);\n        });\n    });\n}\nfunction createPresence(present) {\n    const [node, setNode] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    let styles = {};\n    let prevPresent = present();\n    let prevAnimationName = \"none\";\n    const [state2, send] = createStateMachine(present() ? \"mounted\" : \"unmounted\", {\n        mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n        },\n        unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n        },\n        unmounted: {\n            MOUNT: \"mounted\"\n        }\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(state2, (state3)=>{\n        const currentAnimationName = getAnimationName(styles);\n        prevAnimationName = state3 === \"mounted\" ? currentAnimationName : \"none\";\n    }));\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(present, (present2)=>{\n        if (prevPresent === present2) {\n            return;\n        }\n        const currentAnimationName = getAnimationName(styles);\n        if (present2) {\n            send(\"MOUNT\");\n        } else if ((styles === null || styles === void 0 ? void 0 : styles.display) === \"none\") {\n            send(\"UNMOUNT\");\n        } else {\n            const isAnimating = prevAnimationName !== currentAnimationName;\n            if (prevPresent && isAnimating) {\n                send(\"ANIMATION_OUT\");\n            } else {\n                send(\"UNMOUNT\");\n            }\n        }\n        prevPresent = present2;\n    }));\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(node, (node2)=>{\n        if (node2) {\n            const handleAnimationEnd = (event)=>{\n                const currentAnimationName = getAnimationName(styles);\n                const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n                if (event.target === node2 && isCurrentAnimation) {\n                    send(\"ANIMATION_END\");\n                }\n            };\n            const handleAnimationStart = (event)=>{\n                if (event.target === node2) {\n                    prevAnimationName = getAnimationName(styles);\n                }\n            };\n            node2.addEventListener(\"animationstart\", handleAnimationStart);\n            node2.addEventListener(\"animationcancel\", handleAnimationEnd);\n            node2.addEventListener(\"animationend\", handleAnimationEnd);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n                node2.removeEventListener(\"animationstart\", handleAnimationStart);\n                node2.removeEventListener(\"animationcancel\", handleAnimationEnd);\n                node2.removeEventListener(\"animationend\", handleAnimationEnd);\n            });\n        } else {\n            send(\"ANIMATION_END\");\n        }\n    }));\n    return {\n        isPresent: ()=>[\n                \"mounted\",\n                \"unmountSuspended\"\n            ].includes(state2()),\n        setRef: (el)=>{\n            if (el) {\n                styles = getComputedStyle(el);\n            }\n            setNode(el);\n        }\n    };\n}\nfunction getAnimationName(styles) {\n    return (styles === null || styles === void 0 ? void 0 : styles.animationName) || \"none\";\n}\nfunction createStateMachine(initialState, machine) {\n    const reduce2 = (state3, event)=>{\n        const nextState = machine[state3][event];\n        return nextState !== null && nextState !== void 0 ? nextState : state3;\n    };\n    const [state2, setState2] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(initialState);\n    const send = (event)=>{\n        setState2((prev)=>reduce2(prev, event));\n    };\n    return [\n        state2,\n        send\n    ];\n}\nvar SCROLL_LOCK_IDENTIFIER = \"data-kb-scroll-lock\";\nfunction assignStyle(element, style2) {\n    if (!element) {\n        return ()=>{};\n    }\n    const previousStyle = element.style.cssText;\n    Object.assign(element.style, style2);\n    return ()=>{\n        element.style.cssText = previousStyle;\n    };\n}\nfunction setCSSProperty(element, property, value) {\n    if (!element) {\n        return ()=>{};\n    }\n    const previousValue = element.style.getPropertyValue(property);\n    element.style.setProperty(property, value);\n    return ()=>{\n        if (previousValue) {\n            element.style.setProperty(property, previousValue);\n        } else {\n            element.style.removeProperty(property);\n        }\n    };\n}\nfunction getPaddingProperty(documentElement) {\n    const documentLeft = documentElement.getBoundingClientRect().left;\n    const scrollbarX = Math.round(documentLeft) + documentElement.scrollLeft;\n    return scrollbarX ? \"paddingLeft\" : \"paddingRight\";\n}\nfunction createPreventScroll(props) {\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (!access(props.ownerRef) || access(props.isDisabled)) {\n            return;\n        }\n        const doc = getDocument(access(props.ownerRef));\n        const win = getWindow(access(props.ownerRef));\n        const { documentElement, body } = doc;\n        const alreadyLocked = body.hasAttribute(SCROLL_LOCK_IDENTIFIER);\n        if (alreadyLocked) {\n            return;\n        }\n        body.setAttribute(SCROLL_LOCK_IDENTIFIER, \"\");\n        const scrollbarWidth = win.innerWidth - documentElement.clientWidth;\n        const setScrollbarWidthProperty = ()=>{\n            return setCSSProperty(documentElement, \"--scrollbar-width\", \"\".concat(scrollbarWidth, \"px\"));\n        };\n        const paddingProperty = getPaddingProperty(documentElement);\n        const setStyle = ()=>{\n            return assignStyle(body, {\n                overflow: \"hidden\",\n                [paddingProperty]: \"\".concat(scrollbarWidth, \"px\")\n            });\n        };\n        const setIOSStyle = ()=>{\n            const { scrollX, scrollY, visualViewport } = win;\n            var _visualViewport_offsetLeft;\n            const offsetLeft = (_visualViewport_offsetLeft = visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.offsetLeft) !== null && _visualViewport_offsetLeft !== void 0 ? _visualViewport_offsetLeft : 0;\n            var _visualViewport_offsetTop;\n            const offsetTop = (_visualViewport_offsetTop = visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.offsetTop) !== null && _visualViewport_offsetTop !== void 0 ? _visualViewport_offsetTop : 0;\n            const restoreStyle = assignStyle(body, {\n                position: \"fixed\",\n                overflow: \"hidden\",\n                top: \"\".concat(-(scrollY - Math.floor(offsetTop)), \"px\"),\n                left: \"\".concat(-(scrollX - Math.floor(offsetLeft)), \"px\"),\n                right: \"0\",\n                [paddingProperty]: \"\".concat(scrollbarWidth, \"px\")\n            });\n            return ()=>{\n                restoreStyle();\n                win.scrollTo(scrollX, scrollY);\n            };\n        };\n        const cleanup = chain([\n            setScrollbarWidthProperty(),\n            isIOS() ? setIOSStyle() : setStyle()\n        ]);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            cleanup();\n            body.removeAttribute(SCROLL_LOCK_IDENTIFIER);\n        });\n    });\n}\nfunction createRegisterId(setter) {\n    return (id)=>{\n        setter(id);\n        return ()=>setter(void 0);\n    };\n}\nfunction createTagName(ref, fallback) {\n    const [tagName, setTagName] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(stringOrUndefined(fallback === null || fallback === void 0 ? void 0 : fallback()));\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _ref;\n        setTagName(((_ref = ref()) === null || _ref === void 0 ? void 0 : _ref.tagName.toLowerCase()) || stringOrUndefined(fallback === null || fallback === void 0 ? void 0 : fallback()));\n    });\n    return tagName;\n}\nfunction stringOrUndefined(value) {\n    return isString(value) ? value : void 0;\n}\nfunction createToggleState() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [isSelected, _setIsSelected] = createControllableBooleanSignal({\n        value: ()=>access(props.isSelected),\n        defaultValue: ()=>!!access(props.defaultIsSelected),\n        onChange: (value)=>{\n            var _props_onSelectedChange;\n            return (_props_onSelectedChange = props.onSelectedChange) === null || _props_onSelectedChange === void 0 ? void 0 : _props_onSelectedChange.call(props, value);\n        }\n    });\n    const setIsSelected = (value)=>{\n        if (!access(props.isReadOnly) && !access(props.isDisabled)) {\n            _setIsSelected(value);\n        }\n    };\n    const toggle = ()=>{\n        if (!access(props.isReadOnly) && !access(props.isDisabled)) {\n            _setIsSelected(!isSelected());\n        }\n    };\n    return {\n        isSelected,\n        setIsSelected,\n        toggle\n    };\n}\nvar FORM_CONTROL_PROP_NAMES = [\n    \"id\",\n    \"name\",\n    \"validationState\",\n    \"required\",\n    \"disabled\",\n    \"readOnly\"\n];\nfunction createFormControl(props) {\n    const defaultId = \"form-control-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    props = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    const [labelId, setLabelId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [fieldId, setFieldId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [descriptionId, setDescriptionId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [errorMessageId, setErrorMessageId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const getAriaLabelledBy = (fieldId2, fieldAriaLabel, fieldAriaLabelledBy)=>{\n        const hasAriaLabelledBy = fieldAriaLabelledBy != null || labelId() != null;\n        return [\n            fieldAriaLabelledBy,\n            labelId(),\n            // If there is both an aria-label and aria-labelledby, add the field itself has an aria-labelledby\n            hasAriaLabelledBy && fieldAriaLabel != null ? fieldId2 : void 0\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const getAriaDescribedBy = (fieldAriaDescribedBy)=>{\n        return [\n            descriptionId(),\n            // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA.\n            // See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n            errorMessageId(),\n            fieldAriaDescribedBy\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const dataset = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            \"data-valid\": access(props.validationState) === \"valid\" ? \"\" : void 0,\n            \"data-invalid\": access(props.validationState) === \"invalid\" ? \"\" : void 0,\n            \"data-required\": access(props.required) ? \"\" : void 0,\n            \"data-disabled\": access(props.disabled) ? \"\" : void 0,\n            \"data-readonly\": access(props.readOnly) ? \"\" : void 0\n        }));\n    const formControlContext = {\n        name: ()=>{\n            var _access;\n            return (_access = access(props.name)) !== null && _access !== void 0 ? _access : access(props.id);\n        },\n        dataset,\n        validationState: ()=>access(props.validationState),\n        isRequired: ()=>access(props.required),\n        isDisabled: ()=>access(props.disabled),\n        isReadOnly: ()=>access(props.readOnly),\n        labelId,\n        fieldId,\n        descriptionId,\n        errorMessageId,\n        getAriaLabelledBy,\n        getAriaDescribedBy,\n        generateId: createGenerateId(()=>access(props.id)),\n        registerLabel: createRegisterId(setLabelId),\n        registerField: createRegisterId(setFieldId),\n        registerDescription: createRegisterId(setDescriptionId),\n        registerErrorMessage: createRegisterId(setErrorMessageId)\n    };\n    return {\n        formControlContext\n    };\n}\nvar FormControlContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useFormControlContext() {\n    _s1();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(FormControlContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useFormControlContext` must be used within a `FormControlContext.Provider` component\");\n    }\n    return context;\n}\n_s1(useFormControlContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction Polymorphic(props) {\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"asChild\",\n        \"as\",\n        \"children\"\n    ]);\n    if (!local.asChild) {\n        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Dynamic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n            get component () {\n                return local.as;\n            }\n        }, others, {\n            get children () {\n                return local.children;\n            }\n        }));\n    }\n    const resolvedChildren = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.children)(()=>local.children);\n    if (isAs(resolvedChildren())) {\n        var _resolvedChildren;\n        var _resolvedChildren_props;\n        const combinedProps = combineProps2(others, (_resolvedChildren_props = (_resolvedChildren = resolvedChildren()) === null || _resolvedChildren === void 0 ? void 0 : _resolvedChildren.props) !== null && _resolvedChildren_props !== void 0 ? _resolvedChildren_props : {});\n        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Dynamic, combinedProps);\n    }\n    if (isArray(resolvedChildren())) {\n        const newElement = resolvedChildren().find(isAs);\n        if (newElement) {\n            const newChildren = ()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.For, {\n                    get each () {\n                        return resolvedChildren();\n                    },\n                    children: (child)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                            when: child === newElement,\n                            fallback: child,\n                            get children () {\n                                return newElement.props.children;\n                            }\n                        })\n                });\n            var _newElement_props;\n            const combinedProps = combineProps2(others, (_newElement_props = newElement === null || newElement === void 0 ? void 0 : newElement.props) !== null && _newElement_props !== void 0 ? _newElement_props : {});\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Dynamic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)(combinedProps, {\n                children: newChildren\n            }));\n        }\n    }\n    throw new Error(\"[kobalte]: Component is expected to render `asChild` but no children `As` component was found.\");\n}\n_c2 = Polymorphic;\nvar AS_COMPONENT_SYMBOL = Symbol(\"$$KobalteAsComponent\");\nfunction isAs(component) {\n    return (component === null || component === void 0 ? void 0 : component[AS_COMPONENT_SYMBOL]) === true;\n}\nfunction combineProps2(baseProps, overrideProps) {\n    return combineProps([\n        baseProps,\n        overrideProps\n    ], {\n        reverseEventHandlers: true\n    });\n}\nfunction FormControlDescription(props) {\n    _s2();\n    const context = useFormControlContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"description\")\n    }, props);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerDescription(props.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\"\n    }, ()=>context.dataset(), props));\n}\n_s2(FormControlDescription, \"eSMNy3rgxn5HDoAy+O2ARZUcBw8=\", false, function() {\n    return [\n        useFormControlContext\n    ];\n});\n_c3 = FormControlDescription;\nfunction FormControlErrorMessage(props) {\n    _s3();\n    const context = useFormControlContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"error-message\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"forceMount\"\n    ]);\n    const isInvalid = ()=>context.validationState() === \"invalid\";\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!isInvalid()) {\n            return;\n        }\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerErrorMessage(others.id));\n    });\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return local.forceMount || isInvalid();\n        },\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\"\n            }, ()=>context.dataset(), others));\n        }\n    });\n}\n_s3(FormControlErrorMessage, \"eSMNy3rgxn5HDoAy+O2ARZUcBw8=\", false, function() {\n    return [\n        useFormControlContext\n    ];\n});\n_c4 = FormControlErrorMessage;\nfunction FormControlLabel(props) {\n    _s4();\n    let ref;\n    const context = useFormControlContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\"\n    ]);\n    const tagName = createTagName(()=>ref, ()=>\"label\");\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabel(others.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"label\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get [\"for\"] () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>tagName() === \"label\")() ? context.fieldId() : void 0;\n        }\n    }, ()=>context.dataset(), others));\n}\n_s4(FormControlLabel, \"eSMNy3rgxn5HDoAy+O2ARZUcBw8=\", false, function() {\n    return [\n        useFormControlContext\n    ];\n});\n_c5 = FormControlLabel;\nvar RTL_SCRIPTS = /* @__PURE__ */ new Set([\n    \"Avst\",\n    \"Arab\",\n    \"Armi\",\n    \"Syrc\",\n    \"Samr\",\n    \"Mand\",\n    \"Thaa\",\n    \"Mend\",\n    \"Nkoo\",\n    \"Adlm\",\n    \"Rohg\",\n    \"Hebr\"\n]);\nvar RTL_LANGS = /* @__PURE__ */ new Set([\n    \"ae\",\n    \"ar\",\n    \"arc\",\n    \"bcc\",\n    \"bqi\",\n    \"ckb\",\n    \"dv\",\n    \"fa\",\n    \"glk\",\n    \"he\",\n    \"ku\",\n    \"mzn\",\n    \"nqo\",\n    \"pnb\",\n    \"ps\",\n    \"sd\",\n    \"ug\",\n    \"ur\",\n    \"yi\"\n]);\nfunction isRTL2(locale) {\n    if (Intl.Locale) {\n        var _maximize_script;\n        const script = (_maximize_script = new Intl.Locale(locale).maximize().script) !== null && _maximize_script !== void 0 ? _maximize_script : \"\";\n        return RTL_SCRIPTS.has(script);\n    }\n    const lang = locale.split(\"-\")[0];\n    return RTL_LANGS.has(lang);\n}\nfunction getReadingDirection(locale) {\n    return isRTL2(locale) ? \"rtl\" : \"ltr\";\n}\nfunction getDefaultLocale() {\n    let locale = // @ts-ignore\n    typeof navigator !== \"undefined\" && (navigator.language || navigator.userLanguage) || \"en-US\";\n    try {\n        Intl.DateTimeFormat.supportedLocalesOf([\n            locale\n        ]);\n    } catch (_err) {\n        locale = \"en-US\";\n    }\n    return {\n        locale,\n        direction: getReadingDirection(locale)\n    };\n}\nvar currentLocale = getDefaultLocale();\nvar listeners = /* @__PURE__ */ new Set();\nfunction updateLocale() {\n    currentLocale = getDefaultLocale();\n    for (const listener of listeners){\n        listener(currentLocale);\n    }\n}\nfunction createDefaultLocale() {\n    const defaultSSRLocale = {\n        locale: \"en-US\",\n        direction: \"ltr\"\n    };\n    const [defaultClientLocale, setDefaultClientLocale] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(currentLocale);\n    const defaultLocale = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer ? defaultSSRLocale : defaultClientLocale());\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        if (listeners.size === 0) {\n            window.addEventListener(\"languagechange\", updateLocale);\n        }\n        listeners.add(setDefaultClientLocale);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            listeners.delete(setDefaultClientLocale);\n            if (listeners.size === 0) {\n                window.removeEventListener(\"languagechange\", updateLocale);\n            }\n        });\n    });\n    return {\n        locale: ()=>defaultLocale().locale,\n        direction: ()=>defaultLocale().direction\n    };\n}\nvar I18nContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useLocale() {\n    _s5();\n    const defaultLocale = createDefaultLocale();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(I18nContext);\n    return context || defaultLocale;\n}\n_s5(useLocale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar cache$1 = /* @__PURE__ */ new Map();\nfunction createCollator(options) {\n    _s6();\n    const { locale } = useLocale();\n    const cacheKey = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return locale() + (options ? Object.entries(options).sort((a2, b2)=>a2[0] < b2[0] ? -1 : 1).join() : \"\");\n    });\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const key = cacheKey();\n        let collator;\n        if (cache$1.has(key)) {\n            collator = cache$1.get(key);\n        }\n        if (!collator) {\n            collator = new Intl.Collator(locale(), options);\n            cache$1.set(key, collator);\n        }\n        return collator;\n    });\n}\n_s6(createCollator, \"wxDEgy7d8JhdCnIccwlbwqhBo8U=\", false, function() {\n    return [\n        useLocale\n    ];\n});\nvar Selection = class _Selection extends Set {\n    constructor(keys2, anchorKey, currentKey){\n        super(keys2);\n        if (keys2 instanceof _Selection) {\n            this.anchorKey = anchorKey || keys2.anchorKey;\n            this.currentKey = currentKey || keys2.currentKey;\n        } else {\n            this.anchorKey = anchorKey;\n            this.currentKey = currentKey;\n        }\n    }\n};\nfunction createControllableSelectionSignal(props) {\n    const [_value, setValue] = createControllableSignal(props);\n    const value = ()=>{\n        var _value1;\n        return (_value1 = _value()) !== null && _value1 !== void 0 ? _value1 : new Selection();\n    };\n    return [\n        value,\n        setValue\n    ];\n}\nfunction isNonContiguousSelectionModifier(e2) {\n    return isAppleDevice() ? e2.altKey : e2.ctrlKey;\n}\nfunction isCtrlKeyPressed(e2) {\n    if (isMac()) {\n        return e2.metaKey;\n    }\n    return e2.ctrlKey;\n}\nfunction convertSelection(selection) {\n    return new Selection(selection);\n}\nfunction isSameSelection(setA, setB) {\n    if (setA.size !== setB.size) {\n        return false;\n    }\n    for (const item of setA){\n        if (!setB.has(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction createMultipleSelectionState(props) {\n    props = mergeDefaultProps({\n        selectionMode: \"none\",\n        selectionBehavior: \"toggle\"\n    }, props);\n    const [isFocused, setFocused] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const [focusedKey, setFocusedKey] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const selectedKeysProp = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const selection = access(props.selectedKeys);\n        if (selection != null) {\n            return convertSelection(selection);\n        }\n        return selection;\n    });\n    const defaultSelectedKeys = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const defaultSelection = access(props.defaultSelectedKeys);\n        if (defaultSelection != null) {\n            return convertSelection(defaultSelection);\n        }\n        return new Selection();\n    });\n    const [selectedKeys, _setSelectedKeys] = createControllableSelectionSignal({\n        value: selectedKeysProp,\n        defaultValue: defaultSelectedKeys,\n        onChange: (value)=>{\n            var _props_onSelectionChange;\n            return (_props_onSelectionChange = props.onSelectionChange) === null || _props_onSelectionChange === void 0 ? void 0 : _props_onSelectionChange.call(props, value);\n        }\n    });\n    const [selectionBehavior, setSelectionBehavior] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(access(props.selectionBehavior));\n    const selectionMode = ()=>access(props.selectionMode);\n    const disallowEmptySelection = ()=>{\n        var _access;\n        return (_access = access(props.disallowEmptySelection)) !== null && _access !== void 0 ? _access : false;\n    };\n    const setSelectedKeys = (keys2)=>{\n        if (access(props.allowDuplicateSelectionEvents) || !isSameSelection(keys2, selectedKeys())) {\n            _setSelectedKeys(keys2);\n        }\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const selection = selectedKeys();\n        if (access(props.selectionBehavior) === \"replace\" && selectionBehavior() === \"toggle\" && typeof selection === \"object\" && selection.size === 0) {\n            setSelectionBehavior(\"replace\");\n        }\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _access;\n        setSelectionBehavior((_access = access(props.selectionBehavior)) !== null && _access !== void 0 ? _access : \"toggle\");\n    });\n    return {\n        selectionMode,\n        disallowEmptySelection,\n        selectionBehavior,\n        setSelectionBehavior,\n        isFocused,\n        setFocused,\n        focusedKey,\n        setFocusedKey,\n        selectedKeys,\n        setSelectedKeys\n    };\n}\nfunction createTypeSelect(props) {\n    const [search, setSearch] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(\"\");\n    const [timeoutId, setTimeoutId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(-1);\n    const onKeyDown = (e2)=>{\n        if (access(props.isDisabled)) {\n            return;\n        }\n        const delegate = access(props.keyboardDelegate);\n        const manager = access(props.selectionManager);\n        if (!delegate.getKeyForSearch) {\n            return;\n        }\n        const character = getStringForKey(e2.key);\n        if (!character || e2.ctrlKey || e2.metaKey) {\n            return;\n        }\n        if (character === \" \" && search().trim().length > 0) {\n            e2.preventDefault();\n            e2.stopPropagation();\n        }\n        let newSearch = setSearch((prev)=>prev += character);\n        var _delegate_getKeyForSearch;\n        let key = (_delegate_getKeyForSearch = delegate.getKeyForSearch(newSearch, manager.focusedKey())) !== null && _delegate_getKeyForSearch !== void 0 ? _delegate_getKeyForSearch : delegate.getKeyForSearch(newSearch);\n        if (key == null && isAllSameLetter(newSearch)) {\n            newSearch = newSearch[0];\n            var _delegate_getKeyForSearch1;\n            key = (_delegate_getKeyForSearch1 = delegate.getKeyForSearch(newSearch, manager.focusedKey())) !== null && _delegate_getKeyForSearch1 !== void 0 ? _delegate_getKeyForSearch1 : delegate.getKeyForSearch(newSearch);\n        }\n        if (key != null) {\n            var _props_onTypeSelect;\n            manager.setFocusedKey(key);\n            (_props_onTypeSelect = props.onTypeSelect) === null || _props_onTypeSelect === void 0 ? void 0 : _props_onTypeSelect.call(props, key);\n        }\n        clearTimeout(timeoutId());\n        setTimeoutId(window.setTimeout(()=>setSearch(\"\"), 500));\n    };\n    return {\n        typeSelectHandlers: {\n            onKeyDown\n        }\n    };\n}\nfunction getStringForKey(key) {\n    if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n        return key;\n    }\n    return \"\";\n}\nfunction isAllSameLetter(search) {\n    return search.split(\"\").every((letter)=>letter === search[0]);\n}\nfunction createSelectableCollection(props, ref, scrollRef) {\n    _s7();\n    const defaultProps = {\n        selectOnFocus: ()=>access(props.selectionManager).selectionBehavior() === \"replace\"\n    };\n    props = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)(defaultProps, props);\n    const finalScrollRef = ()=>{\n        var _scrollRef;\n        return (_scrollRef = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef()) !== null && _scrollRef !== void 0 ? _scrollRef : ref();\n    };\n    const { direction } = useLocale();\n    let scrollPos = {\n        top: 0,\n        left: 0\n    };\n    createEventListener(()=>!access(props.isVirtualized) ? finalScrollRef() : void 0, \"scroll\", ()=>{\n        const scrollEl = finalScrollRef();\n        if (!scrollEl) {\n            return;\n        }\n        scrollPos = {\n            top: scrollEl.scrollTop,\n            left: scrollEl.scrollLeft\n        };\n    });\n    const { typeSelectHandlers } = createTypeSelect({\n        isDisabled: ()=>access(props.disallowTypeAhead),\n        keyboardDelegate: ()=>access(props.keyboardDelegate),\n        selectionManager: ()=>access(props.selectionManager)\n    });\n    const onKeyDown = (e2)=>{\n        callHandler(e2, typeSelectHandlers.onKeyDown);\n        if (e2.altKey && e2.key === \"Tab\") {\n            e2.preventDefault();\n        }\n        const refEl = ref();\n        if (!(refEl === null || refEl === void 0 ? void 0 : refEl.contains(e2.target))) {\n            return;\n        }\n        const manager = access(props.selectionManager);\n        const selectOnFocus = access(props.selectOnFocus);\n        const navigateToKey = (key)=>{\n            if (key != null) {\n                manager.setFocusedKey(key);\n                if (e2.shiftKey && manager.selectionMode() === \"multiple\") {\n                    manager.extendSelection(key);\n                } else if (selectOnFocus && !isNonContiguousSelectionModifier(e2)) {\n                    manager.replaceSelection(key);\n                }\n            }\n        };\n        const delegate = access(props.keyboardDelegate);\n        const shouldFocusWrap = access(props.shouldFocusWrap);\n        const focusedKey = manager.focusedKey();\n        switch(e2.key){\n            case \"ArrowDown\":\n                {\n                    if (delegate.getKeyBelow) {\n                        e2.preventDefault();\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyBelow(focusedKey);\n                        } else {\n                            var _delegate_getFirstKey;\n                            nextKey = (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);\n                        }\n                        if (nextKey == null && shouldFocusWrap) {\n                            var _delegate_getFirstKey1;\n                            nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, focusedKey);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"ArrowUp\":\n                {\n                    if (delegate.getKeyAbove) {\n                        e2.preventDefault();\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyAbove(focusedKey);\n                        } else {\n                            var _delegate_getLastKey;\n                            nextKey = (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);\n                        }\n                        if (nextKey == null && shouldFocusWrap) {\n                            var _delegate_getLastKey1;\n                            nextKey = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, focusedKey);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"ArrowLeft\":\n                {\n                    if (delegate.getKeyLeftOf) {\n                        e2.preventDefault();\n                        const isRTL3 = direction() === \"rtl\";\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyLeftOf(focusedKey);\n                        } else {\n                            var _delegate_getFirstKey2, _delegate_getLastKey2;\n                            nextKey = isRTL3 ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"ArrowRight\":\n                {\n                    if (delegate.getKeyRightOf) {\n                        e2.preventDefault();\n                        const isRTL3 = direction() === \"rtl\";\n                        let nextKey;\n                        if (focusedKey != null) {\n                            nextKey = delegate.getKeyRightOf(focusedKey);\n                        } else {\n                            var _delegate_getLastKey3, _delegate_getFirstKey3;\n                            nextKey = isRTL3 ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate);\n                        }\n                        navigateToKey(nextKey);\n                    }\n                    break;\n                }\n            case \"Home\":\n                if (delegate.getFirstKey) {\n                    e2.preventDefault();\n                    const firstKey = delegate.getFirstKey(focusedKey, isCtrlKeyPressed(e2));\n                    if (firstKey != null) {\n                        manager.setFocusedKey(firstKey);\n                        if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === \"multiple\") {\n                            manager.extendSelection(firstKey);\n                        } else if (selectOnFocus) {\n                            manager.replaceSelection(firstKey);\n                        }\n                    }\n                }\n                break;\n            case \"End\":\n                if (delegate.getLastKey) {\n                    e2.preventDefault();\n                    const lastKey = delegate.getLastKey(focusedKey, isCtrlKeyPressed(e2));\n                    if (lastKey != null) {\n                        manager.setFocusedKey(lastKey);\n                        if (isCtrlKeyPressed(e2) && e2.shiftKey && manager.selectionMode() === \"multiple\") {\n                            manager.extendSelection(lastKey);\n                        } else if (selectOnFocus) {\n                            manager.replaceSelection(lastKey);\n                        }\n                    }\n                }\n                break;\n            case \"PageDown\":\n                if (delegate.getKeyPageBelow && focusedKey != null) {\n                    e2.preventDefault();\n                    const nextKey = delegate.getKeyPageBelow(focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case \"PageUp\":\n                if (delegate.getKeyPageAbove && focusedKey != null) {\n                    e2.preventDefault();\n                    const nextKey = delegate.getKeyPageAbove(focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case \"a\":\n                if (isCtrlKeyPressed(e2) && manager.selectionMode() === \"multiple\" && access(props.disallowSelectAll) !== true) {\n                    e2.preventDefault();\n                    manager.selectAll();\n                }\n                break;\n            case \"Escape\":\n                if (!e2.defaultPrevented) {\n                    e2.preventDefault();\n                    if (!access(props.disallowEmptySelection)) {\n                        manager.clearSelection();\n                    }\n                }\n                break;\n            case \"Tab\":\n                {\n                    if (!access(props.allowsTabNavigation)) {\n                        if (e2.shiftKey) {\n                            refEl.focus();\n                        } else {\n                            const walker = getFocusableTreeWalker(refEl, {\n                                tabbable: true\n                            });\n                            let next;\n                            let last;\n                            do {\n                                last = walker.lastChild();\n                                if (last) {\n                                    next = last;\n                                }\n                            }while (last);\n                            if (next && !next.contains(document.activeElement)) {\n                                focusWithoutScrolling(next);\n                            }\n                        }\n                        break;\n                    }\n                }\n        }\n    };\n    const onFocusIn = (e2)=>{\n        const manager = access(props.selectionManager);\n        const delegate = access(props.keyboardDelegate);\n        const selectOnFocus = access(props.selectOnFocus);\n        if (manager.isFocused()) {\n            if (!e2.currentTarget.contains(e2.target)) {\n                manager.setFocused(false);\n            }\n            return;\n        }\n        if (!e2.currentTarget.contains(e2.target)) {\n            return;\n        }\n        manager.setFocused(true);\n        if (manager.focusedKey() == null) {\n            const navigateToFirstKey = (key)=>{\n                if (key == null) {\n                    return;\n                }\n                manager.setFocusedKey(key);\n                if (selectOnFocus) {\n                    manager.replaceSelection(key);\n                }\n            };\n            const relatedTarget = e2.relatedTarget;\n            if (relatedTarget && e2.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) {\n                var _delegate_getLastKey;\n                var _manager_lastSelectedKey;\n                navigateToFirstKey((_manager_lastSelectedKey = manager.lastSelectedKey()) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate));\n            } else {\n                var _delegate_getFirstKey;\n                var _manager_firstSelectedKey;\n                navigateToFirstKey((_manager_firstSelectedKey = manager.firstSelectedKey()) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate));\n            }\n        } else if (!access(props.isVirtualized)) {\n            const scrollEl = finalScrollRef();\n            if (scrollEl) {\n                scrollEl.scrollTop = scrollPos.top;\n                scrollEl.scrollLeft = scrollPos.left;\n                const element = scrollEl.querySelector('[data-key=\"'.concat(manager.focusedKey(), '\"]'));\n                if (element) {\n                    focusWithoutScrolling(element);\n                    scrollIntoView(scrollEl, element);\n                }\n            }\n        }\n    };\n    const onFocusOut = (e2)=>{\n        const manager = access(props.selectionManager);\n        if (!e2.currentTarget.contains(e2.relatedTarget)) {\n            manager.setFocused(false);\n        }\n    };\n    const onMouseDown = (e2)=>{\n        if (finalScrollRef() === e2.target) {\n            e2.preventDefault();\n        }\n    };\n    const tryAutoFocus = ()=>{\n        const autoFocus = access(props.autoFocus);\n        if (!autoFocus) {\n            return;\n        }\n        const manager = access(props.selectionManager);\n        const delegate = access(props.keyboardDelegate);\n        let focusedKey;\n        if (autoFocus === \"first\") {\n            var _delegate_getFirstKey;\n            focusedKey = (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);\n        }\n        if (autoFocus === \"last\") {\n            var _delegate_getLastKey;\n            focusedKey = (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);\n        }\n        const selectedKeys = manager.selectedKeys();\n        if (selectedKeys.size) {\n            focusedKey = selectedKeys.values().next().value;\n        }\n        manager.setFocused(true);\n        manager.setFocusedKey(focusedKey);\n        const refEl = ref();\n        if (refEl && focusedKey == null && !access(props.shouldUseVirtualFocus)) {\n            focusWithoutScrolling(refEl);\n        }\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        if (props.deferAutoFocus) {\n            setTimeout(tryAutoFocus, 0);\n        } else {\n            tryAutoFocus();\n        }\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        finalScrollRef,\n        ()=>access(props.isVirtualized),\n        ()=>access(props.selectionManager).focusedKey()\n    ], (newValue)=>{\n        const [scrollEl, isVirtualized, focusedKey] = newValue;\n        if (isVirtualized) {\n            var _props_scrollToKey;\n            focusedKey && ((_props_scrollToKey = props.scrollToKey) === null || _props_scrollToKey === void 0 ? void 0 : _props_scrollToKey.call(props, focusedKey));\n        } else {\n            if (focusedKey && scrollEl) {\n                const element = scrollEl.querySelector('[data-key=\"'.concat(focusedKey, '\"]'));\n                if (element) {\n                    scrollIntoView(scrollEl, element);\n                }\n            }\n        }\n    }));\n    const tabIndex = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (access(props.shouldUseVirtualFocus)) {\n            return void 0;\n        }\n        return access(props.selectionManager).focusedKey() == null ? 0 : -1;\n    });\n    return {\n        tabIndex,\n        onKeyDown,\n        onMouseDown,\n        onFocusIn,\n        onFocusOut\n    };\n}\n_s7(createSelectableCollection, \"wF7kuazRv875Ci8MQbx5obOHKLY=\", false, function() {\n    return [\n        useLocale\n    ];\n});\nfunction createSelectableItem(props, ref) {\n    const manager = ()=>access(props.selectionManager);\n    const key = ()=>access(props.key);\n    const shouldUseVirtualFocus = ()=>access(props.shouldUseVirtualFocus);\n    const onSelect = (e2)=>{\n        if (manager().selectionMode() === \"none\") {\n            return;\n        }\n        if (manager().selectionMode() === \"single\") {\n            if (manager().isSelected(key()) && !manager().disallowEmptySelection()) {\n                manager().toggleSelection(key());\n            } else {\n                manager().replaceSelection(key());\n            }\n        } else if (e2 && e2.shiftKey) {\n            manager().extendSelection(key());\n        } else if (manager().selectionBehavior() === \"toggle\" || isCtrlKeyPressed(e2) || \"pointerType\" in e2 && e2.pointerType === \"touch\") {\n            manager().toggleSelection(key());\n        } else {\n            manager().replaceSelection(key());\n        }\n    };\n    const isSelected = ()=>manager().isSelected(key());\n    const isDisabled = ()=>access(props.disabled) || manager().isDisabled(key());\n    const allowsSelection = ()=>!isDisabled() && manager().canSelectItem(key());\n    let pointerDownType = null;\n    const onPointerDown = (e2)=>{\n        if (!allowsSelection()) {\n            return;\n        }\n        pointerDownType = e2.pointerType;\n        if (e2.pointerType === \"mouse\" && e2.button === 0 && !access(props.shouldSelectOnPressUp)) {\n            onSelect(e2);\n        }\n    };\n    const onPointerUp = (e2)=>{\n        if (!allowsSelection()) {\n            return;\n        }\n        if (e2.pointerType === \"mouse\" && e2.button === 0 && access(props.shouldSelectOnPressUp) && access(props.allowsDifferentPressOrigin)) {\n            onSelect(e2);\n        }\n    };\n    const onClick = (e2)=>{\n        if (!allowsSelection()) {\n            return;\n        }\n        if (access(props.shouldSelectOnPressUp) && !access(props.allowsDifferentPressOrigin) || pointerDownType !== \"mouse\") {\n            onSelect(e2);\n        }\n    };\n    const onKeyDown = (e2)=>{\n        if (!allowsSelection() || ![\n            \"Enter\",\n            \" \"\n        ].includes(e2.key)) {\n            return;\n        }\n        if (isNonContiguousSelectionModifier(e2)) {\n            manager().toggleSelection(key());\n        } else {\n            onSelect(e2);\n        }\n    };\n    const onMouseDown = (e2)=>{\n        if (isDisabled()) {\n            e2.preventDefault();\n        }\n    };\n    const onFocus = (e2)=>{\n        const refEl = ref();\n        if (shouldUseVirtualFocus() || isDisabled() || !refEl) {\n            return;\n        }\n        if (e2.target === refEl) {\n            manager().setFocusedKey(key());\n        }\n    };\n    const tabIndex = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (shouldUseVirtualFocus() || isDisabled()) {\n            return void 0;\n        }\n        return key() === manager().focusedKey() ? 0 : -1;\n    });\n    const dataKey = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return access(props.virtualized) ? void 0 : key();\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        ref,\n        key,\n        shouldUseVirtualFocus,\n        ()=>manager().focusedKey(),\n        ()=>manager().isFocused()\n    ], (param)=>{\n        let [refEl, key2, shouldUseVirtualFocus2, focusedKey, isFocused] = param;\n        if (refEl && key2 === focusedKey && isFocused && !shouldUseVirtualFocus2 && document.activeElement !== refEl) {\n            if (props.focus) {\n                props.focus();\n            } else {\n                focusWithoutScrolling(refEl);\n            }\n        }\n    }));\n    return {\n        isSelected,\n        isDisabled,\n        allowsSelection,\n        tabIndex,\n        dataKey,\n        onPointerDown,\n        onPointerUp,\n        onClick,\n        onKeyDown,\n        onMouseDown,\n        onFocus\n    };\n}\nvar SelectionManager = class {\n    /** The type of selection that is allowed in the collection. */ selectionMode() {\n        return this.state.selectionMode();\n    }\n    /** Whether the collection allows empty selection. */ disallowEmptySelection() {\n        return this.state.disallowEmptySelection();\n    }\n    /** The selection behavior for the collection. */ selectionBehavior() {\n        return this.state.selectionBehavior();\n    }\n    /** Sets the selection behavior for the collection. */ setSelectionBehavior(selectionBehavior) {\n        this.state.setSelectionBehavior(selectionBehavior);\n    }\n    /** Whether the collection is currently focused. */ isFocused() {\n        return this.state.isFocused();\n    }\n    /** Sets whether the collection is focused. */ setFocused(isFocused) {\n        this.state.setFocused(isFocused);\n    }\n    /** The current focused key in the collection. */ focusedKey() {\n        return this.state.focusedKey();\n    }\n    /** Sets the focused key. */ setFocusedKey(key) {\n        if (key == null || this.collection().getItem(key)) {\n            this.state.setFocusedKey(key);\n        }\n    }\n    /** The currently selected keys in the collection. */ selectedKeys() {\n        return this.state.selectedKeys();\n    }\n    /** Returns whether a key is selected. */ isSelected(key) {\n        if (this.state.selectionMode() === \"none\") {\n            return false;\n        }\n        const retrievedKey = this.getKey(key);\n        if (retrievedKey == null) {\n            return false;\n        }\n        return this.state.selectedKeys().has(retrievedKey);\n    }\n    /** Whether the selection is empty. */ isEmpty() {\n        return this.state.selectedKeys().size === 0;\n    }\n    /** Whether all items in the collection are selected. */ isSelectAll() {\n        if (this.isEmpty()) {\n            return false;\n        }\n        const selectedKeys = this.state.selectedKeys();\n        return this.getAllSelectableKeys().every((k)=>selectedKeys.has(k));\n    }\n    firstSelectedKey() {\n        let first;\n        for (const key of this.state.selectedKeys()){\n            const item = this.collection().getItem(key);\n            const isItemBeforeFirst = (item === null || item === void 0 ? void 0 : item.index) != null && (first === null || first === void 0 ? void 0 : first.index) != null && item.index < first.index;\n            if (!first || isItemBeforeFirst) {\n                first = item;\n            }\n        }\n        return first === null || first === void 0 ? void 0 : first.key;\n    }\n    lastSelectedKey() {\n        let last;\n        for (const key of this.state.selectedKeys()){\n            const item = this.collection().getItem(key);\n            const isItemAfterLast = (item === null || item === void 0 ? void 0 : item.index) != null && (last === null || last === void 0 ? void 0 : last.index) != null && item.index > last.index;\n            if (!last || isItemAfterLast) {\n                last = item;\n            }\n        }\n        return last === null || last === void 0 ? void 0 : last.key;\n    }\n    /** Extends the selection to the given key. */ extendSelection(toKey) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        if (this.selectionMode() === \"single\") {\n            this.replaceSelection(toKey);\n            return;\n        }\n        const retrievedToKey = this.getKey(toKey);\n        if (retrievedToKey == null) {\n            return;\n        }\n        const selectedKeys = this.state.selectedKeys();\n        const anchorKey = selectedKeys.anchorKey || retrievedToKey;\n        const selection = new Selection(selectedKeys, anchorKey, retrievedToKey);\n        for (const key of this.getKeyRange(anchorKey, selectedKeys.currentKey || retrievedToKey)){\n            selection.delete(key);\n        }\n        for (const key of this.getKeyRange(retrievedToKey, anchorKey)){\n            if (this.canSelectItem(key)) {\n                selection.add(key);\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getKeyRange(from, to) {\n        const fromItem = this.collection().getItem(from);\n        const toItem = this.collection().getItem(to);\n        if (fromItem && toItem) {\n            if (fromItem.index != null && toItem.index != null && fromItem.index <= toItem.index) {\n                return this.getKeyRangeInternal(from, to);\n            }\n            return this.getKeyRangeInternal(to, from);\n        }\n        return [];\n    }\n    getKeyRangeInternal(from, to) {\n        const keys2 = [];\n        let key = from;\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item && item.type === \"item\") {\n                keys2.push(key);\n            }\n            if (key === to) {\n                return keys2;\n            }\n            key = this.collection().getKeyAfter(key);\n        }\n        return [];\n    }\n    getKey(key) {\n        const item = this.collection().getItem(key);\n        if (!item) {\n            return key;\n        }\n        if (!item || item.type !== \"item\") {\n            return null;\n        }\n        return item.key;\n    }\n    /** Toggles whether the given key is selected. */ toggleSelection(key) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        if (this.selectionMode() === \"single\" && !this.isSelected(key)) {\n            this.replaceSelection(key);\n            return;\n        }\n        const retrievedKey = this.getKey(key);\n        if (retrievedKey == null) {\n            return;\n        }\n        const keys2 = new Selection(this.state.selectedKeys());\n        if (keys2.has(retrievedKey)) {\n            keys2.delete(retrievedKey);\n        } else if (this.canSelectItem(retrievedKey)) {\n            keys2.add(retrievedKey);\n            keys2.anchorKey = retrievedKey;\n            keys2.currentKey = retrievedKey;\n        }\n        if (this.disallowEmptySelection() && keys2.size === 0) {\n            return;\n        }\n        this.state.setSelectedKeys(keys2);\n    }\n    /** Replaces the selection with only the given key. */ replaceSelection(key) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        const retrievedKey = this.getKey(key);\n        if (retrievedKey == null) {\n            return;\n        }\n        const selection = this.canSelectItem(retrievedKey) ? new Selection([\n            retrievedKey\n        ], retrievedKey, retrievedKey) : new Selection();\n        this.state.setSelectedKeys(selection);\n    }\n    /** Replaces the selection with the given keys. */ setSelectedKeys(keys2) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        const selection = new Selection();\n        for (const key of keys2){\n            const retrievedKey = this.getKey(key);\n            if (retrievedKey != null) {\n                selection.add(retrievedKey);\n                if (this.selectionMode() === \"single\") {\n                    break;\n                }\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    /** Selects all items in the collection. */ selectAll() {\n        if (this.selectionMode() === \"multiple\") {\n            this.state.setSelectedKeys(new Set(this.getAllSelectableKeys()));\n        }\n    }\n    /**\n   * Removes all keys from the selection.\n   */ clearSelection() {\n        const selectedKeys = this.state.selectedKeys();\n        if (!this.disallowEmptySelection() && selectedKeys.size > 0) {\n            this.state.setSelectedKeys(new Selection());\n        }\n    }\n    /**\n   * Toggles between select all and an empty selection.\n   */ toggleSelectAll() {\n        if (this.isSelectAll()) {\n            this.clearSelection();\n        } else {\n            this.selectAll();\n        }\n    }\n    select(key, e2) {\n        if (this.selectionMode() === \"none\") {\n            return;\n        }\n        if (this.selectionMode() === \"single\") {\n            if (this.isSelected(key) && !this.disallowEmptySelection()) {\n                this.toggleSelection(key);\n            } else {\n                this.replaceSelection(key);\n            }\n        } else if (this.selectionBehavior() === \"toggle\" || e2 && e2.pointerType === \"touch\") {\n            this.toggleSelection(key);\n        } else {\n            this.replaceSelection(key);\n        }\n    }\n    /** Returns whether the current selection is equal to the given selection. */ isSelectionEqual(selection) {\n        if (selection === this.state.selectedKeys()) {\n            return true;\n        }\n        const selectedKeys = this.selectedKeys();\n        if (selection.size !== selectedKeys.size) {\n            return false;\n        }\n        for (const key of selection){\n            if (!selectedKeys.has(key)) {\n                return false;\n            }\n        }\n        for (const key of selectedKeys){\n            if (!selection.has(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    canSelectItem(key) {\n        if (this.state.selectionMode() === \"none\") {\n            return false;\n        }\n        const item = this.collection().getItem(key);\n        return item != null && !item.disabled;\n    }\n    isDisabled(key) {\n        const item = this.collection().getItem(key);\n        return !item || item.disabled;\n    }\n    getAllSelectableKeys() {\n        const keys2 = [];\n        const addKeys = (key)=>{\n            while(key != null){\n                if (this.canSelectItem(key)) {\n                    const item = this.collection().getItem(key);\n                    if (!item) {\n                        continue;\n                    }\n                    if (item.type === \"item\") {\n                        keys2.push(key);\n                    }\n                }\n                key = this.collection().getKeyAfter(key);\n            }\n        };\n        addKeys(this.collection().getFirstKey());\n        return keys2;\n    }\n    constructor(collection, state2){\n        this.collection = collection;\n        this.state = state2;\n    }\n};\nvar ListCollection = class {\n    *[Symbol.iterator]() {\n        yield* this.iterable;\n    }\n    getSize() {\n        return this.keyMap.size;\n    }\n    getKeys() {\n        return this.keyMap.keys();\n    }\n    getKeyBefore(key) {\n        var _this_keyMap_get;\n        return (_this_keyMap_get = this.keyMap.get(key)) === null || _this_keyMap_get === void 0 ? void 0 : _this_keyMap_get.prevKey;\n    }\n    getKeyAfter(key) {\n        var _this_keyMap_get;\n        return (_this_keyMap_get = this.keyMap.get(key)) === null || _this_keyMap_get === void 0 ? void 0 : _this_keyMap_get.nextKey;\n    }\n    getFirstKey() {\n        return this.firstKey;\n    }\n    getLastKey() {\n        return this.lastKey;\n    }\n    getItem(key) {\n        return this.keyMap.get(key);\n    }\n    at(idx) {\n        const keys2 = [\n            ...this.getKeys()\n        ];\n        return this.getItem(keys2[idx]);\n    }\n    constructor(nodes){\n        this.keyMap = /* @__PURE__ */ new Map();\n        this.iterable = nodes;\n        for (const node of nodes){\n            this.keyMap.set(node.key, node);\n        }\n        if (this.keyMap.size === 0) {\n            return;\n        }\n        let last;\n        let index = 0;\n        for (const [key, node] of this.keyMap){\n            if (last) {\n                last.nextKey = key;\n                node.prevKey = last.key;\n            } else {\n                this.firstKey = key;\n                node.prevKey = void 0;\n            }\n            if (node.type === \"item\") {\n                node.index = index++;\n            }\n            last = node;\n            last.nextKey = void 0;\n        }\n        this.lastKey = last.key;\n    }\n};\nfunction createListState(props) {\n    const selectionState = createMultipleSelectionState(props);\n    const factory = (nodes)=>{\n        return props.filter ? new ListCollection(props.filter(nodes)) : new ListCollection(nodes);\n    };\n    const collection = createCollection({\n        dataSource: ()=>access(props.dataSource),\n        getKey: ()=>access(props.getKey),\n        getTextValue: ()=>access(props.getTextValue),\n        getDisabled: ()=>access(props.getDisabled),\n        getSectionChildren: ()=>access(props.getSectionChildren),\n        factory\n    }, [\n        ()=>props.filter\n    ]);\n    const selectionManager = new SelectionManager(collection, selectionState);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComputed)(()=>{\n        const focusedKey = selectionState.focusedKey();\n        if (focusedKey != null && !collection().getItem(focusedKey)) {\n            selectionState.setFocusedKey(void 0);\n        }\n    });\n    return {\n        collection,\n        selectionManager: ()=>selectionManager\n    };\n}\nvar ListKeyboardDelegate = class {\n    getKeyBelow(key) {\n        let keyAfter = this.collection().getKeyAfter(key);\n        while(keyAfter != null){\n            const item = this.collection().getItem(keyAfter);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return keyAfter;\n            }\n            keyAfter = this.collection().getKeyAfter(keyAfter);\n        }\n    }\n    getKeyAbove(key) {\n        let keyBefore = this.collection().getKeyBefore(key);\n        while(keyBefore != null){\n            const item = this.collection().getItem(keyBefore);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return keyBefore;\n            }\n            keyBefore = this.collection().getKeyBefore(keyBefore);\n        }\n    }\n    getFirstKey() {\n        let key = this.collection().getFirstKey();\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return key;\n            }\n            key = this.collection().getKeyAfter(key);\n        }\n    }\n    getLastKey() {\n        let key = this.collection().getLastKey();\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item && item.type === \"item\" && !item.disabled) {\n                return key;\n            }\n            key = this.collection().getKeyBefore(key);\n        }\n    }\n    getItem(key) {\n        var _this_ref, _this_ref1, _this;\n        var _this_ref_querySelector;\n        return (_this_ref_querySelector = (_this_ref1 = (_this = this).ref) === null || _this_ref1 === void 0 ? void 0 : (_this_ref = _this_ref1.call(_this)) === null || _this_ref === void 0 ? void 0 : _this_ref.querySelector('[data-key=\"'.concat(key, '\"]'))) !== null && _this_ref_querySelector !== void 0 ? _this_ref_querySelector : null;\n    }\n    // TODO: not working correctly\n    getKeyPageAbove(key) {\n        var _this_ref, _this;\n        const menu = (_this_ref = (_this = this).ref) === null || _this_ref === void 0 ? void 0 : _this_ref.call(_this);\n        let item = this.getItem(key);\n        if (!menu || !item) {\n            return;\n        }\n        const pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n        let keyAbove = key;\n        while(keyAbove && item && item.offsetTop > pageY){\n            keyAbove = this.getKeyAbove(keyAbove);\n            item = keyAbove != null ? this.getItem(keyAbove) : null;\n        }\n        return keyAbove;\n    }\n    // TODO: not working correctly\n    getKeyPageBelow(key) {\n        var _this_ref, _this;\n        const menu = (_this_ref = (_this = this).ref) === null || _this_ref === void 0 ? void 0 : _this_ref.call(_this);\n        let item = this.getItem(key);\n        if (!menu || !item) {\n            return;\n        }\n        const pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n        let keyBelow = key;\n        while(keyBelow && item && item.offsetTop < pageY){\n            keyBelow = this.getKeyBelow(keyBelow);\n            item = keyBelow != null ? this.getItem(keyBelow) : null;\n        }\n        return keyBelow;\n    }\n    getKeyForSearch(search, fromKey) {\n        var _this_collator, _this;\n        const collator = (_this_collator = (_this = this).collator) === null || _this_collator === void 0 ? void 0 : _this_collator.call(_this);\n        if (!collator) {\n            return;\n        }\n        let key = fromKey != null ? this.getKeyBelow(fromKey) : this.getFirstKey();\n        while(key != null){\n            const item = this.collection().getItem(key);\n            if (item) {\n                const substring = item.textValue.slice(0, search.length);\n                if (item.textValue && collator.compare(substring, search) === 0) {\n                    return key;\n                }\n            }\n            key = this.getKeyBelow(key);\n        }\n    }\n    constructor(collection, ref, collator){\n        this.collection = collection;\n        this.ref = ref;\n        this.collator = collator;\n    }\n};\nfunction createSelectableList(props, ref, scrollRef) {\n    const collator = createCollator({\n        usage: \"search\",\n        sensitivity: \"base\"\n    });\n    const delegate = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const keyboardDelegate = access(props.keyboardDelegate);\n        if (keyboardDelegate) {\n            return keyboardDelegate;\n        }\n        return new ListKeyboardDelegate(props.collection, ref, collator);\n    });\n    return createSelectableCollection({\n        selectionManager: ()=>access(props.selectionManager),\n        keyboardDelegate: delegate,\n        autoFocus: ()=>access(props.autoFocus),\n        deferAutoFocus: ()=>access(props.deferAutoFocus),\n        shouldFocusWrap: ()=>access(props.shouldFocusWrap),\n        disallowEmptySelection: ()=>access(props.disallowEmptySelection),\n        selectOnFocus: ()=>access(props.selectOnFocus),\n        disallowTypeAhead: ()=>access(props.disallowTypeAhead),\n        shouldUseVirtualFocus: ()=>access(props.shouldUseVirtualFocus),\n        allowsTabNavigation: ()=>access(props.allowsTabNavigation),\n        isVirtualized: ()=>access(props.isVirtualized),\n        scrollToKey: (key)=>{\n            var _access;\n            return (_access = access(props.scrollToKey)) === null || _access === void 0 ? void 0 : _access(key);\n        }\n    }, ref, scrollRef);\n}\ncreateStore({\n    toasts: []\n});\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nvar BUTTON_INPUT_TYPES = [\n    \"button\",\n    \"color\",\n    \"file\",\n    \"image\",\n    \"reset\",\n    \"submit\"\n];\nfunction isButton(element) {\n    const tagName = element.tagName.toLowerCase();\n    if (tagName === \"button\") {\n        return true;\n    }\n    if (tagName === \"input\" && element.type) {\n        return BUTTON_INPUT_TYPES.indexOf(element.type) !== -1;\n    }\n    return false;\n}\nfunction ButtonRoot(props) {\n    let ref;\n    props = mergeDefaultProps({\n        type: \"button\"\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"type\",\n        \"disabled\"\n    ]);\n    const tagName = createTagName(()=>ref, ()=>\"button\");\n    const isNativeButton = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const elementTagName = tagName();\n        if (elementTagName == null) {\n            return false;\n        }\n        return isButton({\n            tagName: elementTagName,\n            type: local.type\n        });\n    });\n    const isNativeInput = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return tagName() === \"input\";\n    });\n    const isNativeLink = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return tagName() === \"a\" && (ref === null || ref === void 0 ? void 0 : ref.getAttribute(\"href\")) != null;\n    });\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"button\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get type () {\n            return isNativeButton() || isNativeInput() ? local.type : void 0;\n        },\n        get role () {\n            return !isNativeButton() && !isNativeLink() ? \"button\" : void 0;\n        },\n        get tabIndex () {\n            return !isNativeButton() && !isNativeLink() && !local.disabled ? 0 : void 0;\n        },\n        get disabled () {\n            return isNativeButton() || isNativeInput() ? local.disabled : void 0;\n        },\n        get [\"aria-disabled\"] () {\n            return !isNativeButton() && !isNativeInput() && local.disabled ? true : void 0;\n        },\n        get [\"data-disabled\"] () {\n            return local.disabled ? \"\" : void 0;\n        }\n    }, others));\n}\n_c6 = ButtonRoot;\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nvar DomCollectionContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalDomCollectionContext() {\n    _s8();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(DomCollectionContext);\n}\n_s8(useOptionalDomCollectionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useDomCollectionContext() {\n    _s9();\n    const context = useOptionalDomCollectionContext();\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useDomCollectionContext` must be used within a `DomCollectionProvider` component\");\n    }\n    return context;\n}\n_s9(useDomCollectionContext, \"nmgAACrHCowBSA47jQ580mCwWqk=\", false, function() {\n    return [\n        useOptionalDomCollectionContext\n    ];\n});\nfunction isElementPreceding(a2, b2) {\n    return Boolean(b2.compareDocumentPosition(a2) & Node.DOCUMENT_POSITION_PRECEDING);\n}\nfunction findDOMIndex(items, item) {\n    const itemEl = item.ref();\n    if (!itemEl) {\n        return -1;\n    }\n    let length = items.length;\n    if (!length) {\n        return -1;\n    }\n    while(length--){\n        var _items_length;\n        const currentItemEl = (_items_length = items[length]) === null || _items_length === void 0 ? void 0 : _items_length.ref();\n        if (!currentItemEl) {\n            continue;\n        }\n        if (isElementPreceding(currentItemEl, itemEl)) {\n            return length + 1;\n        }\n    }\n    return 0;\n}\nfunction sortBasedOnDOMPosition(items) {\n    const pairs = items.map((item, index)=>[\n            index,\n            item\n        ]);\n    let isOrderDifferent = false;\n    pairs.sort((param, param1)=>{\n        let [indexA, a2] = param, [indexB, b2] = param1;\n        const elementA = a2.ref();\n        const elementB = b2.ref();\n        if (elementA === elementB) {\n            return 0;\n        }\n        if (!elementA || !elementB) {\n            return 0;\n        }\n        if (isElementPreceding(elementA, elementB)) {\n            if (indexA > indexB) {\n                isOrderDifferent = true;\n            }\n            return -1;\n        }\n        if (indexA < indexB) {\n            isOrderDifferent = true;\n        }\n        return 1;\n    });\n    if (isOrderDifferent) {\n        return pairs.map((param)=>{\n            let [_, item] = param;\n            return item;\n        });\n    }\n    return items;\n}\nfunction setItemsBasedOnDOMPosition(items, setItems) {\n    const sortedItems = sortBasedOnDOMPosition(items);\n    if (items !== sortedItems) {\n        setItems(sortedItems);\n    }\n}\nfunction getCommonParent(items) {\n    var _items_, _firstItem_ref;\n    const firstItem = items[0];\n    const lastItemEl = (_items_ = items[items.length - 1]) === null || _items_ === void 0 ? void 0 : _items_.ref();\n    let parentEl = firstItem === null || firstItem === void 0 ? void 0 : (_firstItem_ref = firstItem.ref()) === null || _firstItem_ref === void 0 ? void 0 : _firstItem_ref.parentElement;\n    while(parentEl){\n        if (lastItemEl && parentEl.contains(lastItemEl)) {\n            return parentEl;\n        }\n        parentEl = parentEl.parentElement;\n    }\n    return getDocument(parentEl).body;\n}\nfunction createTimeoutObserver(items, setItems) {\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const timeout = setTimeout(()=>{\n            setItemsBasedOnDOMPosition(items(), setItems);\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>clearTimeout(timeout));\n    });\n}\nfunction createSortBasedOnDOMPosition(items, setItems) {\n    if (typeof IntersectionObserver !== \"function\") {\n        createTimeoutObserver(items, setItems);\n        return;\n    }\n    let previousItems = [];\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const callback = ()=>{\n            const hasPreviousItems = !!previousItems.length;\n            previousItems = items();\n            if (!hasPreviousItems) {\n                return;\n            }\n            setItemsBasedOnDOMPosition(items(), setItems);\n        };\n        const root = getCommonParent(items());\n        const observer = new IntersectionObserver(callback, {\n            root\n        });\n        items().forEach((item)=>{\n            const itemEl = item.ref();\n            if (itemEl) {\n                observer.observe(itemEl);\n            }\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>observer.disconnect());\n    });\n}\nfunction createDomCollection() {\n    let props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const [items, setItems] = createControllableArraySignal({\n        value: ()=>access(props.items),\n        onChange: (value)=>{\n            var _props_onItemsChange;\n            return (_props_onItemsChange = props.onItemsChange) === null || _props_onItemsChange === void 0 ? void 0 : _props_onItemsChange.call(props, value);\n        }\n    });\n    createSortBasedOnDOMPosition(items, setItems);\n    const registerItem = (item)=>{\n        setItems((prevItems)=>{\n            const index = findDOMIndex(prevItems, item);\n            return addItemToArray(prevItems, item, index);\n        });\n        return ()=>{\n            setItems((prevItems)=>{\n                const nextItems = prevItems.filter((prevItem)=>prevItem.ref() !== item.ref());\n                if (prevItems.length === nextItems.length) {\n                    return prevItems;\n                }\n                return nextItems;\n            });\n        };\n    };\n    const DomCollectionProvider = (props2)=>{\n        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DomCollectionContext.Provider, {\n            value: {\n                registerItem\n            },\n            get children () {\n                return props2.children;\n            }\n        });\n    };\n    return {\n        DomCollectionProvider\n    };\n}\nfunction createDomCollectionItem(props) {\n    _s10();\n    const context = useDomCollectionContext();\n    props = mergeDefaultProps({\n        shouldRegisterItem: true\n    }, props);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (!props.shouldRegisterItem) {\n            return;\n        }\n        const unregister = context.registerItem(props.getItem());\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(unregister);\n    });\n}\n_s10(createDomCollectionItem, \"23gd0O9DifdZbGY6mOJp6nPqahA=\", false, function() {\n    return [\n        useDomCollectionContext\n    ];\n});\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nvar DismissableLayerContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalDismissableLayerContext() {\n    _s11();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(DismissableLayerContext);\n}\n_s11(useOptionalDismissableLayerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction DismissableLayer(props) {\n    _s12();\n    let ref;\n    const parentContext = useOptionalDismissableLayerContext();\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"disableOutsidePointerEvents\",\n        \"excludedElements\",\n        \"onEscapeKeyDown\",\n        \"onPointerDownOutside\",\n        \"onFocusOutside\",\n        \"onInteractOutside\",\n        \"onDismiss\",\n        \"bypassTopMostLayerCheck\"\n    ]);\n    const nestedLayers = /* @__PURE__ */ new Set([]);\n    const registerNestedLayer = (element)=>{\n        nestedLayers.add(element);\n        const parentUnregister = parentContext === null || parentContext === void 0 ? void 0 : parentContext.registerNestedLayer(element);\n        return ()=>{\n            nestedLayers.delete(element);\n            parentUnregister === null || parentUnregister === void 0 ? void 0 : parentUnregister();\n        };\n    };\n    const shouldExcludeElement = (element)=>{\n        var _local_excludedElements;\n        if (!ref) {\n            return false;\n        }\n        return ((_local_excludedElements = local.excludedElements) === null || _local_excludedElements === void 0 ? void 0 : _local_excludedElements.some((node)=>contains(node(), element))) || [\n            ...nestedLayers\n        ].some((layer)=>contains(layer, element));\n    };\n    const onPointerDownOutside = (e2)=>{\n        var _local_onPointerDownOutside, _local_onInteractOutside;\n        if (!ref || layerStack.isBelowPointerBlockingLayer(ref)) {\n            return;\n        }\n        if (!local.bypassTopMostLayerCheck && !layerStack.isTopMostLayer(ref)) {\n            return;\n        }\n        (_local_onPointerDownOutside = local.onPointerDownOutside) === null || _local_onPointerDownOutside === void 0 ? void 0 : _local_onPointerDownOutside.call(local, e2);\n        (_local_onInteractOutside = local.onInteractOutside) === null || _local_onInteractOutside === void 0 ? void 0 : _local_onInteractOutside.call(local, e2);\n        if (!e2.defaultPrevented) {\n            var _local_onDismiss;\n            (_local_onDismiss = local.onDismiss) === null || _local_onDismiss === void 0 ? void 0 : _local_onDismiss.call(local);\n        }\n    };\n    const onFocusOutside = (e2)=>{\n        var _local_onFocusOutside, _local_onInteractOutside;\n        (_local_onFocusOutside = local.onFocusOutside) === null || _local_onFocusOutside === void 0 ? void 0 : _local_onFocusOutside.call(local, e2);\n        (_local_onInteractOutside = local.onInteractOutside) === null || _local_onInteractOutside === void 0 ? void 0 : _local_onInteractOutside.call(local, e2);\n        if (!e2.defaultPrevented) {\n            var _local_onDismiss;\n            (_local_onDismiss = local.onDismiss) === null || _local_onDismiss === void 0 ? void 0 : _local_onDismiss.call(local);\n        }\n    };\n    createInteractOutside({\n        shouldExcludeElement,\n        onPointerDownOutside,\n        onFocusOutside\n    }, ()=>ref);\n    createEscapeKeyDown({\n        ownerDocument: ()=>getDocument(ref),\n        onEscapeKeyDown: (e2)=>{\n            var _local_onEscapeKeyDown;\n            if (!ref || !layerStack.isTopMostLayer(ref)) {\n                return;\n            }\n            (_local_onEscapeKeyDown = local.onEscapeKeyDown) === null || _local_onEscapeKeyDown === void 0 ? void 0 : _local_onEscapeKeyDown.call(local, e2);\n            if (!e2.defaultPrevented && local.onDismiss) {\n                e2.preventDefault();\n                local.onDismiss();\n            }\n        }\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        if (!ref) {\n            return;\n        }\n        layerStack.addLayer({\n            node: ref,\n            isPointerBlocking: local.disableOutsidePointerEvents,\n            dismiss: local.onDismiss\n        });\n        const unregisterFromParentLayer = parentContext === null || parentContext === void 0 ? void 0 : parentContext.registerNestedLayer(ref);\n        layerStack.assignPointerEventToLayers();\n        layerStack.disableBodyPointerEvents(ref);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            if (!ref) {\n                return;\n            }\n            layerStack.removeLayer(ref);\n            unregisterFromParentLayer === null || unregisterFromParentLayer === void 0 ? void 0 : unregisterFromParentLayer();\n            layerStack.assignPointerEventToLayers();\n            layerStack.restoreBodyPointerEvents(ref);\n        });\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)([\n        ()=>ref,\n        ()=>local.disableOutsidePointerEvents\n    ], (param)=>{\n        let [ref2, disableOutsidePointerEvents] = param;\n        if (!ref2) {\n            return;\n        }\n        const layer = layerStack.find(ref2);\n        if (layer && layer.isPointerBlocking !== disableOutsidePointerEvents) {\n            layer.isPointerBlocking = disableOutsidePointerEvents;\n            layerStack.assignPointerEventToLayers();\n        }\n        if (disableOutsidePointerEvents) {\n            layerStack.disableBodyPointerEvents(ref2);\n        }\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            layerStack.restoreBodyPointerEvents(ref2);\n        });\n    }, {\n        defer: true\n    }));\n    const context = {\n        registerNestedLayer\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DismissableLayerContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                ref (r$) {\n                    const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n                    typeof _ref$ === \"function\" && _ref$(r$);\n                }\n            }, others));\n        }\n    });\n}\n_s12(DismissableLayer, \"JK5MHh8VueXJNRW0ii1pz65ep0o=\", false, function() {\n    return [\n        useOptionalDismissableLayerContext\n    ];\n});\n_c7 = DismissableLayer;\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nvar PopperContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction usePopperContext() {\n    _s13();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(PopperContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `usePopperContext` must be used within a `Popper` component\");\n    }\n    return context;\n}\n_s13(usePopperContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _tmpl$$f = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg display=\"block\" viewBox=\"0 0 30 30\"><g><path fill=\"none\" d=\"M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z\"></path><path stroke=\"none\" d=\"M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z\">');\nvar DEFAULT_SIZE = 30;\nvar HALF_DEFAULT_SIZE = DEFAULT_SIZE / 2;\nvar ROTATION_DEG = {\n    top: 180,\n    right: -90,\n    bottom: 0,\n    left: 90\n};\nfunction PopperArrow(props) {\n    _s14();\n    const context = usePopperContext();\n    props = mergeDefaultProps({\n        size: DEFAULT_SIZE\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"style\",\n        \"children\",\n        \"size\"\n    ]);\n    const dir = ()=>context.currentPlacement().split(\"-\")[0];\n    const contentStyle = createComputedStyle(context.contentRef);\n    const fill = ()=>{\n        var _contentStyle;\n        return ((_contentStyle = contentStyle()) === null || _contentStyle === void 0 ? void 0 : _contentStyle.getPropertyValue(\"background-color\")) || \"none\";\n    };\n    const stroke = ()=>{\n        var _contentStyle;\n        return ((_contentStyle = contentStyle()) === null || _contentStyle === void 0 ? void 0 : _contentStyle.getPropertyValue(\"border-\".concat(dir(), \"-color\"))) || \"none\";\n    };\n    const borderWidth = ()=>{\n        var _contentStyle;\n        return ((_contentStyle = contentStyle()) === null || _contentStyle === void 0 ? void 0 : _contentStyle.getPropertyValue(\"border-\".concat(dir(), \"-width\"))) || \"0px\";\n    };\n    const strokeWidth = ()=>{\n        return parseInt(borderWidth()) * 2 * (DEFAULT_SIZE / local.size);\n    };\n    const rotate = ()=>{\n        return \"rotate(\".concat(ROTATION_DEG[dir()], \" \").concat(HALF_DEFAULT_SIZE, \" \").concat(HALF_DEFAULT_SIZE, \")\");\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setArrowRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        \"aria-hidden\": \"true\",\n        get style () {\n            return {\n                // server side rendering\n                position: \"absolute\",\n                \"font-size\": \"\".concat(local.size, \"px\"),\n                width: \"1em\",\n                height: \"1em\",\n                \"pointer-events\": \"none\",\n                fill: fill(),\n                stroke: stroke(),\n                \"stroke-width\": strokeWidth(),\n                ...local.style\n            };\n        }\n    }, others, {\n        get children () {\n            const _el$ = _tmpl$$f(), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n            _el$3.nextSibling;\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$2, \"transform\", rotate()));\n            return _el$;\n        }\n    }));\n}\n_s14(PopperArrow, \"BLwKQlJkJgbziecIetjdX5b+JbU=\", false, function() {\n    return [\n        usePopperContext\n    ];\n});\n_c8 = PopperArrow;\nfunction createComputedStyle(element) {\n    const [style2, setStyle] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const el = element();\n        el && setStyle(getWindow(el).getComputedStyle(el));\n    });\n    return style2;\n}\nfunction PopperPositioner(props) {\n    _s15();\n    const context = usePopperContext();\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"style\"\n    ]);\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setPositionerRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        \"data-popper-positioner\": \"\",\n        get style () {\n            return {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                \"min-width\": \"max-content\",\n                ...local.style\n            };\n        }\n    }, others));\n}\n_s15(PopperPositioner, \"BLwKQlJkJgbziecIetjdX5b+JbU=\", false, function() {\n    return [\n        usePopperContext\n    ];\n});\n_c9 = PopperPositioner;\nfunction createDOMRect(anchorRect) {\n    const { x = 0, y = 0, width = 0, height = 0 } = anchorRect !== null && anchorRect !== void 0 ? anchorRect : {};\n    if (typeof DOMRect === \"function\") {\n        return new DOMRect(x, y, width, height);\n    }\n    const rect = {\n        x,\n        y,\n        width,\n        height,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n    };\n    return {\n        ...rect,\n        toJSON: ()=>rect\n    };\n}\nfunction getAnchorElement(anchor, getAnchorRect) {\n    const contextElement = anchor;\n    return {\n        contextElement,\n        getBoundingClientRect: ()=>{\n            const anchorRect = getAnchorRect(anchor);\n            if (anchorRect) {\n                return createDOMRect(anchorRect);\n            }\n            if (anchor) {\n                return anchor.getBoundingClientRect();\n            }\n            return createDOMRect();\n        }\n    };\n}\nfunction isValidPlacement(flip2) {\n    return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(flip2);\n}\nvar REVERSE_BASE_PLACEMENT = {\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\"\n};\nfunction getTransformOrigin(placement, readingDirection) {\n    const [basePlacement, alignment] = placement.split(\"-\");\n    const reversePlacement = REVERSE_BASE_PLACEMENT[basePlacement];\n    if (!alignment) {\n        return \"\".concat(reversePlacement, \" center\");\n    }\n    if (basePlacement === \"left\" || basePlacement === \"right\") {\n        return \"\".concat(reversePlacement, \" \").concat(alignment === \"start\" ? \"top\" : \"bottom\");\n    }\n    if (alignment === \"start\") {\n        return \"\".concat(reversePlacement, \" \").concat(readingDirection === \"rtl\" ? \"right\" : \"left\");\n    }\n    return \"\".concat(reversePlacement, \" \").concat(readingDirection === \"rtl\" ? \"left\" : \"right\");\n}\nfunction PopperRoot(props) {\n    _s16();\n    props = mergeDefaultProps({\n        getAnchorRect: (anchor)=>anchor === null || anchor === void 0 ? void 0 : anchor.getBoundingClientRect(),\n        placement: \"bottom\",\n        gutter: 0,\n        shift: 0,\n        flip: true,\n        slide: true,\n        overlap: false,\n        sameWidth: false,\n        fitViewport: false,\n        hideWhenDetached: false,\n        detachedPadding: 0,\n        arrowPadding: 4,\n        overflowPadding: 8\n    }, props);\n    const [positionerRef, setPositionerRef] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [arrowRef, setArrowRef] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [currentPlacement, setCurrentPlacement] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(props.placement);\n    const anchorRef = ()=>getAnchorElement(props.anchorRef(), props.getAnchorRect);\n    const { direction } = useLocale();\n    async function updatePosition() {\n        var _props_onCurrentPlacementChange;\n        const referenceEl = anchorRef();\n        const floatingEl = positionerRef();\n        const arrowEl = arrowRef();\n        if (!referenceEl || !floatingEl) {\n            return;\n        }\n        const arrowOffset = ((arrowEl === null || arrowEl === void 0 ? void 0 : arrowEl.clientHeight) || 0) / 2;\n        var _props_gutter;\n        const finalGutter = typeof props.gutter === \"number\" ? props.gutter + arrowOffset : (_props_gutter = props.gutter) !== null && _props_gutter !== void 0 ? _props_gutter : arrowOffset;\n        floatingEl.style.setProperty(\"--kb-popper-content-overflow-padding\", \"\".concat(props.overflowPadding, \"px\"));\n        referenceEl.getBoundingClientRect();\n        const middleware = [\n            // https://floating-ui.com/docs/offset\n            offset((param)=>{\n                let { placement } = param;\n                const hasAlignment = !!placement.split(\"-\")[1];\n                return {\n                    mainAxis: finalGutter,\n                    crossAxis: !hasAlignment ? props.shift : void 0,\n                    alignmentAxis: props.shift\n                };\n            })\n        ];\n        if (props.flip !== false) {\n            const fallbackPlacements = typeof props.flip === \"string\" ? props.flip.split(\" \") : void 0;\n            if (fallbackPlacements !== void 0 && !fallbackPlacements.every(isValidPlacement)) {\n                throw new Error(\"`flip` expects a spaced-delimited list of placements\");\n            }\n            middleware.push(flip({\n                padding: props.overflowPadding,\n                fallbackPlacements\n            }));\n        }\n        if (props.slide || props.overlap) {\n            middleware.push(shift({\n                mainAxis: props.slide,\n                crossAxis: props.overlap,\n                padding: props.overflowPadding\n            }));\n        }\n        middleware.push(size({\n            padding: props.overflowPadding,\n            apply (param) {\n                let { availableWidth, availableHeight, rects } = param;\n                const referenceWidth = Math.round(rects.reference.width);\n                availableWidth = Math.floor(availableWidth);\n                availableHeight = Math.floor(availableHeight);\n                floatingEl.style.setProperty(\"--kb-popper-anchor-width\", \"\".concat(referenceWidth, \"px\"));\n                floatingEl.style.setProperty(\"--kb-popper-content-available-width\", \"\".concat(availableWidth, \"px\"));\n                floatingEl.style.setProperty(\"--kb-popper-content-available-height\", \"\".concat(availableHeight, \"px\"));\n                if (props.sameWidth) {\n                    floatingEl.style.width = \"\".concat(referenceWidth, \"px\");\n                }\n                if (props.fitViewport) {\n                    floatingEl.style.maxWidth = \"\".concat(availableWidth, \"px\");\n                    floatingEl.style.maxHeight = \"\".concat(availableHeight, \"px\");\n                }\n            }\n        }));\n        if (props.hideWhenDetached) {\n            middleware.push(hide({\n                padding: props.detachedPadding\n            }));\n        }\n        if (arrowEl) {\n            middleware.push(arrow({\n                element: arrowEl,\n                padding: props.arrowPadding\n            }));\n        }\n        const pos = await computePosition2(referenceEl, floatingEl, {\n            placement: props.placement,\n            strategy: \"absolute\",\n            middleware,\n            platform: {\n                ...platform,\n                isRTL: ()=>direction() === \"rtl\"\n            }\n        });\n        setCurrentPlacement(pos.placement);\n        (_props_onCurrentPlacementChange = props.onCurrentPlacementChange) === null || _props_onCurrentPlacementChange === void 0 ? void 0 : _props_onCurrentPlacementChange.call(props, pos.placement);\n        if (!floatingEl) {\n            return;\n        }\n        floatingEl.style.setProperty(\"--kb-popper-content-transform-origin\", getTransformOrigin(pos.placement, direction()));\n        const x = Math.round(pos.x);\n        const y = Math.round(pos.y);\n        let visibility;\n        if (props.hideWhenDetached) {\n            var _pos_middlewareData_hide;\n            visibility = ((_pos_middlewareData_hide = pos.middlewareData.hide) === null || _pos_middlewareData_hide === void 0 ? void 0 : _pos_middlewareData_hide.referenceHidden) ? \"hidden\" : \"visible\";\n        }\n        Object.assign(floatingEl.style, {\n            top: \"0\",\n            left: \"0\",\n            transform: \"translate3d(\".concat(x, \"px, \").concat(y, \"px, 0)\"),\n            visibility\n        });\n        if (arrowEl && pos.middlewareData.arrow) {\n            const { x: arrowX, y: arrowY } = pos.middlewareData.arrow;\n            const dir = pos.placement.split(\"-\")[0];\n            Object.assign(arrowEl.style, {\n                left: arrowX != null ? \"\".concat(arrowX, \"px\") : \"\",\n                top: arrowY != null ? \"\".concat(arrowY, \"px\") : \"\",\n                [dir]: \"100%\"\n            });\n        }\n    }\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const referenceEl = anchorRef();\n        const floatingEl = positionerRef();\n        if (!referenceEl || !floatingEl) {\n            return;\n        }\n        const cleanupAutoUpdate = autoUpdate(referenceEl, floatingEl, updatePosition, {\n            // JSDOM doesn't support ResizeObserver\n            elementResize: typeof ResizeObserver === \"function\"\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(cleanupAutoUpdate);\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const positioner = positionerRef();\n        const content = props.contentRef();\n        if (!positioner || !content) {\n            return;\n        }\n        queueMicrotask(()=>{\n            positioner.style.zIndex = getComputedStyle(content).zIndex;\n        });\n    });\n    const context = {\n        currentPlacement,\n        contentRef: ()=>props.contentRef(),\n        setPositionerRef,\n        setArrowRef\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PopperContext.Provider, {\n        value: context,\n        get children () {\n            return props.children;\n        }\n    });\n}\n_s16(PopperRoot, \"wF7kuazRv875Ci8MQbx5obOHKLY=\", false, function() {\n    return [\n        useLocale\n    ];\n});\n_c10 = PopperRoot;\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nvar MenuContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useOptionalMenuContext() {\n    _s17();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuContext);\n}\n_s17(useOptionalMenuContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction useMenuContext() {\n    _s18();\n    const context = useOptionalMenuContext();\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuContext` must be used within a `Menu` component\");\n    }\n    return context;\n}\n_s18(useMenuContext, \"KjB02SXLM2W9VP6FPa/qu1FB1DY=\", false, function() {\n    return [\n        useOptionalMenuContext\n    ];\n});\nvar MenuRootContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuRootContext() {\n    _s19();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuRootContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuRootContext` must be used within a `MenuRoot` component\");\n    }\n    return context;\n}\n_s19(useMenuRootContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction getPointerGraceArea(placement, event, contentEl) {\n    const basePlacement = placement.split(\"-\")[0];\n    const contentRect = contentEl.getBoundingClientRect();\n    const polygon = [];\n    const pointerX = event.clientX;\n    const pointerY = event.clientY;\n    switch(basePlacement){\n        case \"top\":\n            polygon.push([\n                pointerX,\n                pointerY + 5\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            break;\n        case \"right\":\n            polygon.push([\n                pointerX - 5,\n                pointerY\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            break;\n        case \"bottom\":\n            polygon.push([\n                pointerX,\n                pointerY - 5\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            break;\n        case \"left\":\n            polygon.push([\n                pointerX + 5,\n                pointerY\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.bottom\n            ]);\n            polygon.push([\n                contentRect.left,\n                contentRect.top\n            ]);\n            polygon.push([\n                contentRect.right,\n                contentRect.top\n            ]);\n            break;\n    }\n    return polygon;\n}\nfunction isPointerInGraceArea(event, area) {\n    if (!area) {\n        return false;\n    }\n    return isPointInPolygon([\n        event.clientX,\n        event.clientY\n    ], area);\n}\nfunction Menu(props) {\n    _s20();\n    const rootContext = useMenuRootContext();\n    const parentDomCollectionContext = useOptionalDomCollectionContext();\n    const parentMenuContext = useOptionalMenuContext();\n    props = mergeDefaultProps({\n        placement: \"bottom-start\"\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"open\",\n        \"defaultOpen\",\n        \"onOpenChange\"\n    ]);\n    let pointerGraceTimeoutId = 0;\n    let pointerGraceIntent = null;\n    let pointerDir = \"right\";\n    const [triggerId, setTriggerId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [contentId, setContentId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [triggerRef, setTriggerRef] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [contentRef, setContentRef] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [focusStrategy, setFocusStrategy] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(true);\n    const [currentPlacement, setCurrentPlacement] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(others.placement);\n    const [nestedMenus, setNestedMenus] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\n    const [items, setItems] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\n    const { DomCollectionProvider } = createDomCollection({\n        items,\n        onItemsChange: setItems\n    });\n    const disclosureState = createDisclosureState({\n        open: ()=>local.open,\n        defaultOpen: ()=>local.defaultOpen,\n        onOpenChange: (isOpen)=>{\n            var _local_onOpenChange;\n            return (_local_onOpenChange = local.onOpenChange) === null || _local_onOpenChange === void 0 ? void 0 : _local_onOpenChange.call(local, isOpen);\n        }\n    });\n    const contentPresence = createPresence(()=>rootContext.forceMount() || disclosureState.isOpen());\n    const listState = createListState({\n        selectionMode: \"none\",\n        dataSource: items\n    });\n    const open = (focusStrategy2)=>{\n        setFocusStrategy(focusStrategy2);\n        disclosureState.open();\n    };\n    const close = function() {\n        let recursively = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        disclosureState.close();\n        if (recursively && parentMenuContext) {\n            parentMenuContext.close(true);\n        }\n    };\n    const toggle = (focusStrategy2)=>{\n        setFocusStrategy(focusStrategy2);\n        disclosureState.toggle();\n    };\n    const focusContent = ()=>{\n        const content = contentRef();\n        if (content) {\n            focusWithoutScrolling(content);\n            listState.selectionManager().setFocused(true);\n            listState.selectionManager().setFocusedKey(void 0);\n        }\n    };\n    const registerNestedMenu = (element)=>{\n        setNestedMenus((prev)=>[\n                ...prev,\n                element\n            ]);\n        const parentUnregister = parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.registerNestedMenu(element);\n        return ()=>{\n            setNestedMenus((prev)=>removeItemFromArray(prev, element));\n            parentUnregister === null || parentUnregister === void 0 ? void 0 : parentUnregister();\n        };\n    };\n    const isPointerMovingToSubmenu = (e2)=>{\n        const isMovingTowards = pointerDir === (pointerGraceIntent === null || pointerGraceIntent === void 0 ? void 0 : pointerGraceIntent.side);\n        return isMovingTowards && isPointerInGraceArea(e2, pointerGraceIntent === null || pointerGraceIntent === void 0 ? void 0 : pointerGraceIntent.area);\n    };\n    const onItemEnter = (e2)=>{\n        if (isPointerMovingToSubmenu(e2)) {\n            e2.preventDefault();\n        }\n    };\n    const onItemLeave = (e2)=>{\n        if (isPointerMovingToSubmenu(e2)) {\n            return;\n        }\n        focusContent();\n    };\n    const onTriggerLeave = (e2)=>{\n        if (isPointerMovingToSubmenu(e2)) {\n            e2.preventDefault();\n        }\n    };\n    createHideOutside({\n        isDisabled: ()=>{\n            return !(parentMenuContext == null && disclosureState.isOpen() && rootContext.isModal());\n        },\n        targets: ()=>[\n                contentRef(),\n                ...nestedMenus()\n            ].filter(Boolean)\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const contentEl = contentRef();\n        if (!contentEl || !parentMenuContext) {\n            return;\n        }\n        const parentUnregister = parentMenuContext.registerNestedMenu(contentEl);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            parentUnregister();\n        });\n    });\n    const dataset = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            \"data-expanded\": disclosureState.isOpen() ? \"\" : void 0,\n            \"data-closed\": !disclosureState.isOpen() ? \"\" : void 0\n        }));\n    const context = {\n        dataset,\n        isOpen: disclosureState.isOpen,\n        contentPresence,\n        currentPlacement,\n        pointerGraceTimeoutId: ()=>pointerGraceTimeoutId,\n        autoFocus: focusStrategy,\n        listState: ()=>listState,\n        parentMenuContext: ()=>parentMenuContext,\n        triggerRef,\n        contentRef,\n        triggerId,\n        contentId,\n        setTriggerRef,\n        setContentRef,\n        open,\n        close,\n        toggle,\n        focusContent,\n        onItemEnter,\n        onItemLeave,\n        onTriggerLeave,\n        setPointerDir: (dir)=>pointerDir = dir,\n        setPointerGraceTimeoutId: (id)=>pointerGraceTimeoutId = id,\n        setPointerGraceIntent: (intent)=>pointerGraceIntent = intent,\n        registerNestedMenu,\n        registerItemToParentDomCollection: parentDomCollectionContext === null || parentDomCollectionContext === void 0 ? void 0 : parentDomCollectionContext.registerItem,\n        registerTriggerId: createRegisterId(setTriggerId),\n        registerContentId: createRegisterId(setContentId)\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DomCollectionProvider, {\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContext.Provider, {\n                value: context,\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PopperRoot, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                        anchorRef: triggerRef,\n                        contentRef,\n                        onCurrentPlacementChange: setCurrentPlacement\n                    }, others));\n                }\n            });\n        }\n    });\n}\n_s20(Menu, \"8kmHeTlacwYsovhaGx+N+rMwETw=\", false, function() {\n    return [\n        useMenuRootContext,\n        useOptionalDomCollectionContext,\n        useOptionalMenuContext\n    ];\n});\n_c11 = Menu;\nvar MenuItemContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuItemContext() {\n    _s21();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuItemContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuItemContext` must be used within a `Menu.Item` component\");\n    }\n    return context;\n}\n_s21(useMenuItemContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MenuItemBase(props) {\n    _s22();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const menuContext = useMenuContext();\n    props = mergeDefaultProps({\n        id: rootContext.generateId(\"item-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"textValue\",\n        \"disabled\",\n        \"closeOnSelect\",\n        \"checked\",\n        \"indeterminate\",\n        \"onSelect\",\n        \"onPointerMove\",\n        \"onPointerLeave\",\n        \"onPointerDown\",\n        \"onPointerUp\",\n        \"onClick\",\n        \"onKeyDown\",\n        \"onMouseDown\",\n        \"onFocus\"\n    ]);\n    const [labelId, setLabelId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [descriptionId, setDescriptionId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [labelRef, setLabelRef] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const selectionManager = ()=>menuContext.listState().selectionManager();\n    const key = ()=>others.id;\n    const isHighlighted = ()=>selectionManager().focusedKey() === key();\n    const onSelect = ()=>{\n        var _local_onSelect;\n        (_local_onSelect = local.onSelect) === null || _local_onSelect === void 0 ? void 0 : _local_onSelect.call(local);\n        if (local.closeOnSelect) {\n            menuContext.close(true);\n        }\n    };\n    createDomCollectionItem({\n        getItem: ()=>{\n            var _labelRef;\n            var _local_textValue, _ref, _ref1, _local_disabled;\n            return {\n                ref: ()=>ref,\n                type: \"item\",\n                key: key(),\n                textValue: (_ref1 = (_ref = (_local_textValue = local.textValue) !== null && _local_textValue !== void 0 ? _local_textValue : (_labelRef = labelRef()) === null || _labelRef === void 0 ? void 0 : _labelRef.textContent) !== null && _ref !== void 0 ? _ref : ref === null || ref === void 0 ? void 0 : ref.textContent) !== null && _ref1 !== void 0 ? _ref1 : \"\",\n                disabled: (_local_disabled = local.disabled) !== null && _local_disabled !== void 0 ? _local_disabled : false\n            };\n        }\n    });\n    const selectableItem = createSelectableItem({\n        key,\n        selectionManager,\n        shouldSelectOnPressUp: true,\n        allowsDifferentPressOrigin: true,\n        disabled: ()=>local.disabled\n    }, ()=>ref);\n    const onPointerMove = (e2)=>{\n        callHandler(e2, local.onPointerMove);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        if (local.disabled) {\n            menuContext.onItemLeave(e2);\n        } else {\n            menuContext.onItemEnter(e2);\n            if (!e2.defaultPrevented) {\n                focusWithoutScrolling(e2.currentTarget);\n                menuContext.listState().selectionManager().setFocused(true);\n                menuContext.listState().selectionManager().setFocusedKey(key());\n            }\n        }\n    };\n    const onPointerLeave = (e2)=>{\n        callHandler(e2, local.onPointerLeave);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        menuContext.onItemLeave(e2);\n    };\n    const onPointerUp = (e2)=>{\n        callHandler(e2, local.onPointerUp);\n        if (!local.disabled && e2.button === 0) {\n            onSelect();\n        }\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (e2.repeat) {\n            return;\n        }\n        if (local.disabled) {\n            return;\n        }\n        switch(e2.key){\n            case \"Enter\":\n            case \" \":\n                onSelect();\n                break;\n        }\n    };\n    const ariaChecked = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (local.indeterminate) {\n            return \"mixed\";\n        }\n        if (local.checked == null) {\n            return void 0;\n        }\n        return local.checked;\n    });\n    const dataset = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            \"data-indeterminate\": local.indeterminate ? \"\" : void 0,\n            \"data-checked\": local.checked && !local.indeterminate ? \"\" : void 0,\n            \"data-disabled\": local.disabled ? \"\" : void 0,\n            \"data-highlighted\": isHighlighted() ? \"\" : void 0\n        }));\n    const context = {\n        isChecked: ()=>local.checked,\n        dataset,\n        setLabelRef,\n        generateId: createGenerateId(()=>others.id),\n        registerLabel: createRegisterId(setLabelId),\n        registerDescription: createRegisterId(setDescriptionId)\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                ref (r$) {\n                    const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n                    typeof _ref$ === \"function\" && _ref$(r$);\n                },\n                get tabIndex () {\n                    return selectableItem.tabIndex();\n                },\n                get [\"aria-checked\"] () {\n                    return ariaChecked();\n                },\n                get [\"aria-disabled\"] () {\n                    return local.disabled;\n                },\n                get [\"aria-labelledby\"] () {\n                    return labelId();\n                },\n                get [\"aria-describedby\"] () {\n                    return descriptionId();\n                },\n                get [\"data-key\"] () {\n                    return selectableItem.dataKey();\n                },\n                get onPointerDown () {\n                    return composeEventHandlers([\n                        local.onPointerDown,\n                        selectableItem.onPointerDown\n                    ]);\n                },\n                get onPointerUp () {\n                    return composeEventHandlers([\n                        onPointerUp,\n                        selectableItem.onPointerUp\n                    ]);\n                },\n                get onClick () {\n                    return composeEventHandlers([\n                        local.onClick,\n                        selectableItem.onClick\n                    ]);\n                },\n                get onKeyDown () {\n                    return composeEventHandlers([\n                        onKeyDown,\n                        selectableItem.onKeyDown\n                    ]);\n                },\n                get onMouseDown () {\n                    return composeEventHandlers([\n                        local.onMouseDown,\n                        selectableItem.onMouseDown\n                    ]);\n                },\n                get onFocus () {\n                    return composeEventHandlers([\n                        local.onFocus,\n                        selectableItem.onFocus\n                    ]);\n                },\n                onPointerMove,\n                onPointerLeave\n            }, dataset, others));\n        }\n    });\n}\n_s22(MenuItemBase, \"WMdOE+XJ2mpzx5ulc1O3zwxgX2g=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c12 = MenuItemBase;\nfunction MenuCheckboxItem(props) {\n    props = mergeDefaultProps({\n        closeOnSelect: false\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"checked\",\n        \"defaultChecked\",\n        \"onChange\",\n        \"onSelect\"\n    ]);\n    const state2 = createToggleState({\n        isSelected: ()=>local.checked,\n        defaultIsSelected: ()=>local.defaultChecked,\n        onSelectedChange: (checked)=>{\n            var _local_onChange;\n            return (_local_onChange = local.onChange) === null || _local_onChange === void 0 ? void 0 : _local_onChange.call(local, checked);\n        },\n        isDisabled: ()=>others.disabled\n    });\n    const onSelect = ()=>{\n        var _local_onSelect;\n        (_local_onSelect = local.onSelect) === null || _local_onSelect === void 0 ? void 0 : _local_onSelect.call(local);\n        state2.toggle();\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemBase, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        role: \"menuitemcheckbox\",\n        get checked () {\n            return state2.isSelected();\n        },\n        onSelect\n    }, others));\n}\n_c13 = MenuCheckboxItem;\nfunction MenuContentBase(props) {\n    _s23();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    props = mergeDefaultProps({\n        id: rootContext.generateId(\"content-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"id\",\n        \"style\",\n        \"onOpenAutoFocus\",\n        \"onCloseAutoFocus\",\n        \"onEscapeKeyDown\",\n        \"onFocusOutside\",\n        \"onPointerEnter\",\n        \"onPointerMove\",\n        \"onKeyDown\",\n        \"onMouseDown\",\n        \"onFocusIn\",\n        \"onFocusOut\"\n    ]);\n    let lastPointerX = 0;\n    const isRootModalContent = ()=>{\n        return context.parentMenuContext() == null && rootContext.isModal();\n    };\n    const selectableList = createSelectableList({\n        selectionManager: context.listState().selectionManager,\n        collection: context.listState().collection,\n        autoFocus: context.autoFocus,\n        deferAutoFocus: true,\n        // ensure all menu items are mounted and collection is not empty before trying to autofocus.\n        shouldFocusWrap: true,\n        disallowTypeAhead: ()=>!context.listState().selectionManager().isFocused()\n    }, ()=>ref);\n    createFocusScope({\n        trapFocus: ()=>isRootModalContent() && context.isOpen(),\n        onMountAutoFocus: local.onOpenAutoFocus,\n        onUnmountAutoFocus: local.onCloseAutoFocus\n    }, ()=>ref);\n    const onKeyDown = (e2)=>{\n        if (!contains(e2.currentTarget, e2.target)) {\n            return;\n        }\n        if (e2.key === \"Tab\" && context.isOpen()) {\n            e2.preventDefault();\n        }\n    };\n    const onEscapeKeyDown = (e2)=>{\n        var _local_onEscapeKeyDown;\n        (_local_onEscapeKeyDown = local.onEscapeKeyDown) === null || _local_onEscapeKeyDown === void 0 ? void 0 : _local_onEscapeKeyDown.call(local, e2);\n        context.close(true);\n    };\n    const onFocusOutside = (e2)=>{\n        var _local_onFocusOutside;\n        (_local_onFocusOutside = local.onFocusOutside) === null || _local_onFocusOutside === void 0 ? void 0 : _local_onFocusOutside.call(local, e2);\n        if (rootContext.isModal()) {\n            e2.preventDefault();\n        }\n    };\n    const onPointerEnter = (e2)=>{\n        var _context_parentMenuContext, _context_parentMenuContext1;\n        callHandler(e2, local.onPointerEnter);\n        if (!context.isOpen()) {\n            return;\n        }\n        (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.listState().selectionManager().setFocused(false);\n        (_context_parentMenuContext1 = context.parentMenuContext()) === null || _context_parentMenuContext1 === void 0 ? void 0 : _context_parentMenuContext1.listState().selectionManager().setFocusedKey(void 0);\n    };\n    const onPointerMove = (e2)=>{\n        callHandler(e2, local.onPointerMove);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        const target = e2.target;\n        const pointerXHasChanged = lastPointerX !== e2.clientX;\n        if (contains(e2.currentTarget, target) && pointerXHasChanged) {\n            context.setPointerDir(e2.clientX > lastPointerX ? \"right\" : \"left\");\n            lastPointerX = e2.clientX;\n        }\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerContentId(local.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return context.contentPresence.isPresent();\n        },\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PopperPositioner, {\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DismissableLayer, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                        ref (r$) {\n                            const _ref$ = mergeRefs((el)=>{\n                                context.setContentRef(el);\n                                context.contentPresence.setRef(el);\n                                ref = el;\n                            }, local.ref);\n                            typeof _ref$ === \"function\" && _ref$(r$);\n                        },\n                        role: \"menu\",\n                        get id () {\n                            return local.id;\n                        },\n                        get tabIndex () {\n                            return selectableList.tabIndex();\n                        },\n                        get disableOutsidePointerEvents () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!isRootModalContent())() && context.isOpen();\n                        },\n                        get excludedElements () {\n                            return [\n                                context.triggerRef\n                            ];\n                        },\n                        bypassTopMostLayerCheck: true,\n                        get style () {\n                            return {\n                                \"--kb-menu-content-transform-origin\": \"var(--kb-popper-content-transform-origin)\",\n                                position: \"relative\",\n                                ...local.style\n                            };\n                        },\n                        get [\"aria-labelledby\"] () {\n                            return context.triggerId();\n                        },\n                        onEscapeKeyDown,\n                        onFocusOutside,\n                        get onDismiss () {\n                            return context.close;\n                        },\n                        get onKeyDown () {\n                            return composeEventHandlers([\n                                local.onKeyDown,\n                                selectableList.onKeyDown,\n                                onKeyDown\n                            ]);\n                        },\n                        get onMouseDown () {\n                            return composeEventHandlers([\n                                local.onMouseDown,\n                                selectableList.onMouseDown\n                            ]);\n                        },\n                        get onFocusIn () {\n                            return composeEventHandlers([\n                                local.onFocusIn,\n                                selectableList.onFocusIn\n                            ]);\n                        },\n                        get onFocusOut () {\n                            return composeEventHandlers([\n                                local.onFocusOut,\n                                selectableList.onFocusOut\n                            ]);\n                        },\n                        onPointerEnter,\n                        onPointerMove\n                    }, ()=>context.dataset(), others));\n                }\n            });\n        }\n    });\n}\n_s23(MenuContentBase, \"tz4qlGwl0Ehbw+9GFOejFuA5NQk=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c14 = MenuContentBase;\nfunction MenuContent(props) {\n    _s24();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\"\n    ]);\n    createPreventScroll({\n        ownerRef: ()=>ref,\n        isDisabled: ()=>!(context.isOpen() && (rootContext.isModal() || rootContext.preventScroll()))\n    });\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContentBase, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        }\n    }, others));\n}\n_s24(MenuContent, \"tz4qlGwl0Ehbw+9GFOejFuA5NQk=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c15 = MenuContent;\nvar MenuGroupContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuGroupContext() {\n    _s25();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuGroupContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuGroupContext` must be used within a `Menu.Group` component\");\n    }\n    return context;\n}\n_s25(useMenuGroupContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MenuGroup(props) {\n    _s26();\n    const rootContext = useMenuRootContext();\n    props = mergeDefaultProps({\n        id: rootContext.generateId(\"group-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [labelId, setLabelId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const context = {\n        generateId: createGenerateId(()=>props.id),\n        registerLabelId: createRegisterId(setLabelId)\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuGroupContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                role: \"group\",\n                get [\"aria-labelledby\"] () {\n                    return labelId();\n                }\n            }, props));\n        }\n    });\n}\n_s26(MenuGroup, \"7Qc6FRt9uV+prycXm1xbDOS8y+Y=\", false, function() {\n    return [\n        useMenuRootContext\n    ];\n});\n_c16 = MenuGroup;\nfunction MenuGroupLabel(props) {\n    _s27();\n    const context = useMenuGroupContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"id\"\n    ]);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabelId(local.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"span\",\n        get id () {\n            return local.id;\n        },\n        \"aria-hidden\": \"true\"\n    }, others));\n}\n_s27(MenuGroupLabel, \"p25NOyAS2DCeeBK9XrK3/WRuxBY=\", false, function() {\n    return [\n        useMenuGroupContext\n    ];\n});\n_c17 = MenuGroupLabel;\nfunction MenuIcon(props) {\n    _s28();\n    const context = useMenuContext();\n    props = mergeDefaultProps({\n        children: \"▼\"\n    }, props);\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"span\",\n        \"aria-hidden\": \"true\"\n    }, ()=>context.dataset(), props));\n}\n_s28(MenuIcon, \"Jc8vKAvq94jPZkBJYIZO/X0jxQk=\", false, function() {\n    return [\n        useMenuContext\n    ];\n});\n_c18 = MenuIcon;\nfunction MenuItem(props) {\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemBase, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        role: \"menuitem\",\n        closeOnSelect: true\n    }, props));\n}\n_c19 = MenuItem;\nfunction MenuItemDescription(props) {\n    _s29();\n    const context = useMenuItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"description\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"id\"\n    ]);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerDescription(local.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        get id () {\n            return local.id;\n        }\n    }, ()=>context.dataset(), others));\n}\n_s29(MenuItemDescription, \"Ptxnc6sqhGRdo6qzxTP3Tu2J6EI=\", false, function() {\n    return [\n        useMenuItemContext\n    ];\n});\n_c20 = MenuItemDescription;\nfunction MenuItemIndicator(props) {\n    _s30();\n    const context = useMenuItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"indicator\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"forceMount\"\n    ]);\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return local.forceMount || context.isChecked();\n        },\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\"\n            }, ()=>context.dataset(), others));\n        }\n    });\n}\n_s30(MenuItemIndicator, \"Ptxnc6sqhGRdo6qzxTP3Tu2J6EI=\", false, function() {\n    return [\n        useMenuItemContext\n    ];\n});\n_c21 = MenuItemIndicator;\nfunction MenuItemLabel(props) {\n    _s31();\n    const context = useMenuItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"id\"\n    ]);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabel(local.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setLabelRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get id () {\n            return local.id;\n        }\n    }, ()=>context.dataset(), others));\n}\n_s31(MenuItemLabel, \"Ptxnc6sqhGRdo6qzxTP3Tu2J6EI=\", false, function() {\n    return [\n        useMenuItemContext\n    ];\n});\n_c22 = MenuItemLabel;\nfunction MenuPortal(props) {\n    _s32();\n    const context = useMenuContext();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return context.contentPresence.isPresent();\n        },\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Portal, props);\n        }\n    });\n}\n_s32(MenuPortal, \"Jc8vKAvq94jPZkBJYIZO/X0jxQk=\", false, function() {\n    return [\n        useMenuContext\n    ];\n});\n_c23 = MenuPortal;\nvar MenuRadioGroupContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useMenuRadioGroupContext() {\n    _s33();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(MenuRadioGroupContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useMenuRadioGroupContext` must be used within a `Menu.RadioGroup` component\");\n    }\n    return context;\n}\n_s33(useMenuRadioGroupContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MenuRadioGroup(props) {\n    _s34();\n    const rootContext = useMenuRootContext();\n    const defaultId = rootContext.generateId(\"radiogroup-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()));\n    props = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"value\",\n        \"defaultValue\",\n        \"onChange\",\n        \"disabled\"\n    ]);\n    const [selected, setSelected] = createControllableSignal({\n        value: ()=>local.value,\n        defaultValue: ()=>local.defaultValue,\n        onChange: (value)=>{\n            var _local_onChange;\n            return (_local_onChange = local.onChange) === null || _local_onChange === void 0 ? void 0 : _local_onChange.call(local, value);\n        }\n    });\n    const context = {\n        isDisabled: ()=>local.disabled,\n        isSelectedValue: (value)=>value === selected(),\n        setSelectedValue: setSelected\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuRadioGroupContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuGroup, others);\n        }\n    });\n}\n_s34(MenuRadioGroup, \"7Qc6FRt9uV+prycXm1xbDOS8y+Y=\", false, function() {\n    return [\n        useMenuRootContext\n    ];\n});\n_c24 = MenuRadioGroup;\nfunction MenuRadioItem(props) {\n    _s35();\n    const context = useMenuRadioGroupContext();\n    props = mergeDefaultProps({\n        closeOnSelect: false\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"value\",\n        \"onSelect\"\n    ]);\n    const onSelect = ()=>{\n        var _local_onSelect;\n        (_local_onSelect = local.onSelect) === null || _local_onSelect === void 0 ? void 0 : _local_onSelect.call(local);\n        context.setSelectedValue(local.value);\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuItemBase, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        role: \"menuitemradio\",\n        get checked () {\n            return context.isSelectedValue(local.value);\n        },\n        onSelect\n    }, others));\n}\n_s35(MenuRadioItem, \"8PKtRvZu032ocBEzoMI3bvq5f2k=\", false, function() {\n    return [\n        useMenuRadioGroupContext\n    ];\n});\n_c25 = MenuRadioItem;\nfunction MenuRoot(props) {\n    const defaultId = \"menu-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    props = mergeDefaultProps({\n        id: defaultId,\n        modal: true,\n        preventScroll: false\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"id\",\n        \"modal\",\n        \"preventScroll\",\n        \"forceMount\",\n        \"open\",\n        \"defaultOpen\",\n        \"onOpenChange\"\n    ]);\n    const disclosureState = createDisclosureState({\n        open: ()=>local.open,\n        defaultOpen: ()=>local.defaultOpen,\n        onOpenChange: (isOpen)=>{\n            var _local_onOpenChange;\n            return (_local_onOpenChange = local.onOpenChange) === null || _local_onOpenChange === void 0 ? void 0 : _local_onOpenChange.call(local, isOpen);\n        }\n    });\n    const context = {\n        isModal: ()=>{\n            var _local_modal;\n            return (_local_modal = local.modal) !== null && _local_modal !== void 0 ? _local_modal : true;\n        },\n        preventScroll: ()=>{\n            var _local_preventScroll;\n            return (_local_preventScroll = local.preventScroll) !== null && _local_preventScroll !== void 0 ? _local_preventScroll : false;\n        },\n        forceMount: ()=>{\n            var _local_forceMount;\n            return (_local_forceMount = local.forceMount) !== null && _local_forceMount !== void 0 ? _local_forceMount : false;\n        },\n        generateId: createGenerateId(()=>local.id)\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuRootContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Menu, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                get open () {\n                    return disclosureState.isOpen();\n                },\n                get onOpenChange () {\n                    return disclosureState.setIsOpen;\n                }\n            }, others));\n        }\n    });\n}\n_c26 = MenuRoot;\nfunction MenuSub(props) {\n    _s36();\n    const { direction } = useLocale();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Menu, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        get placement () {\n            return direction() === \"rtl\" ? \"left-start\" : \"right-start\";\n        },\n        flip: true\n    }, props));\n}\n_s36(MenuSub, \"wF7kuazRv875Ci8MQbx5obOHKLY=\", false, function() {\n    return [\n        useLocale\n    ];\n});\n_c27 = MenuSub;\nvar SUB_CLOSE_KEYS = {\n    ltr: [\n        \"ArrowLeft\"\n    ],\n    rtl: [\n        \"ArrowRight\"\n    ]\n};\nfunction MenuSubContent(props) {\n    _s37();\n    const context = useMenuContext();\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"onFocusOutside\",\n        \"onKeyDown\",\n        \"onFocusOut\"\n    ]);\n    const { direction } = useLocale();\n    const onOpenAutoFocus = (e2)=>{\n        e2.preventDefault();\n    };\n    const onCloseAutoFocus = (e2)=>{\n        e2.preventDefault();\n    };\n    const onFocusOutside = (e2)=>{\n        var _local_onFocusOutside;\n        (_local_onFocusOutside = local.onFocusOutside) === null || _local_onFocusOutside === void 0 ? void 0 : _local_onFocusOutside.call(local, e2);\n        const target = e2.target;\n        if (!contains(context.triggerRef(), target)) {\n            context.close();\n        }\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        const isKeyDownInside = contains(e2.currentTarget, e2.target);\n        const isCloseKey = SUB_CLOSE_KEYS[direction()].includes(e2.key);\n        const isSubMenu = context.parentMenuContext() != null;\n        if (isKeyDownInside && isCloseKey && isSubMenu) {\n            context.close();\n            focusWithoutScrolling(context.triggerRef());\n        }\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContentBase, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        onOpenAutoFocus,\n        onCloseAutoFocus,\n        onFocusOutside,\n        onKeyDown\n    }, others));\n}\n_s37(MenuSubContent, \"haclY+wDwf1g0geeEoFnjEGuaaE=\", false, function() {\n    return [\n        useMenuContext,\n        useLocale\n    ];\n});\n_c28 = MenuSubContent;\nvar SELECTION_KEYS = [\n    \"Enter\",\n    \" \"\n];\nvar SUB_OPEN_KEYS = {\n    ltr: [\n        ...SELECTION_KEYS,\n        \"ArrowRight\"\n    ],\n    rtl: [\n        ...SELECTION_KEYS,\n        \"ArrowLeft\"\n    ]\n};\nfunction MenuSubTrigger(props) {\n    _s38();\n    let ref;\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    props = mergeDefaultProps({\n        id: rootContext.generateId(\"sub-trigger-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)()))\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"id\",\n        \"textValue\",\n        \"disabled\",\n        \"onPointerMove\",\n        \"onPointerLeave\",\n        \"onPointerDown\",\n        \"onPointerUp\",\n        \"onClick\",\n        \"onKeyDown\",\n        \"onMouseDown\",\n        \"onFocus\"\n    ]);\n    let openTimeoutId = null;\n    const clearOpenTimeout = ()=>{\n        if (_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.isServer) {\n            return;\n        }\n        if (openTimeoutId) {\n            window.clearTimeout(openTimeoutId);\n        }\n        openTimeoutId = null;\n    };\n    const { direction } = useLocale();\n    const key = ()=>local.id;\n    const parentSelectionManager = ()=>{\n        const parentMenuContext = context.parentMenuContext();\n        if (parentMenuContext == null) {\n            throw new Error(\"[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component\");\n        }\n        return parentMenuContext.listState().selectionManager();\n    };\n    const collection = ()=>context.listState().collection();\n    const isHighlighted = ()=>parentSelectionManager().focusedKey() === key();\n    const selectableItem = createSelectableItem({\n        key,\n        selectionManager: parentSelectionManager,\n        shouldSelectOnPressUp: true,\n        allowsDifferentPressOrigin: true,\n        disabled: ()=>local.disabled\n    }, ()=>ref);\n    const onClick = (e2)=>{\n        callHandler(e2, local.onClick);\n        if (!context.isOpen() && !local.disabled) {\n            context.open(true);\n        }\n    };\n    const onPointerMove = (e2)=>{\n        callHandler(e2, local.onPointerMove);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        const parentMenuContext = context.parentMenuContext();\n        parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemEnter(e2);\n        if (e2.defaultPrevented) {\n            return;\n        }\n        if (local.disabled) {\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemLeave(e2);\n            return;\n        }\n        if (!context.isOpen() && !openTimeoutId) {\n            var _context_parentMenuContext;\n            (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.setPointerGraceIntent(null);\n            openTimeoutId = window.setTimeout(()=>{\n                context.open(false);\n                clearOpenTimeout();\n            }, 100);\n        }\n        parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemEnter(e2);\n        if (!e2.defaultPrevented) {\n            if (context.listState().selectionManager().isFocused()) {\n                context.listState().selectionManager().setFocused(false);\n                context.listState().selectionManager().setFocusedKey(void 0);\n            }\n            focusWithoutScrolling(e2.currentTarget);\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.listState().selectionManager().setFocused(true);\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.listState().selectionManager().setFocusedKey(key());\n        }\n    };\n    const onPointerLeave = (e2)=>{\n        callHandler(e2, local.onPointerLeave);\n        if (e2.pointerType !== \"mouse\") {\n            return;\n        }\n        clearOpenTimeout();\n        const parentMenuContext = context.parentMenuContext();\n        const contentEl = context.contentRef();\n        if (contentEl) {\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceIntent({\n                area: getPointerGraceArea(context.currentPlacement(), e2, contentEl),\n                // Safe because sub menu always open \"left\" or \"right\".\n                side: context.currentPlacement().split(\"-\")[0]\n            });\n            window.clearTimeout(parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.pointerGraceTimeoutId());\n            const pointerGraceTimeoutId = window.setTimeout(()=>{\n                parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceIntent(null);\n            }, 300);\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceTimeoutId(pointerGraceTimeoutId);\n        } else {\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onTriggerLeave(e2);\n            if (e2.defaultPrevented) {\n                return;\n            }\n            parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.setPointerGraceIntent(null);\n        }\n        parentMenuContext === null || parentMenuContext === void 0 ? void 0 : parentMenuContext.onItemLeave(e2);\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (e2.repeat) {\n            return;\n        }\n        if (local.disabled) {\n            return;\n        }\n        if (SUB_OPEN_KEYS[direction()].includes(e2.key)) {\n            e2.stopPropagation();\n            e2.preventDefault();\n            parentSelectionManager().setFocused(false);\n            parentSelectionManager().setFocusedKey(void 0);\n            if (!context.isOpen()) {\n                context.open(\"first\");\n            }\n            context.focusContent();\n            context.listState().selectionManager().setFocused(true);\n            context.listState().selectionManager().setFocusedKey(collection().getFirstKey());\n        }\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (context.registerItemToParentDomCollection == null) {\n            throw new Error(\"[kobalte]: `Menu.SubTrigger` must be used within a `Menu.Sub` component\");\n        }\n        var _local_textValue, _ref, _local_disabled;\n        const unregister = context.registerItemToParentDomCollection({\n            ref: ()=>ref,\n            type: \"item\",\n            key: key(),\n            textValue: (_ref = (_local_textValue = local.textValue) !== null && _local_textValue !== void 0 ? _local_textValue : ref === null || ref === void 0 ? void 0 : ref.textContent) !== null && _ref !== void 0 ? _ref : \"\",\n            disabled: (_local_disabled = local.disabled) !== null && _local_disabled !== void 0 ? _local_disabled : false\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(unregister);\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(()=>{\n        var _context_parentMenuContext;\n        return (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.pointerGraceTimeoutId();\n    }, (pointerGraceTimer)=>{\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            var _context_parentMenuContext;\n            window.clearTimeout(pointerGraceTimer);\n            (_context_parentMenuContext = context.parentMenuContext()) === null || _context_parentMenuContext === void 0 ? void 0 : _context_parentMenuContext.setPointerGraceIntent(null);\n        });\n    }));\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerTriggerId(local.id)));\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        clearOpenTimeout();\n    });\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>{\n                context.setTriggerRef(el);\n                ref = el;\n            }, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get id () {\n            return local.id;\n        },\n        role: \"menuitem\",\n        get tabIndex () {\n            return selectableItem.tabIndex();\n        },\n        \"aria-haspopup\": \"true\",\n        get [\"aria-expanded\"] () {\n            return context.isOpen();\n        },\n        get [\"aria-controls\"] () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!context.isOpen())() ? context.contentId() : void 0;\n        },\n        get [\"aria-disabled\"] () {\n            return local.disabled;\n        },\n        get [\"data-key\"] () {\n            return selectableItem.dataKey();\n        },\n        get [\"data-highlighted\"] () {\n            return isHighlighted() ? \"\" : void 0;\n        },\n        get [\"data-disabled\"] () {\n            return local.disabled ? \"\" : void 0;\n        },\n        get onPointerDown () {\n            return composeEventHandlers([\n                local.onPointerDown,\n                selectableItem.onPointerDown\n            ]);\n        },\n        get onPointerUp () {\n            return composeEventHandlers([\n                local.onPointerUp,\n                selectableItem.onPointerUp\n            ]);\n        },\n        get onClick () {\n            return composeEventHandlers([\n                onClick,\n                selectableItem.onClick\n            ]);\n        },\n        get onKeyDown () {\n            return composeEventHandlers([\n                onKeyDown,\n                selectableItem.onKeyDown\n            ]);\n        },\n        get onMouseDown () {\n            return composeEventHandlers([\n                local.onMouseDown,\n                selectableItem.onMouseDown\n            ]);\n        },\n        get onFocus () {\n            return composeEventHandlers([\n                local.onFocus,\n                selectableItem.onFocus\n            ]);\n        },\n        onPointerMove,\n        onPointerLeave\n    }, ()=>context.dataset(), others));\n}\n_s38(MenuSubTrigger, \"MnUJzH6UO8p2hOOdTh2qZwinKsQ=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext,\n        useLocale\n    ];\n});\n_c29 = MenuSubTrigger;\nfunction MenuTrigger(props) {\n    _s39();\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    props = mergeDefaultProps({\n        id: rootContext.generateId(\"trigger\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"id\",\n        \"disabled\",\n        \"onPointerDown\",\n        \"onClick\",\n        \"onKeyDown\"\n    ]);\n    const onPointerDown = (e2)=>{\n        callHandler(e2, local.onPointerDown);\n        e2.currentTarget.dataset.pointerType = e2.pointerType;\n        if (!local.disabled && e2.pointerType !== \"touch\" && e2.button === 0) {\n            context.toggle(true);\n        }\n    };\n    const onClick = (e2)=>{\n        callHandler(e2, local.onClick);\n        if (!local.disabled && e2.currentTarget.dataset.pointerType === \"touch\") {\n            context.toggle(true);\n        }\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (local.disabled) {\n            return;\n        }\n        switch(e2.key){\n            case \"Enter\":\n            case \" \":\n            case \"ArrowDown\":\n                e2.stopPropagation();\n                e2.preventDefault();\n                context.toggle(\"first\");\n                break;\n            case \"ArrowUp\":\n                e2.stopPropagation();\n                e2.preventDefault();\n                context.toggle(\"last\");\n                break;\n        }\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerTriggerId(local.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ButtonRoot, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        ref (r$) {\n            const _ref$ = mergeRefs(context.setTriggerRef, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get id () {\n            return local.id;\n        },\n        get disabled () {\n            return local.disabled;\n        },\n        \"aria-haspopup\": \"true\",\n        get [\"aria-expanded\"] () {\n            return context.isOpen();\n        },\n        get [\"aria-controls\"] () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!context.isOpen())() ? context.contentId() : void 0;\n        },\n        onPointerDown,\n        onClick,\n        onKeyDown\n    }, ()=>context.dataset(), others));\n}\n_s39(MenuTrigger, \"tz4qlGwl0Ehbw+9GFOejFuA5NQk=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c30 = MenuTrigger;\nfunction SeparatorRoot(props) {\n    let ref;\n    props = mergeDefaultProps({\n        orientation: \"horizontal\"\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"orientation\"\n    ]);\n    const tagName = createTagName(()=>ref, ()=>\"hr\");\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"hr\",\n        ref (r$) {\n            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n            typeof _ref$ === \"function\" && _ref$(r$);\n        },\n        get role () {\n            return tagName() !== \"hr\" ? \"separator\" : void 0;\n        },\n        get [\"aria-orientation\"] () {\n            return local.orientation === \"vertical\" ? \"vertical\" : void 0;\n        },\n        get [\"data-orientation\"] () {\n            return local.orientation;\n        }\n    }, others));\n}\n_c31 = SeparatorRoot;\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nnew $d6fd23bc337660df$export$64839e615120df17({\n    ach: {\n        year: \"mwaka\",\n        month: \"dwe\",\n        day: \"nino\"\n    },\n    af: {\n        year: \"jjjj\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    am: {\n        year: \"ዓዓዓዓ\",\n        month: \"ሚሜ\",\n        day: \"ቀቀ\"\n    },\n    an: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    ar: {\n        year: \"سنة\",\n        month: \"شهر\",\n        day: \"يوم\"\n    },\n    ast: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    az: {\n        year: \"iiii\",\n        month: \"aa\",\n        day: \"gg\"\n    },\n    be: {\n        year: \"гггг\",\n        month: \"мм\",\n        day: \"дд\"\n    },\n    bg: {\n        year: \"гггг\",\n        month: \"мм\",\n        day: \"дд\"\n    },\n    bn: {\n        year: \"yyyy\",\n        month: \"মিমি\",\n        day: \"dd\"\n    },\n    br: {\n        year: \"bbbb\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    bs: {\n        year: \"gggg\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    ca: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    cak: {\n        year: \"jjjj\",\n        month: \"ii\",\n        day: \"q'q'\"\n    },\n    ckb: {\n        year: \"ساڵ\",\n        month: \"مانگ\",\n        day: \"ڕۆژ\"\n    },\n    cs: {\n        year: \"rrrr\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    cy: {\n        year: \"bbbb\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    da: {\n        year: \"\\xe5\\xe5\\xe5\\xe5\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    de: {\n        year: \"jjjj\",\n        month: \"mm\",\n        day: \"tt\"\n    },\n    dsb: {\n        year: \"llll\",\n        month: \"mm\",\n        day: \"źź\"\n    },\n    el: {\n        year: \"εεεε\",\n        month: \"μμ\",\n        day: \"ηη\"\n    },\n    en: {\n        year: \"yyyy\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    eo: {\n        year: \"jjjj\",\n        month: \"mm\",\n        day: \"tt\"\n    },\n    es: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    et: {\n        year: \"aaaa\",\n        month: \"kk\",\n        day: \"pp\"\n    },\n    eu: {\n        year: \"uuuu\",\n        month: \"hh\",\n        day: \"ee\"\n    },\n    fa: {\n        year: \"سال\",\n        month: \"ماه\",\n        day: \"روز\"\n    },\n    ff: {\n        year: \"hhhh\",\n        month: \"ll\",\n        day: \"\\xf1\\xf1\"\n    },\n    fi: {\n        year: \"vvvv\",\n        month: \"kk\",\n        day: \"pp\"\n    },\n    fr: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"jj\"\n    },\n    fy: {\n        year: \"jjjj\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    ga: {\n        year: \"bbbb\",\n        month: \"mm\",\n        day: \"ll\"\n    },\n    gd: {\n        year: \"bbbb\",\n        month: \"mm\",\n        day: \"ll\"\n    },\n    gl: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    he: {\n        year: \"שנה\",\n        month: \"חודש\",\n        day: \"יום\"\n    },\n    hr: {\n        year: \"gggg\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    hsb: {\n        year: \"llll\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    hu: {\n        year: \"\\xe9\\xe9\\xe9\\xe9\",\n        month: \"hh\",\n        day: \"nn\"\n    },\n    ia: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    id: {\n        year: \"tttt\",\n        month: \"bb\",\n        day: \"hh\"\n    },\n    it: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"gg\"\n    },\n    ja: {\n        year: \" 年 \",\n        month: \"月\",\n        day: \"日\"\n    },\n    ka: {\n        year: \"წწწწ\",\n        month: \"თთ\",\n        day: \"რრ\"\n    },\n    kk: {\n        year: \"жжжж\",\n        month: \"аа\",\n        day: \"кк\"\n    },\n    kn: {\n        year: \"ವವವವ\",\n        month: \"ಮಿಮೀ\",\n        day: \"ದಿದಿ\"\n    },\n    ko: {\n        year: \"연도\",\n        month: \"월\",\n        day: \"일\"\n    },\n    lb: {\n        year: \"jjjj\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    lo: {\n        year: \"ປປປປ\",\n        month: \"ດດ\",\n        day: \"ວວ\"\n    },\n    lt: {\n        year: \"mmmm\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    lv: {\n        year: \"gggg\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    meh: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    ml: {\n        year: \"വർഷം\",\n        month: \"മാസം\",\n        day: \"തീയതി\"\n    },\n    ms: {\n        year: \"tttt\",\n        month: \"mm\",\n        day: \"hh\"\n    },\n    nl: {\n        year: \"jjjj\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    nn: {\n        year: \"\\xe5\\xe5\\xe5\\xe5\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    no: {\n        year: \"\\xe5\\xe5\\xe5\\xe5\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    oc: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"jj\"\n    },\n    pl: {\n        year: \"rrrr\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    pt: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    rm: {\n        year: \"oooo\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    ro: {\n        year: \"aaaa\",\n        month: \"ll\",\n        day: \"zz\"\n    },\n    ru: {\n        year: \"гггг\",\n        month: \"мм\",\n        day: \"дд\"\n    },\n    sc: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    scn: {\n        year: \"aaaa\",\n        month: \"mm\",\n        day: \"jj\"\n    },\n    sk: {\n        year: \"rrrr\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    sl: {\n        year: \"llll\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    sr: {\n        year: \"гггг\",\n        month: \"мм\",\n        day: \"дд\"\n    },\n    sv: {\n        year: \"\\xe5\\xe5\\xe5\\xe5\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    szl: {\n        year: \"rrrr\",\n        month: \"mm\",\n        day: \"dd\"\n    },\n    tg: {\n        year: \"сссс\",\n        month: \"мм\",\n        day: \"рр\"\n    },\n    th: {\n        year: \"ปปปป\",\n        month: \"ดด\",\n        day: \"วว\"\n    },\n    tr: {\n        year: \"yyyy\",\n        month: \"aa\",\n        day: \"gg\"\n    },\n    uk: {\n        year: \"рррр\",\n        month: \"мм\",\n        day: \"дд\"\n    },\n    \"zh-CN\": {\n        year: \"年\",\n        month: \"月\",\n        day: \"日\"\n    },\n    \"zh-TW\": {\n        year: \"年\",\n        month: \"月\",\n        day: \"日\"\n    }\n}, \"en\");\nfunction DropdownMenuContent(props) {\n    _s40();\n    const rootContext = useMenuRootContext();\n    const context = useMenuContext();\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"onCloseAutoFocus\",\n        \"onInteractOutside\"\n    ]);\n    let hasInteractedOutside = false;\n    const onCloseAutoFocus = (e2)=>{\n        var _local_onCloseAutoFocus;\n        (_local_onCloseAutoFocus = local.onCloseAutoFocus) === null || _local_onCloseAutoFocus === void 0 ? void 0 : _local_onCloseAutoFocus.call(local, e2);\n        if (!hasInteractedOutside) {\n            focusWithoutScrolling(context.triggerRef());\n        }\n        hasInteractedOutside = false;\n        e2.preventDefault();\n    };\n    const onInteractOutside = (e2)=>{\n        var _local_onInteractOutside;\n        (_local_onInteractOutside = local.onInteractOutside) === null || _local_onInteractOutside === void 0 ? void 0 : _local_onInteractOutside.call(local, e2);\n        if (!rootContext.isModal() || e2.detail.isContextMenu) {\n            hasInteractedOutside = true;\n        }\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuContent, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        onCloseAutoFocus,\n        onInteractOutside\n    }, others));\n}\n_s40(DropdownMenuContent, \"tz4qlGwl0Ehbw+9GFOejFuA5NQk=\", false, function() {\n    return [\n        useMenuRootContext,\n        useMenuContext\n    ];\n});\n_c32 = DropdownMenuContent;\nfunction DropdownMenuRoot(props) {\n    const defaultId = \"dropdownmenu-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    props = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MenuRoot, props);\n}\n_c33 = DropdownMenuRoot;\nvar index$f = /* @__PURE__ */ Object.freeze({\n    __proto__: null,\n    Arrow: PopperArrow,\n    CheckboxItem: MenuCheckboxItem,\n    Content: DropdownMenuContent,\n    Group: MenuGroup,\n    GroupLabel: MenuGroupLabel,\n    Icon: MenuIcon,\n    Item: MenuItem,\n    ItemDescription: MenuItemDescription,\n    ItemIndicator: MenuItemIndicator,\n    ItemLabel: MenuItemLabel,\n    Portal: MenuPortal,\n    RadioGroup: MenuRadioGroup,\n    RadioItem: MenuRadioItem,\n    Root: DropdownMenuRoot,\n    Separator: SeparatorRoot,\n    Sub: MenuSub,\n    SubContent: MenuSubContent,\n    SubTrigger: MenuSubTrigger,\n    Trigger: MenuTrigger\n});\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nvar RadioGroupContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useRadioGroupContext() {\n    _s41();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(RadioGroupContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useRadioGroupContext` must be used within a `RadioGroup` component\");\n    }\n    return context;\n}\n_s41(useRadioGroupContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar RadioGroupItemContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction useRadioGroupItemContext() {\n    _s42();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(RadioGroupItemContext);\n    if (context === void 0) {\n        throw new Error(\"[kobalte]: `useRadioGroupItemContext` must be used within a `RadioGroup.Item` component\");\n    }\n    return context;\n}\n_s42(useRadioGroupItemContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction RadioGroupItem(props) {\n    _s43();\n    const formControlContext = useFormControlContext();\n    const radioGroupContext = useRadioGroupContext();\n    const defaultId = \"\".concat(formControlContext.generateId(\"item\"), \"-\").concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    props = mergeDefaultProps({\n        id: defaultId\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"value\",\n        \"disabled\",\n        \"onPointerDown\"\n    ]);\n    const [inputId, setInputId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [labelId, setLabelId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [descriptionId, setDescriptionId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [inputRef, setInputRef] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)();\n    const [isFocused, setIsFocused] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const isSelected = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return radioGroupContext.isSelectedValue(local.value);\n    });\n    const isDisabled = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return local.disabled || formControlContext.isDisabled() || false;\n    });\n    const onPointerDown = (e2)=>{\n        callHandler(e2, local.onPointerDown);\n        if (isFocused()) {\n            e2.preventDefault();\n        }\n    };\n    const dataset = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            ...formControlContext.dataset(),\n            \"data-disabled\": isDisabled() ? \"\" : void 0,\n            \"data-checked\": isSelected() ? \"\" : void 0\n        }));\n    const context = {\n        value: ()=>local.value,\n        dataset,\n        isSelected,\n        isDisabled,\n        inputId,\n        labelId,\n        descriptionId,\n        inputRef,\n        select: ()=>radioGroupContext.setSelectedValue(local.value),\n        generateId: createGenerateId(()=>others.id),\n        registerInput: createRegisterId(setInputId),\n        registerLabel: createRegisterId(setLabelId),\n        registerDescription: createRegisterId(setDescriptionId),\n        setIsFocused,\n        setInputRef\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(RadioGroupItemContext.Provider, {\n        value: context,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                role: \"group\",\n                onPointerDown\n            }, dataset, others));\n        }\n    });\n}\n_s43(RadioGroupItem, \"hT5TzECb4cUtpd2k++6grbACbng=\", false, function() {\n    return [\n        useFormControlContext,\n        useRadioGroupContext\n    ];\n});\n_c34 = RadioGroupItem;\nfunction RadioGroupItemControl(props) {\n    _s44();\n    const context = useRadioGroupItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"control\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"onClick\",\n        \"onKeyDown\"\n    ]);\n    const onClick = (e2)=>{\n        var _context_inputRef;\n        callHandler(e2, local.onClick);\n        context.select();\n        (_context_inputRef = context.inputRef()) === null || _context_inputRef === void 0 ? void 0 : _context_inputRef.focus();\n    };\n    const onKeyDown = (e2)=>{\n        callHandler(e2, local.onKeyDown);\n        if (e2.key === EventKey.Space) {\n            var _context_inputRef;\n            context.select();\n            (_context_inputRef = context.inputRef()) === null || _context_inputRef === void 0 ? void 0 : _context_inputRef.focus();\n        }\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\",\n        onClick,\n        onKeyDown\n    }, ()=>context.dataset(), others));\n}\n_s44(RadioGroupItemControl, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c35 = RadioGroupItemControl;\nfunction RadioGroupItemDescription(props) {\n    _s45();\n    const context = useRadioGroupItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"description\")\n    }, props);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerDescription(props.id)));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"div\"\n    }, ()=>context.dataset(), props));\n}\n_s45(RadioGroupItemDescription, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c36 = RadioGroupItemDescription;\nfunction RadioGroupItemIndicator(props) {\n    _s46();\n    const context = useRadioGroupItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"indicator\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"forceMount\"\n    ]);\n    const presence = createPresence(()=>local.forceMount || context.isSelected());\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return presence.isPresent();\n        },\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                as: \"div\",\n                ref (r$) {\n                    const _ref$ = mergeRefs(presence.setRef, local.ref);\n                    typeof _ref$ === \"function\" && _ref$(r$);\n                }\n            }, ()=>context.dataset(), others));\n        }\n    });\n}\n_s46(RadioGroupItemIndicator, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c37 = RadioGroupItemIndicator;\nvar _tmpl$$7 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<input type=\"radio\">');\nfunction RadioGroupItemInput(props) {\n    _s47();\n    const formControlContext = useFormControlContext();\n    const radioGroupContext = useRadioGroupContext();\n    const radioContext = useRadioGroupItemContext();\n    props = mergeDefaultProps({\n        id: radioContext.generateId(\"input\")\n    }, props);\n    const [local, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"style\",\n        \"aria-labelledby\",\n        \"aria-describedby\",\n        \"onChange\",\n        \"onFocus\",\n        \"onBlur\"\n    ]);\n    const ariaLabelledBy = ()=>{\n        return [\n            local[\"aria-labelledby\"],\n            radioContext.labelId(),\n            // If there is both an aria-label and aria-labelledby, add the input itself has an aria-labelledby\n            local[\"aria-labelledby\"] != null && others[\"aria-label\"] != null ? others.id : void 0\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const ariaDescribedBy = ()=>{\n        return [\n            local[\"aria-describedby\"],\n            radioContext.descriptionId(),\n            radioGroupContext.ariaDescribedBy()\n        ].filter(Boolean).join(\" \") || void 0;\n    };\n    const onChange = (e2)=>{\n        callHandler(e2, local.onChange);\n        e2.stopPropagation();\n        radioGroupContext.setSelectedValue(radioContext.value());\n        const target = e2.target;\n        target.checked = radioContext.isSelected();\n    };\n    const onFocus = (e2)=>{\n        callHandler(e2, local.onFocus);\n        radioContext.setIsFocused(true);\n    };\n    const onBlur = (e2)=>{\n        callHandler(e2, local.onBlur);\n        radioContext.setIsFocused(false);\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(radioContext.registerInput(others.id)));\n    return (()=>{\n        const _el$ = _tmpl$$7();\n        _el$.addEventListener(\"blur\", onBlur);\n        _el$.addEventListener(\"focus\", onFocus);\n        _el$.addEventListener(\"change\", onChange);\n        const _ref$ = mergeRefs(radioContext.setInputRef, local.ref);\n        typeof _ref$ === \"function\" && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$, _el$);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.spread)(_el$, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n            get name () {\n                return formControlContext.name();\n            },\n            get value () {\n                return radioContext.value();\n            },\n            get checked () {\n                return radioContext.isSelected();\n            },\n            get required () {\n                return formControlContext.isRequired();\n            },\n            get disabled () {\n                return radioContext.isDisabled();\n            },\n            get readonly () {\n                return formControlContext.isReadOnly();\n            },\n            get style () {\n                return {\n                    ...visuallyHiddenStyles,\n                    ...local.style\n                };\n            },\n            get [\"aria-labelledby\"] () {\n                return ariaLabelledBy();\n            },\n            get [\"aria-describedby\"] () {\n                return ariaDescribedBy();\n            }\n        }, ()=>radioContext.dataset(), others), false, false);\n        return _el$;\n    })();\n}\n_s47(RadioGroupItemInput, \"4BgCVUVSkIAtDzIuno+U3lr1r2A=\", false, function() {\n    return [\n        useFormControlContext,\n        useRadioGroupContext,\n        useRadioGroupItemContext\n    ];\n});\n_c38 = RadioGroupItemInput;\nvar _tmpl$$6 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<label>\");\nfunction RadioGroupItemLabel(props) {\n    _s48();\n    const context = useRadioGroupItemContext();\n    props = mergeDefaultProps({\n        id: context.generateId(\"label\")\n    }, props);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(context.registerLabel(props.id)));\n    return (()=>{\n        const _el$ = _tmpl$$6();\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.spread)(_el$, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n            get [\"for\"] () {\n                return context.inputId();\n            }\n        }, ()=>context.dataset(), props), false, false);\n        return _el$;\n    })();\n}\n_s48(RadioGroupItemLabel, \"qtY0hGLjM1hIv5IBZbHvE+h7XOw=\", false, function() {\n    return [\n        useRadioGroupItemContext\n    ];\n});\n_c39 = RadioGroupItemLabel;\nfunction RadioGroupLabel(props) {\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(FormControlLabel, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n        as: \"span\"\n    }, props));\n}\n_c40 = RadioGroupLabel;\nfunction RadioGroupRoot(props) {\n    let ref;\n    const defaultId = \"radiogroup-\".concat((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)());\n    props = mergeDefaultProps({\n        id: defaultId,\n        orientation: \"vertical\"\n    }, props);\n    const [local, formControlProps, others] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.splitProps)(props, [\n        \"ref\",\n        \"value\",\n        \"defaultValue\",\n        \"onChange\",\n        \"orientation\",\n        \"aria-labelledby\",\n        \"aria-describedby\"\n    ], FORM_CONTROL_PROP_NAMES);\n    const [selected, setSelected] = createControllableSignal({\n        value: ()=>local.value,\n        defaultValue: ()=>local.defaultValue,\n        onChange: (value)=>{\n            var _local_onChange;\n            return (_local_onChange = local.onChange) === null || _local_onChange === void 0 ? void 0 : _local_onChange.call(local, value);\n        }\n    });\n    const { formControlContext } = createFormControl(formControlProps);\n    createFormResetListener(()=>ref, ()=>{\n        var _local_defaultValue;\n        return setSelected((_local_defaultValue = local.defaultValue) !== null && _local_defaultValue !== void 0 ? _local_defaultValue : \"\");\n    });\n    const ariaLabelledBy = ()=>{\n        return formControlContext.getAriaLabelledBy(access(formControlProps.id), others[\"aria-label\"], local[\"aria-labelledby\"]);\n    };\n    const ariaDescribedBy = ()=>{\n        return formControlContext.getAriaDescribedBy(local[\"aria-describedby\"]);\n    };\n    const isSelectedValue = (value)=>{\n        return value === selected();\n    };\n    const context = {\n        ariaDescribedBy,\n        isSelectedValue,\n        setSelectedValue: (value)=>{\n            if (formControlContext.isReadOnly() || formControlContext.isDisabled()) {\n                return;\n            }\n            setSelected(value);\n            ref === null || ref === void 0 ? void 0 : ref.querySelectorAll(\"[type='radio']\").forEach((el)=>{\n                const radio = el;\n                radio.checked = isSelectedValue(radio.value);\n            });\n        }\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(FormControlContext.Provider, {\n        value: formControlContext,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(RadioGroupContext.Provider, {\n                value: context,\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Polymorphic, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n                        as: \"div\",\n                        ref (r$) {\n                            const _ref$ = mergeRefs((el)=>ref = el, local.ref);\n                            typeof _ref$ === \"function\" && _ref$(r$);\n                        },\n                        role: \"radiogroup\",\n                        get id () {\n                            return access(formControlProps.id);\n                        },\n                        get [\"aria-invalid\"] () {\n                            return formControlContext.validationState() === \"invalid\" || void 0;\n                        },\n                        get [\"aria-required\"] () {\n                            return formControlContext.isRequired() || void 0;\n                        },\n                        get [\"aria-disabled\"] () {\n                            return formControlContext.isDisabled() || void 0;\n                        },\n                        get [\"aria-readonly\"] () {\n                            return formControlContext.isReadOnly() || void 0;\n                        },\n                        get [\"aria-orientation\"] () {\n                            return local.orientation;\n                        },\n                        get [\"aria-labelledby\"] () {\n                            return ariaLabelledBy();\n                        },\n                        get [\"aria-describedby\"] () {\n                            return ariaDescribedBy();\n                        }\n                    }, ()=>formControlContext.dataset(), others));\n                }\n            });\n        }\n    });\n}\n_c41 = RadioGroupRoot;\nvar index$9 = /* @__PURE__ */ Object.freeze({\n    __proto__: null,\n    Description: FormControlDescription,\n    ErrorMessage: FormControlErrorMessage,\n    Item: RadioGroupItem,\n    ItemControl: RadioGroupItemControl,\n    ItemDescription: RadioGroupItemDescription,\n    ItemIndicator: RadioGroupItemIndicator,\n    ItemInput: RadioGroupItemInput,\n    ItemLabel: RadioGroupItemLabel,\n    Label: RadioGroupLabel,\n    Root: RadioGroupRoot\n});\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n    \"focusin\",\n    \"focusout\",\n    \"pointermove\"\n]);\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n    \"keydown\",\n    \"pointerdown\",\n    \"pointermove\",\n    \"pointerup\"\n]);\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n// src/theme.ts\nvar tokens = {\n    colors: {\n        inherit: \"inherit\",\n        current: \"currentColor\",\n        transparent: \"transparent\",\n        black: \"#000000\",\n        white: \"#ffffff\",\n        neutral: {\n            50: \"#f9fafb\",\n            100: \"#f2f4f7\",\n            200: \"#eaecf0\",\n            300: \"#d0d5dd\",\n            400: \"#98a2b3\",\n            500: \"#667085\",\n            600: \"#475467\",\n            700: \"#344054\",\n            800: \"#1d2939\",\n            900: \"#101828\"\n        },\n        darkGray: {\n            50: \"#525c7a\",\n            100: \"#49536e\",\n            200: \"#414962\",\n            300: \"#394056\",\n            400: \"#313749\",\n            500: \"#292e3d\",\n            600: \"#212530\",\n            700: \"#191c24\",\n            800: \"#111318\",\n            900: \"#0b0d10\"\n        },\n        gray: {\n            50: \"#f9fafb\",\n            100: \"#f2f4f7\",\n            200: \"#eaecf0\",\n            300: \"#d0d5dd\",\n            400: \"#98a2b3\",\n            500: \"#667085\",\n            600: \"#475467\",\n            700: \"#344054\",\n            800: \"#1d2939\",\n            900: \"#101828\"\n        },\n        blue: {\n            25: \"#F5FAFF\",\n            50: \"#EFF8FF\",\n            100: \"#D1E9FF\",\n            200: \"#B2DDFF\",\n            300: \"#84CAFF\",\n            400: \"#53B1FD\",\n            500: \"#2E90FA\",\n            600: \"#1570EF\",\n            700: \"#175CD3\",\n            800: \"#1849A9\",\n            900: \"#194185\"\n        },\n        green: {\n            25: \"#F6FEF9\",\n            50: \"#ECFDF3\",\n            100: \"#D1FADF\",\n            200: \"#A6F4C5\",\n            300: \"#6CE9A6\",\n            400: \"#32D583\",\n            500: \"#12B76A\",\n            600: \"#039855\",\n            700: \"#027A48\",\n            800: \"#05603A\",\n            900: \"#054F31\"\n        },\n        red: {\n            50: \"#fef2f2\",\n            100: \"#fee2e2\",\n            200: \"#fecaca\",\n            300: \"#fca5a5\",\n            400: \"#f87171\",\n            500: \"#ef4444\",\n            600: \"#dc2626\",\n            700: \"#b91c1c\",\n            800: \"#991b1b\",\n            900: \"#7f1d1d\",\n            950: \"#450a0a\"\n        },\n        yellow: {\n            25: \"#FFFCF5\",\n            50: \"#FFFAEB\",\n            100: \"#FEF0C7\",\n            200: \"#FEDF89\",\n            300: \"#FEC84B\",\n            400: \"#FDB022\",\n            500: \"#F79009\",\n            600: \"#DC6803\",\n            700: \"#B54708\",\n            800: \"#93370D\",\n            900: \"#7A2E0E\"\n        },\n        purple: {\n            25: \"#FAFAFF\",\n            50: \"#F4F3FF\",\n            100: \"#EBE9FE\",\n            200: \"#D9D6FE\",\n            300: \"#BDB4FE\",\n            400: \"#9B8AFB\",\n            500: \"#7A5AF8\",\n            600: \"#6938EF\",\n            700: \"#5925DC\",\n            800: \"#4A1FB8\",\n            900: \"#3E1C96\"\n        },\n        teal: {\n            25: \"#F6FEFC\",\n            50: \"#F0FDF9\",\n            100: \"#CCFBEF\",\n            200: \"#99F6E0\",\n            300: \"#5FE9D0\",\n            400: \"#2ED3B7\",\n            500: \"#15B79E\",\n            600: \"#0E9384\",\n            700: \"#107569\",\n            800: \"#125D56\",\n            900: \"#134E48\"\n        },\n        pink: {\n            25: \"#fdf2f8\",\n            50: \"#fce7f3\",\n            100: \"#fbcfe8\",\n            200: \"#f9a8d4\",\n            300: \"#f472b6\",\n            400: \"#ec4899\",\n            500: \"#db2777\",\n            600: \"#be185d\",\n            700: \"#9d174d\",\n            800: \"#831843\",\n            900: \"#500724\"\n        },\n        cyan: {\n            25: \"#ecfeff\",\n            50: \"#cffafe\",\n            100: \"#a5f3fc\",\n            200: \"#67e8f9\",\n            300: \"#22d3ee\",\n            400: \"#06b6d4\",\n            500: \"#0891b2\",\n            600: \"#0e7490\",\n            700: \"#155e75\",\n            800: \"#164e63\",\n            900: \"#083344\"\n        }\n    },\n    alpha: {\n        100: \"ff\",\n        90: \"e5\",\n        80: \"cc\",\n        70: \"b3\",\n        60: \"99\",\n        50: \"80\",\n        40: \"66\",\n        30: \"4d\",\n        20: \"33\",\n        10: \"1a\",\n        0: \"00\"\n    },\n    font: {\n        size: {\n            \"2xs\": \"calc(var(--tsqd-font-size) * 0.625)\",\n            xs: \"calc(var(--tsqd-font-size) * 0.75)\",\n            sm: \"calc(var(--tsqd-font-size) * 0.875)\",\n            md: \"var(--tsqd-font-size)\",\n            lg: \"calc(var(--tsqd-font-size) * 1.125)\",\n            xl: \"calc(var(--tsqd-font-size) * 1.25)\",\n            \"2xl\": \"calc(var(--tsqd-font-size) * 1.5)\",\n            \"3xl\": \"calc(var(--tsqd-font-size) * 1.875)\",\n            \"4xl\": \"calc(var(--tsqd-font-size) * 2.25)\",\n            \"5xl\": \"calc(var(--tsqd-font-size) * 3)\",\n            \"6xl\": \"calc(var(--tsqd-font-size) * 3.75)\",\n            \"7xl\": \"calc(var(--tsqd-font-size) * 4.5)\",\n            \"8xl\": \"calc(var(--tsqd-font-size) * 6)\",\n            \"9xl\": \"calc(var(--tsqd-font-size) * 8)\"\n        },\n        lineHeight: {\n            xs: \"calc(var(--tsqd-font-size) * 1)\",\n            sm: \"calc(var(--tsqd-font-size) * 1.25)\",\n            md: \"calc(var(--tsqd-font-size) * 1.5)\",\n            lg: \"calc(var(--tsqd-font-size) * 1.75)\",\n            xl: \"calc(var(--tsqd-font-size) * 2)\",\n            \"2xl\": \"calc(var(--tsqd-font-size) * 2.25)\",\n            \"3xl\": \"calc(var(--tsqd-font-size) * 2.5)\",\n            \"4xl\": \"calc(var(--tsqd-font-size) * 2.75)\",\n            \"5xl\": \"calc(var(--tsqd-font-size) * 3)\",\n            \"6xl\": \"calc(var(--tsqd-font-size) * 3.25)\",\n            \"7xl\": \"calc(var(--tsqd-font-size) * 3.5)\",\n            \"8xl\": \"calc(var(--tsqd-font-size) * 3.75)\",\n            \"9xl\": \"calc(var(--tsqd-font-size) * 4)\"\n        },\n        weight: {\n            thin: \"100\",\n            extralight: \"200\",\n            light: \"300\",\n            normal: \"400\",\n            medium: \"500\",\n            semibold: \"600\",\n            bold: \"700\",\n            extrabold: \"800\",\n            black: \"900\"\n        }\n    },\n    breakpoints: {\n        xs: \"320px\",\n        sm: \"640px\",\n        md: \"768px\",\n        lg: \"1024px\",\n        xl: \"1280px\",\n        \"2xl\": \"1536px\"\n    },\n    border: {\n        radius: {\n            none: \"0px\",\n            xs: \"calc(var(--tsqd-font-size) * 0.125)\",\n            sm: \"calc(var(--tsqd-font-size) * 0.25)\",\n            md: \"calc(var(--tsqd-font-size) * 0.375)\",\n            lg: \"calc(var(--tsqd-font-size) * 0.5)\",\n            xl: \"calc(var(--tsqd-font-size) * 0.75)\",\n            \"2xl\": \"calc(var(--tsqd-font-size) * 1)\",\n            \"3xl\": \"calc(var(--tsqd-font-size) * 1.5)\",\n            full: \"9999px\"\n        }\n    },\n    size: {\n        0: \"0px\",\n        0.25: \"calc(var(--tsqd-font-size) * 0.0625)\",\n        0.5: \"calc(var(--tsqd-font-size) * 0.125)\",\n        1: \"calc(var(--tsqd-font-size) * 0.25)\",\n        1.5: \"calc(var(--tsqd-font-size) * 0.375)\",\n        2: \"calc(var(--tsqd-font-size) * 0.5)\",\n        2.5: \"calc(var(--tsqd-font-size) * 0.625)\",\n        3: \"calc(var(--tsqd-font-size) * 0.75)\",\n        3.5: \"calc(var(--tsqd-font-size) * 0.875)\",\n        4: \"calc(var(--tsqd-font-size) * 1)\",\n        4.5: \"calc(var(--tsqd-font-size) * 1.125)\",\n        5: \"calc(var(--tsqd-font-size) * 1.25)\",\n        5.5: \"calc(var(--tsqd-font-size) * 1.375)\",\n        6: \"calc(var(--tsqd-font-size) * 1.5)\",\n        6.5: \"calc(var(--tsqd-font-size) * 1.625)\",\n        7: \"calc(var(--tsqd-font-size) * 1.75)\",\n        8: \"calc(var(--tsqd-font-size) * 2)\",\n        9: \"calc(var(--tsqd-font-size) * 2.25)\",\n        10: \"calc(var(--tsqd-font-size) * 2.5)\",\n        11: \"calc(var(--tsqd-font-size) * 2.75)\",\n        12: \"calc(var(--tsqd-font-size) * 3)\",\n        14: \"calc(var(--tsqd-font-size) * 3.5)\",\n        16: \"calc(var(--tsqd-font-size) * 4)\",\n        20: \"calc(var(--tsqd-font-size) * 5)\",\n        24: \"calc(var(--tsqd-font-size) * 6)\",\n        28: \"calc(var(--tsqd-font-size) * 7)\",\n        32: \"calc(var(--tsqd-font-size) * 8)\",\n        36: \"calc(var(--tsqd-font-size) * 9)\",\n        40: \"calc(var(--tsqd-font-size) * 10)\",\n        44: \"calc(var(--tsqd-font-size) * 11)\",\n        48: \"calc(var(--tsqd-font-size) * 12)\",\n        52: \"calc(var(--tsqd-font-size) * 13)\",\n        56: \"calc(var(--tsqd-font-size) * 14)\",\n        60: \"calc(var(--tsqd-font-size) * 15)\",\n        64: \"calc(var(--tsqd-font-size) * 16)\",\n        72: \"calc(var(--tsqd-font-size) * 18)\",\n        80: \"calc(var(--tsqd-font-size) * 20)\",\n        96: \"calc(var(--tsqd-font-size) * 24)\"\n    },\n    shadow: {\n        xs: function() {\n            let _ = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 1px 2px 0 rgb(0 0 0 / 0.05)\";\n        },\n        sm: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 1px 3px 0 \".concat(color, \", 0 1px 2px -1px \").concat(color);\n        },\n        md: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 4px 6px -1px \".concat(color, \", 0 2px 4px -2px \").concat(color);\n        },\n        lg: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 10px 15px -3px \".concat(color, \", 0 4px 6px -4px \").concat(color);\n        },\n        xl: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.1)\";\n            return \"0 20px 25px -5px \".concat(color, \", 0 8px 10px -6px \").concat(color);\n        },\n        \"2xl\": function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.25)\";\n            return \"0 25px 50px -12px \".concat(color);\n        },\n        inner: function() {\n            let color = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"rgb(0 0 0 / 0.05)\";\n            return \"inset 0 2px 4px 0 \".concat(color);\n        },\n        none: ()=>\"none\"\n    },\n    zIndices: {\n        hide: -1,\n        auto: \"auto\",\n        base: 0,\n        docked: 10,\n        dropdown: 1e3,\n        sticky: 1100,\n        banner: 1200,\n        overlay: 1300,\n        modal: 1400,\n        popover: 1500,\n        skipLink: 1600,\n        toast: 1700,\n        tooltip: 1800\n    }\n};\n// src/icons/index.tsx\nvar _tmpl$ = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 14 14\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M13 13L9.00007 9M10.3333 5.66667C10.3333 8.244 8.244 10.3333 5.66667 10.3333C3.08934 10.3333 1 8.244 1 5.66667C1 3.08934 3.08934 1 5.66667 1C8.244 1 10.3333 3.08934 10.3333 5.66667Z\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$2 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9 3H15M3 6H21M19 6L18.2987 16.5193C18.1935 18.0975 18.1409 18.8867 17.8 19.485C17.4999 20.0118 17.0472 20.4353 16.5017 20.6997C15.882 21 15.0911 21 13.5093 21H10.4907C8.90891 21 8.11803 21 7.49834 20.6997C6.95276 20.4353 6.50009 20.0118 6.19998 19.485C5.85911 18.8867 5.8065 18.0975 5.70129 16.5193L5 6M10 10.5V15.5M14 10.5V15.5\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$3 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=10 height=6 viewBox=\"0 0 10 6\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M1 1L5 5L9 1\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$4 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=12 height=12 viewBox=\"0 0 16 16\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M8 13.3333V2.66667M8 2.66667L4 6.66667M8 2.66667L12 6.66667\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$5 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=12 height=12 viewBox=\"0 0 16 16\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M8 2.66667V13.3333M8 13.3333L4 9.33333M8 13.3333L12 9.33333\"stroke=currentColor stroke-width=1.66667 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$6 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M12 2v2m0 16v2M4 12H2m4.314-5.686L4.9 4.9m12.786 1.414L19.1 4.9M6.314 17.69 4.9 19.104m12.786-1.414 1.414 1.414M22 12h-2m-3 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$7 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M22 15.844a10.424 10.424 0 0 1-4.306.925c-5.779 0-10.463-4.684-10.463-10.462 0-1.536.33-2.994.925-4.307A10.464 10.464 0 0 0 2 11.538C2 17.316 6.684 22 12.462 22c4.243 0 7.896-2.526 9.538-6.156Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$8 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=12 width=12 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M8 21h8m-4-4v4m-5.2-4h10.4c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.311-1.311C22 14.72 22 13.88 22 12.2V7.8c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311C19.72 3 18.88 3 17.2 3H6.8c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.311 1.311C2 5.28 2 6.12 2 7.8v4.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311C4.28 17 5.12 17 6.8 17Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$9 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg stroke=currentColor fill=currentColor stroke-width=0 viewBox=\"0 0 24 24\"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d=\"M0 0h24v24H0z\"></path><path d=\"M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z\">');\nvar _tmpl$10 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg stroke-width=0 viewBox=\"0 0 24 24\"height=1em width=1em xmlns=http://www.w3.org/2000/svg><path fill=none d=\"M24 .01c0-.01 0-.01 0 0L0 0v24h24V.01zM0 0h24v24H0V0zm0 0h24v24H0V0z\"></path><path d=\"M22.99 9C19.15 5.16 13.8 3.76 8.84 4.78l2.52 2.52c3.47-.17 6.99 1.05 9.63 3.7l2-2zm-4 4a9.793 9.793 0 00-4.49-2.56l3.53 3.53.96-.97zM2 3.05L5.07 6.1C3.6 6.82 2.22 7.78 1 9l1.99 2c1.24-1.24 2.67-2.16 4.2-2.77l2.24 2.24A9.684 9.684 0 005 13v.01L6.99 15a7.042 7.042 0 014.92-2.06L18.98 20l1.27-1.26L3.29 1.79 2 3.05zM9 17l3 3 3-3a4.237 4.237 0 00-6 0z\">');\nvar _tmpl$11 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9.3951 19.3711L9.97955 20.6856C10.1533 21.0768 10.4368 21.4093 10.7958 21.6426C11.1547 21.8759 11.5737 22.0001 12.0018 22C12.4299 22.0001 12.8488 21.8759 13.2078 21.6426C13.5667 21.4093 13.8503 21.0768 14.024 20.6856L14.6084 19.3711C14.8165 18.9047 15.1664 18.5159 15.6084 18.26C16.0532 18.0034 16.5678 17.8941 17.0784 17.9478L18.5084 18.1C18.9341 18.145 19.3637 18.0656 19.7451 17.8713C20.1265 17.6771 20.4434 17.3763 20.6573 17.0056C20.8715 16.635 20.9735 16.2103 20.9511 15.7829C20.9286 15.3555 20.7825 14.9438 20.5307 14.5978L19.684 13.4344C19.3825 13.0171 19.2214 12.5148 19.224 12C19.2239 11.4866 19.3865 10.9864 19.6884 10.5711L20.5351 9.40778C20.787 9.06175 20.933 8.65007 20.9555 8.22267C20.978 7.79528 20.8759 7.37054 20.6618 7C20.4479 6.62923 20.131 6.32849 19.7496 6.13423C19.3681 5.93997 18.9386 5.86053 18.5129 5.90556L17.0829 6.05778C16.5722 6.11141 16.0577 6.00212 15.6129 5.74556C15.17 5.48825 14.82 5.09736 14.6129 4.62889L14.024 3.31444C13.8503 2.92317 13.5667 2.59072 13.2078 2.3574C12.8488 2.12408 12.4299 1.99993 12.0018 2C11.5737 1.99993 11.1547 2.12408 10.7958 2.3574C10.4368 2.59072 10.1533 2.92317 9.97955 3.31444L9.3951 4.62889C9.18803 5.09736 8.83798 5.48825 8.3951 5.74556C7.95032 6.00212 7.43577 6.11141 6.9251 6.05778L5.49066 5.90556C5.06499 5.86053 4.6354 5.93997 4.25397 6.13423C3.87255 6.32849 3.55567 6.62923 3.34177 7C3.12759 7.37054 3.02555 7.79528 3.04804 8.22267C3.07052 8.65007 3.21656 9.06175 3.46844 9.40778L4.3151 10.5711C4.61704 10.9864 4.77964 11.4866 4.77955 12C4.77964 12.5134 4.61704 13.0137 4.3151 13.4289L3.46844 14.5922C3.21656 14.9382 3.07052 15.3499 3.04804 15.7773C3.02555 16.2047 3.12759 16.6295 3.34177 17C3.55589 17.3706 3.8728 17.6712 4.25417 17.8654C4.63554 18.0596 5.06502 18.1392 5.49066 18.0944L6.92066 17.9422C7.43133 17.8886 7.94587 17.9979 8.39066 18.2544C8.83519 18.511 9.18687 18.902 9.3951 19.3711Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><path d=\"M12 15C13.6568 15 15 13.6569 15 12C15 10.3431 13.6568 9 12 9C10.3431 9 8.99998 10.3431 8.99998 12C8.99998 13.6569 10.3431 15 12 15Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$12 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M16 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V8M11.5 12.5L17 7M17 7H12M17 7V12M6.2 21H8.8C9.9201 21 10.4802 21 10.908 20.782C11.2843 20.5903 11.5903 20.2843 11.782 19.908C12 19.4802 12 18.9201 12 17.8V15.2C12 14.0799 12 13.5198 11.782 13.092C11.5903 12.7157 11.2843 12.4097 10.908 12.218C10.4802 12 9.92011 12 8.8 12H6.2C5.0799 12 4.51984 12 4.09202 12.218C3.71569 12.4097 3.40973 12.7157 3.21799 13.092C3 13.5198 3 14.0799 3 15.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$13 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path class=copier d=\"M8 8V5.2C8 4.0799 8 3.51984 8.21799 3.09202C8.40973 2.71569 8.71569 2.40973 9.09202 2.21799C9.51984 2 10.0799 2 11.2 2H18.8C19.9201 2 20.4802 2 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C22 3.51984 22 4.0799 22 5.2V12.8C22 13.9201 22 14.4802 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.4802 16 19.9201 16 18.8 16H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z\"stroke-width=2 stroke-linecap=round stroke-linejoin=round stroke=currentColor>');\nvar _tmpl$14 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M7.5 12L10.5 15L16.5 9M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z\"stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$15 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9 9L15 15M15 9L9 15M7.8 21H16.2C17.8802 21 18.7202 21 19.362 20.673C19.9265 20.3854 20.3854 19.9265 20.673 19.362C21 18.7202 21 17.8802 21 16.2V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V16.2C3 17.8802 3 18.7202 3.32698 19.362C3.6146 19.9265 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21Z\"stroke=#F04438 stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$16 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=24 height=24 viewBox=\"0 0 24 24\"fill=none stroke=currentColor stroke-width=2 xmlns=http://www.w3.org/2000/svg><rect class=list width=20 height=20 y=2 x=2 rx=2></rect><line class=list-item y1=7 y2=7 x1=6 x2=18></line><line class=list-item y2=12 y1=12 x1=6 x2=18></line><line class=list-item y1=17 y2=17 x1=6 x2=18>');\nvar _tmpl$17 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg viewBox=\"0 0 24 24\"height=20 width=20 fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M3 7.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C5.28 3 6.12 3 7.8 3h8.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C21 5.28 21 6.12 21 7.8v8.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C18.72 21 17.88 21 16.2 21H7.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C3 18.72 3 17.88 3 16.2V7.8Z\"stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$18 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$19 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round></path><animateTransform attributeName=transform attributeType=XML type=rotate from=0 to=360 dur=2s repeatCount=indefinite>');\nvar _tmpl$20 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$21 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg width=14 height=14 viewBox=\"0 0 24 24\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M9.5 15V9M14.5 15V9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$22 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<svg version=1.0 viewBox=\"0 0 633 633\"><linearGradient x1=-666.45 x2=-666.45 y1=163.28 y2=163.99 gradientTransform=\"matrix(633 0 0 633 422177 -103358)\"gradientUnits=userSpaceOnUse><stop stop-color=#6BDAFF offset=0></stop><stop stop-color=#F9FFB5 offset=.32></stop><stop stop-color=#FFA770 offset=.71></stop><stop stop-color=#FF7373 offset=1></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5></circle><defs><filter x=-137.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=-137.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=316.5 y=412 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=316.5 y=412 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=610.5 rx=214.5 ry=186 fill=#015064 stroke=#00CFE2 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=-137.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=316.5 y=450 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=316.5 y=450 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=648.5 rx=214.5 ry=186 fill=#015064 stroke=#00A8B8 stroke-width=25></ellipse></g><defs><filter x=-137.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=-137.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=89.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=316.5 y=486 width=454 height=396.9 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=316.5 y=486 width=454 height=396.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><ellipse cx=543.5 cy=684.5 rx=214.5 ry=186 fill=#015064 stroke=#007782 stroke-width=25></ellipse></g><defs><filter x=272.2 y=308 width=176.9 height=129.3 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=272.2 y=308 width=176.9 height=129.3 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><line x1=436 x2=431 y1=403.2 y2=431.8 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=291 x2=280 y1=341.5 y2=403.5 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><line x1=332.9 x2=328.6 y1=384.1 y2=411.2 fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11></line><linearGradient x1=-670.75 x2=-671.59 y1=164.4 y2=164.49 gradientTransform=\"matrix(-184.16 -32.472 -11.461 64.997 -121359 -32126)\"gradientUnits=userSpaceOnUse><stop stop-color=#EE2700 offset=0></stop><stop stop-color=#FF008E offset=1></stop></linearGradient><path d=\"m344.1 363 97.7 17.2c5.8 2.1 8.2 6.1 7.1 12.1s-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1 0.8-12.8s8.3-4.4 13.7-2.1l55.2 53.6z\"clip-rule=evenodd fill-rule=evenodd></path><line x1=428.2 x2=429.1 y1=384.5 y2=378 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=395.2 x2=396.1 y1=379.5 y2=373 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=362.2 x2=363.1 y1=373.5 y2=367.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=324.2 x2=328.4 y1=351.3 y2=347.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line><line x1=303.2 x2=307.4 y1=331.3 y2=327.4 fill=none stroke=#fff stroke-linecap=round stroke-linejoin=bevel stroke-width=7></line></g><defs><filter x=73.2 y=113.8 width=280.6 height=317.4 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=73.2 y=113.8 width=280.6 height=317.4 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-672.16 x2=-672.16 y1=165.03 y2=166.03 gradientTransform=\"matrix(-100.18 48.861 97.976 200.88 -83342 -93.059)\"gradientUnits=userSpaceOnUse><stop stop-color=#A17500 offset=0></stop><stop stop-color=#5D2100 offset=1></stop></linearGradient><path d=\"m192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.1-3 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6s-10.8-51.9-22.1-99.6l-25.3 4.6\"clip-rule=evenodd fill-rule=evenodd></path><g stroke=#2F8A00><linearGradient x1=-660.23 x2=-660.23 y1=166.72 y2=167.72 gradientTransform=\"matrix(92.683 4.8573 -2.0259 38.657 61680 -3088.6)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-661.36 x2=-661.36 y1=164.18 y2=165.18 gradientTransform=\"matrix(110 5.7648 -6.3599 121.35 73933 -15933)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.4 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20.2 49.6-53.2 49.6-53.2z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.79 x2=-656.79 y1=165.15 y2=166.15 gradientTransform=\"matrix(62.954 3.2993 -3.5023 66.828 42156 -8754.1)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m195 183.9c-0.8-21.9 6-38 20.6-48.2s29.8-15.4 45.5-15.3c-6.1 21.4-14.5 35.8-25.2 43.4s-24.4 14.2-40.9 20.1z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-663.07 x2=-663.07 y1=165.44 y2=166.44 gradientTransform=\"matrix(152.47 7.9907 -3.0936 59.029 101884 -4318.7)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5c31.9-30 64.1-39.7 96.7-29s50.8 30.4 54.6 59.1c-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-662.57 x2=-662.57 y1=164.44 y2=165.44 gradientTransform=\"matrix(136.46 7.1517 -5.2163 99.533 91536 -11442)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5c35.8-7.6 65.6-0.2 89.2 22s37.7 49 42.3 80.3c-39.8-9.7-68.3-23.8-85.5-42.4s-32.5-38.5-46-59.9z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><linearGradient x1=-656.43 x2=-656.43 y1=163.86 y2=164.86 gradientTransform=\"matrix(60.866 3.1899 -8.7773 167.48 41560 -25168)\"gradientUnits=userSpaceOnUse><stop stop-color=#2F8A00 offset=0></stop><stop stop-color=#90FF57 offset=1></stop></linearGradient><path d=\"m194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6s-3.6 63.1 8.7 99.6c27.4-40.3 43.2-69.6 47.4-88s5.6-44.1 4-77.2z\"clip-rule=evenodd fill-rule=evenodd stroke-width=13></path><path d=\"m196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4s-9.5 33-11.1 45.1\"fill=none stroke-linecap=round stroke-width=8></path><path d=\"m194.9 185.7c-24.4 1.7-43.8 9-58.1 21.8s-24.7 25.4-31.3 37.8\"fill=none stroke-linecap=round stroke-width=8></path><path d=\"m204.5 176.4c29.7-6.7 52-8.4 67-5.1s26.9 8.6 35.8 15.9\"fill=none stroke-linecap=round stroke-width=8></path><path d=\"m196.5 181.4c20.3 9.9 38.2 20.5 53.9 31.9s27.4 22.1 35.1 32\"fill=none stroke-linecap=round stroke-width=8></path></g></g><defs><filter x=50.5 y=399 width=532 height=633 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=50.5 y=399 width=532 height=633 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-666.06 x2=-666.23 y1=163.36 y2=163.75 gradientTransform=\"matrix(532 0 0 633 354760 -102959)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFF400 offset=0></stop><stop stop-color=#3C8700 offset=1></stop></linearGradient><ellipse cx=316.5 cy=715.5 rx=266 ry=316.5></ellipse></g><defs><filter x=391 y=-24 width=288 height=283 filterUnits=userSpaceOnUse><feColorMatrix values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 1 0\"></feColorMatrix></filter></defs><mask x=391 y=-24 width=288 height=283 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#fff></circle></g></mask><g><linearGradient x1=-664.56 x2=-664.56 y1=163.79 y2=164.79 gradientTransform=\"matrix(227 0 0 227 151421 -37204)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFDF00 offset=0></stop><stop stop-color=#FF9D00 offset=1></stop></linearGradient><circle cx=565.5 cy=89.5 r=113.5></circle><linearGradient x1=-644.5 x2=-645.77 y1=342 y2=342 gradientTransform=\"matrix(30 0 0 1 19770 -253)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=427 x2=397 y1=89 y2=89 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-641.56 x2=-642.83 y1=196.02 y2=196.07 gradientTransform=\"matrix(26.5 0 0 5.5 17439 -1025.5)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=430.5 x2=404 y1=55.5 y2=50 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-643.73 x2=-645 y1=185.83 y2=185.9 gradientTransform=\"matrix(29 0 0 8 19107 -1361)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=431 x2=402 y1=122 y2=130 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-638.94 x2=-640.22 y1=177.09 y2=177.39 gradientTransform=\"matrix(24 0 0 13 15783 -2145)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=442 x2=418 y1=153 y2=166 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-633.42 x2=-634.7 y1=172.41 y2=173.31 gradientTransform=\"matrix(20 0 0 19 13137 -3096)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=464 x2=444 y1=180 y2=199 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-619.05 x2=-619.52 y1=170.82 y2=171.82 gradientTransform=\"matrix(13.83 0 0 22.85 9050 -3703.4)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=491.4 x2=477.5 y1=203 y2=225.9 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=-578.5 x2=-578.63 y1=170.31 y2=171.31 gradientTransform=\"matrix(7.5 0 0 24.5 4860 -3953)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=524.5 x2=517 y1=219.5 y2=244 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12></line><linearGradient x1=666.5 x2=666.5 y1=170.31 y2=171.31 gradientTransform=\"matrix(.5 0 0 24.5 231.5 -3944)\"gradientUnits=userSpaceOnUse><stop stop-color=#FFA400 offset=0></stop><stop stop-color=#FF5E00 offset=1></stop></linearGradient><line x1=564.5 x2=565 y1=228.5 y2=253 fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12>');\nfunction Search() {\n    return _tmpl$();\n}\n_c42 = Search;\nfunction Trash() {\n    return _tmpl$2();\n}\n_c43 = Trash;\nfunction ChevronDown() {\n    return _tmpl$3();\n}\n_c44 = ChevronDown;\nfunction ArrowUp() {\n    return _tmpl$4();\n}\n_c45 = ArrowUp;\nfunction ArrowDown() {\n    return _tmpl$5();\n}\n_c46 = ArrowDown;\nfunction ArrowLeft() {\n    return (()=>{\n        const _el$6 = _tmpl$5();\n        _el$6.style.setProperty(\"transform\", \"rotate(90deg)\");\n        return _el$6;\n    })();\n}\n_c47 = ArrowLeft;\nfunction ArrowRight() {\n    return (()=>{\n        const _el$7 = _tmpl$5();\n        _el$7.style.setProperty(\"transform\", \"rotate(-90deg)\");\n        return _el$7;\n    })();\n}\n_c48 = ArrowRight;\nfunction Sun() {\n    return _tmpl$6();\n}\n_c49 = Sun;\nfunction Moon() {\n    return _tmpl$7();\n}\n_c50 = Moon;\nfunction Monitor() {\n    return _tmpl$8();\n}\n_c51 = Monitor;\nfunction Wifi() {\n    return _tmpl$9();\n}\n_c52 = Wifi;\nfunction Offline() {\n    return _tmpl$10();\n}\n_c53 = Offline;\nfunction Settings() {\n    return _tmpl$11();\n}\n_c54 = Settings;\nfunction PiPIcon() {\n    return _tmpl$12();\n}\n_c55 = PiPIcon;\nfunction Copier() {\n    return _tmpl$13();\n}\n_c56 = Copier;\nfunction CopiedCopier(props) {\n    return (()=>{\n        const _el$16 = _tmpl$14(), _el$17 = _el$16.firstChild;\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$17, \"stroke\", props.theme === \"dark\" ? \"#12B76A\" : \"#027A48\"));\n        return _el$16;\n    })();\n}\n_c57 = CopiedCopier;\nfunction ErrorCopier() {\n    return _tmpl$15();\n}\n_c58 = ErrorCopier;\nfunction List() {\n    return _tmpl$16();\n}\n_c59 = List;\nfunction Check(props) {\n    return [\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return props.checked;\n            },\n            get children () {\n                const _el$20 = _tmpl$14(), _el$21 = _el$20.firstChild;\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$21, \"stroke\", props.theme === \"dark\" ? \"#9B8AFB\" : \"#6938EF\"));\n                return _el$20;\n            }\n        }),\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return !props.checked;\n            },\n            get children () {\n                const _el$22 = _tmpl$17(), _el$23 = _el$22.firstChild;\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$23, \"stroke\", props.theme === \"dark\" ? \"#9B8AFB\" : \"#6938EF\"));\n                return _el$22;\n            }\n        })\n    ];\n}\n_c60 = Check;\nfunction CheckCircle() {\n    return _tmpl$18();\n}\n_c61 = CheckCircle;\nfunction LoadingCircle() {\n    return _tmpl$19();\n}\n_c62 = LoadingCircle;\nfunction XCircle() {\n    return _tmpl$20();\n}\n_c63 = XCircle;\nfunction PauseCircle() {\n    return _tmpl$21();\n}\n_c64 = PauseCircle;\nfunction TanstackLogo() {\n    const id = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createUniqueId)();\n    return (()=>{\n        const _el$28 = _tmpl$22(), _el$29 = _el$28.firstChild, _el$30 = _el$29.nextSibling, _el$31 = _el$30.nextSibling, _el$32 = _el$31.firstChild, _el$33 = _el$31.nextSibling, _el$34 = _el$33.firstChild, _el$35 = _el$33.nextSibling, _el$36 = _el$35.nextSibling, _el$37 = _el$36.firstChild, _el$38 = _el$36.nextSibling, _el$39 = _el$38.firstChild, _el$40 = _el$38.nextSibling, _el$41 = _el$40.nextSibling, _el$42 = _el$41.firstChild, _el$43 = _el$41.nextSibling, _el$44 = _el$43.firstChild, _el$45 = _el$43.nextSibling, _el$46 = _el$45.nextSibling, _el$47 = _el$46.firstChild, _el$48 = _el$46.nextSibling, _el$49 = _el$48.firstChild, _el$50 = _el$48.nextSibling, _el$51 = _el$50.nextSibling, _el$52 = _el$51.firstChild, _el$53 = _el$51.nextSibling, _el$54 = _el$53.firstChild, _el$55 = _el$53.nextSibling, _el$56 = _el$55.nextSibling, _el$57 = _el$56.firstChild, _el$58 = _el$56.nextSibling, _el$59 = _el$58.firstChild, _el$60 = _el$58.nextSibling, _el$61 = _el$60.nextSibling, _el$62 = _el$61.firstChild, _el$63 = _el$61.nextSibling, _el$64 = _el$63.firstChild, _el$65 = _el$63.nextSibling, _el$66 = _el$65.firstChild, _el$67 = _el$66.nextSibling, _el$68 = _el$67.nextSibling, _el$69 = _el$68.nextSibling, _el$70 = _el$69.nextSibling, _el$71 = _el$65.nextSibling, _el$72 = _el$71.firstChild, _el$73 = _el$71.nextSibling, _el$74 = _el$73.firstChild, _el$75 = _el$73.nextSibling, _el$76 = _el$75.firstChild, _el$77 = _el$76.nextSibling, _el$78 = _el$77.nextSibling, _el$79 = _el$78.firstChild, _el$80 = _el$79.nextSibling, _el$81 = _el$80.nextSibling, _el$82 = _el$81.nextSibling, _el$83 = _el$82.nextSibling, _el$84 = _el$83.nextSibling, _el$85 = _el$84.nextSibling, _el$86 = _el$85.nextSibling, _el$87 = _el$86.nextSibling, _el$88 = _el$87.nextSibling, _el$89 = _el$88.nextSibling, _el$90 = _el$89.nextSibling, _el$91 = _el$75.nextSibling, _el$92 = _el$91.firstChild, _el$93 = _el$91.nextSibling, _el$94 = _el$93.firstChild, _el$95 = _el$93.nextSibling, _el$96 = _el$95.firstChild, _el$97 = _el$96.nextSibling, _el$98 = _el$95.nextSibling, _el$99 = _el$98.firstChild, _el$100 = _el$98.nextSibling, _el$101 = _el$100.firstChild, _el$102 = _el$100.nextSibling, _el$103 = _el$102.firstChild, _el$104 = _el$103.nextSibling, _el$105 = _el$104.nextSibling, _el$106 = _el$105.nextSibling, _el$107 = _el$106.nextSibling, _el$108 = _el$107.nextSibling, _el$109 = _el$108.nextSibling, _el$110 = _el$109.nextSibling, _el$111 = _el$110.nextSibling, _el$112 = _el$111.nextSibling, _el$113 = _el$112.nextSibling, _el$114 = _el$113.nextSibling, _el$115 = _el$114.nextSibling, _el$116 = _el$115.nextSibling, _el$117 = _el$116.nextSibling, _el$118 = _el$117.nextSibling, _el$119 = _el$118.nextSibling, _el$120 = _el$119.nextSibling;\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$29, \"id\", \"a-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$30, \"fill\", \"url(#a-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$32, \"id\", \"am-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$33, \"id\", \"b-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$34, \"filter\", \"url(#am-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$35, \"mask\", \"url(#b-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$37, \"id\", \"ah-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$38, \"id\", \"k-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$39, \"filter\", \"url(#ah-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$40, \"mask\", \"url(#k-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$42, \"id\", \"ae-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$43, \"id\", \"j-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$44, \"filter\", \"url(#ae-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$45, \"mask\", \"url(#j-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$47, \"id\", \"ai-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$48, \"id\", \"i-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$49, \"filter\", \"url(#ai-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$50, \"mask\", \"url(#i-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$52, \"id\", \"aj-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$53, \"id\", \"h-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$54, \"filter\", \"url(#aj-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$55, \"mask\", \"url(#h-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$57, \"id\", \"ag-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$58, \"id\", \"g-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$59, \"filter\", \"url(#ag-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$60, \"mask\", \"url(#g-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$62, \"id\", \"af-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$63, \"id\", \"f-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$64, \"filter\", \"url(#af-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$65, \"mask\", \"url(#f-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$69, \"id\", \"m-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$70, \"fill\", \"url(#m-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$72, \"id\", \"ak-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$73, \"id\", \"e-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$74, \"filter\", \"url(#ak-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$75, \"mask\", \"url(#e-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$76, \"id\", \"n-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$77, \"fill\", \"url(#n-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$79, \"id\", \"r-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$80, \"fill\", \"url(#r-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$81, \"id\", \"s-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$82, \"fill\", \"url(#s-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$83, \"id\", \"q-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$84, \"fill\", \"url(#q-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$85, \"id\", \"p-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$86, \"fill\", \"url(#p-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$87, \"id\", \"o-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$88, \"fill\", \"url(#o-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$89, \"id\", \"l-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$90, \"fill\", \"url(#l-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$92, \"id\", \"al-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$93, \"id\", \"d-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$94, \"filter\", \"url(#al-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$95, \"mask\", \"url(#d-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$96, \"id\", \"u-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$97, \"fill\", \"url(#u-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$99, \"id\", \"ad-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$100, \"id\", \"c-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$101, \"filter\", \"url(#ad-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$102, \"mask\", \"url(#c-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$103, \"id\", \"t-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$104, \"fill\", \"url(#t-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$105, \"id\", \"v-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$106, \"stroke\", \"url(#v-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$107, \"id\", \"aa-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$108, \"stroke\", \"url(#aa-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$109, \"id\", \"w-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$110, \"stroke\", \"url(#w-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$111, \"id\", \"ac-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$112, \"stroke\", \"url(#ac-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$113, \"id\", \"ab-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$114, \"stroke\", \"url(#ab-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$115, \"id\", \"y-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$116, \"stroke\", \"url(#y-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$117, \"id\", \"x-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$118, \"stroke\", \"url(#x-\".concat(id, \")\"));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$119, \"id\", \"z-\".concat(id));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$120, \"stroke\", \"url(#z-\".concat(id, \")\"));\n        return _el$28;\n    })();\n}\n_c65 = TanstackLogo;\n// src/Context.ts\nvar QueryDevtoolsContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    client: void 0,\n    onlineManager: void 0,\n    queryFlavor: \"\",\n    version: \"\"\n});\nfunction useQueryDevtoolsContext() {\n    _s49();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(QueryDevtoolsContext);\n}\n_s49(useQueryDevtoolsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar ThemeContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)(_c66 = ()=>\"dark\");\n_c67 = ThemeContext;\nfunction useTheme() {\n    _s50();\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\n}\n_s50(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// src/Explorer.tsx\nvar _tmpl$23 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<span><svg width=16 height=16 viewBox=\"0 0 16 16\"fill=none xmlns=http://www.w3.org/2000/svg><path d=\"M6 12L10 8L6 4\"stroke-width=2 stroke-linecap=round stroke-linejoin=round>');\nvar _tmpl$24 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Copy object to clipboard\">');\nvar _tmpl$32 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Remove all items\"aria-label=\"Remove all items\">');\nvar _tmpl$42 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Delete item\"aria-label=\"Delete item\">');\nvar _tmpl$52 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button title=\"Toggle value\"aria-label=\"Toggle value\">');\nvar _tmpl$62 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div>\");\nvar _tmpl$72 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><button> <span></span> <span> \");\nvar _tmpl$82 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<input>\");\nvar _tmpl$92 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>\");\nvar _tmpl$102 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><span>:\");\nvar _tmpl$112 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><div><button> [<!>...<!>]\");\nfunction chunkArray(array, size2) {\n    if (size2 < 1) return [];\n    let i2 = 0;\n    const result = [];\n    while(i2 < array.length){\n        result.push(array.slice(i2, i2 + size2));\n        i2 = i2 + size2;\n    }\n    return result;\n}\nvar Expander = (props)=>{\n    _s51();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles : lightStyles;\n    });\n    return (()=>{\n        const _el$ = _tmpl$23();\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$, clsx(styles().expander, u(_templateObject(), props.expanded ? 90 : 0), props.expanded && u(_templateObject1()))));\n        return _el$;\n    })();\n};\n_s51(Expander, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c68 = Expander;\nvar CopyButton = (props)=>{\n    _s52();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles : lightStyles;\n    });\n    const [copyState, setCopyState] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(\"NoCopy\");\n    return (()=>{\n        const _el$2 = _tmpl$24();\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.addEventListener)(_el$2, \"click\", copyState() === \"NoCopy\" ? ()=>{\n            navigator.clipboard.writeText((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(props.value)).then(()=>{\n                setCopyState(\"SuccessCopy\");\n                setTimeout(()=>{\n                    setCopyState(\"NoCopy\");\n                }, 1500);\n            }, (err)=>{\n                console.error(\"Failed to copy: \", err);\n                setCopyState(\"ErrorCopy\");\n                setTimeout(()=>{\n                    setCopyState(\"NoCopy\");\n                }, 1500);\n            });\n        } : void 0, true);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$2, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Switch, {\n            get children () {\n                return [\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Match, {\n                        get when () {\n                            return copyState() === \"NoCopy\";\n                        },\n                        get children () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Copier, {});\n                        }\n                    }),\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Match, {\n                        get when () {\n                            return copyState() === \"SuccessCopy\";\n                        },\n                        get children () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(CopiedCopier, {\n                                get theme () {\n                                    return theme();\n                                }\n                            });\n                        }\n                    }),\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Match, {\n                        get when () {\n                            return copyState() === \"ErrorCopy\";\n                        },\n                        get children () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ErrorCopier, {});\n                        }\n                    })\n                ];\n            }\n        }));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n            const _v$ = styles().actionButton, _v$2 = \"\".concat(copyState() === \"NoCopy\" ? \"Copy object to clipboard\" : copyState() === \"SuccessCopy\" ? \"Object copied to clipboard\" : \"Error copying object to clipboard\");\n            _v$ !== _p$._v$ && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$2, _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$2, \"aria-label\", _p$._v$2 = _v$2);\n            return _p$;\n        }, {\n            _v$: void 0,\n            _v$2: void 0\n        });\n        return _el$2;\n    })();\n};\n_s52(CopyButton, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c69 = CopyButton;\nvar ClearArrayButton = (props)=>{\n    _s53();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles : lightStyles;\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    return (()=>{\n        const _el$3 = _tmpl$32();\n        _el$3.$$click = ()=>{\n            const oldData = props.activeQuery.state.data;\n            const newData = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.updateNestedDataByPath)(oldData, props.dataPath, []);\n            queryClient.setQueryData(props.activeQuery.queryKey, newData);\n        };\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$3, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(List, {}));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$3, styles().actionButton));\n        return _el$3;\n    })();\n};\n_s53(ClearArrayButton, \"G4I9cKpFG1IYYZ1odxtRaK00Ock=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext\n    ];\n});\n_c70 = ClearArrayButton;\nvar DeleteItemButton = (props)=>{\n    _s54();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles : lightStyles;\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    return (()=>{\n        const _el$4 = _tmpl$42();\n        _el$4.$$click = ()=>{\n            const oldData = props.activeQuery.state.data;\n            const newData = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.deleteNestedDataByPath)(oldData, props.dataPath);\n            queryClient.setQueryData(props.activeQuery.queryKey, newData);\n        };\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$4, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Trash, {}));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$4, clsx(styles().actionButton)));\n        return _el$4;\n    })();\n};\n_s54(DeleteItemButton, \"G4I9cKpFG1IYYZ1odxtRaK00Ock=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext\n    ];\n});\n_c71 = DeleteItemButton;\nvar ToggleValueButton = (props)=>{\n    _s55();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles : lightStyles;\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    return (()=>{\n        const _el$5 = _tmpl$52();\n        _el$5.$$click = ()=>{\n            const oldData = props.activeQuery.state.data;\n            const newData = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.updateNestedDataByPath)(oldData, props.dataPath, !props.value);\n            queryClient.setQueryData(props.activeQuery.queryKey, newData);\n        };\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$5, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Check, {\n            get theme () {\n                return theme();\n            },\n            get checked () {\n                return props.value;\n            }\n        }));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$5, clsx(styles().actionButton, u(_templateObject2(), tokens.size[3.5], tokens.size[3.5]))));\n        return _el$5;\n    })();\n};\n_s55(ToggleValueButton, \"G4I9cKpFG1IYYZ1odxtRaK00Ock=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext\n    ];\n});\n_c72 = ToggleValueButton;\nfunction isIterable(x) {\n    return Symbol.iterator in x;\n}\nfunction Explorer(props) {\n    _s56();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles : lightStyles;\n    });\n    const queryClient = useQueryDevtoolsContext().client;\n    const [expanded, setExpanded] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)((props.defaultExpanded || []).includes(props.label));\n    const toggleExpanded = ()=>setExpanded((old)=>!old);\n    const [expandedPages, setExpandedPages] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)([]);\n    const subEntries = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (Array.isArray(props.value)) {\n            return props.value.map((d, i2)=>({\n                    label: i2.toString(),\n                    value: d\n                }));\n        } else if (props.value !== null && typeof props.value === \"object\" && isIterable(props.value) && typeof props.value[Symbol.iterator] === \"function\") {\n            if (props.value instanceof Map) {\n                return Array.from(props.value, (param)=>{\n                    let [key, val] = param;\n                    return {\n                        label: key,\n                        value: val\n                    };\n                });\n            }\n            return Array.from(props.value, (val, i2)=>({\n                    label: i2.toString(),\n                    value: val\n                }));\n        } else if (typeof props.value === \"object\" && props.value !== null) {\n            return Object.entries(props.value).map((param)=>{\n                let [key, val] = param;\n                return {\n                    label: key,\n                    value: val\n                };\n            });\n        }\n        return [];\n    });\n    const type = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (Array.isArray(props.value)) {\n            return \"array\";\n        } else if (props.value !== null && typeof props.value === \"object\" && isIterable(props.value) && typeof props.value[Symbol.iterator] === \"function\") {\n            return \"Iterable\";\n        } else if (typeof props.value === \"object\" && props.value !== null) {\n            return \"object\";\n        }\n        return typeof props.value;\n    });\n    const subEntryPages = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>chunkArray(subEntries(), 100));\n    var _props_dataPath;\n    const currentDataPath = (_props_dataPath = props.dataPath) !== null && _props_dataPath !== void 0 ? _props_dataPath : [];\n    return (()=>{\n        const _el$6 = _tmpl$62();\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$6, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return subEntryPages().length;\n            },\n            get children () {\n                return [\n                    (()=>{\n                        const _el$7 = _tmpl$72(), _el$8 = _el$7.firstChild, _el$9 = _el$8.firstChild, _el$10 = _el$9.nextSibling, _el$11 = _el$10.nextSibling, _el$12 = _el$11.nextSibling, _el$13 = _el$12.firstChild;\n                        _el$8.$$click = ()=>toggleExpanded();\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$8, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Expander, {\n                            get expanded () {\n                                return expanded();\n                            }\n                        }), _el$9);\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$10, ()=>props.label);\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$12, ()=>String(type()).toLowerCase() === \"iterable\" ? \"(Iterable) \" : \"\", _el$13);\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$12, ()=>subEntries().length, _el$13);\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$12, ()=>subEntries().length > 1 ? \"items\" : \"item\", null);\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$7, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                            get when () {\n                                return props.editable;\n                            },\n                            get children () {\n                                const _el$14 = _tmpl$62();\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(CopyButton, {\n                                    get value () {\n                                        return props.value;\n                                    }\n                                }), null);\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return props.itemsDeletable && props.activeQuery !== void 0;\n                                    },\n                                    get children () {\n                                        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DeleteItemButton, {\n                                            get activeQuery () {\n                                                return props.activeQuery;\n                                            },\n                                            dataPath: currentDataPath\n                                        });\n                                    }\n                                }), null);\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return type() === \"array\" && props.activeQuery !== void 0;\n                                    },\n                                    get children () {\n                                        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ClearArrayButton, {\n                                            get activeQuery () {\n                                                return props.activeQuery;\n                                            },\n                                            dataPath: currentDataPath\n                                        });\n                                    }\n                                }), null);\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$14, styles().actions));\n                                return _el$14;\n                            }\n                        }), null);\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                            const _v$3 = styles().expanderButtonContainer, _v$4 = styles().expanderButton, _v$5 = styles().info;\n                            _v$3 !== _p$._v$3 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$7, _p$._v$3 = _v$3);\n                            _v$4 !== _p$._v$4 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$8, _p$._v$4 = _v$4);\n                            _v$5 !== _p$._v$5 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$12, _p$._v$5 = _v$5);\n                            return _p$;\n                        }, {\n                            _v$3: void 0,\n                            _v$4: void 0,\n                            _v$5: void 0\n                        });\n                        return _el$7;\n                    })(),\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                        get when () {\n                            return expanded();\n                        },\n                        get children () {\n                            return [\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return subEntryPages().length === 1;\n                                    },\n                                    get children () {\n                                        const _el$15 = _tmpl$62();\n                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$15, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                                            get each () {\n                                                return subEntries();\n                                            },\n                                            by: (item)=>item.label,\n                                            children: (entry)=>{\n                                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                                                    get defaultExpanded () {\n                                                        return props.defaultExpanded;\n                                                    },\n                                                    get label () {\n                                                        return entry().label;\n                                                    },\n                                                    get value () {\n                                                        return entry().value;\n                                                    },\n                                                    get editable () {\n                                                        return props.editable;\n                                                    },\n                                                    get dataPath () {\n                                                        return [\n                                                            ...currentDataPath,\n                                                            entry().label\n                                                        ];\n                                                    },\n                                                    get activeQuery () {\n                                                        return props.activeQuery;\n                                                    },\n                                                    get itemsDeletable () {\n                                                        return type() === \"array\" || type() === \"Iterable\" || type() === \"object\";\n                                                    }\n                                                });\n                                            }\n                                        }));\n                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$15, styles().subEntry));\n                                        return _el$15;\n                                    }\n                                }),\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                    get when () {\n                                        return subEntryPages().length > 1;\n                                    },\n                                    get children () {\n                                        const _el$16 = _tmpl$62();\n                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$16, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Index, {\n                                            get each () {\n                                                return subEntryPages();\n                                            },\n                                            children: (entries2, index)=>(()=>{\n                                                    const _el$22 = _tmpl$112(), _el$23 = _el$22.firstChild, _el$24 = _el$23.firstChild, _el$25 = _el$24.firstChild, _el$29 = _el$25.nextSibling, _el$27 = _el$29.nextSibling, _el$30 = _el$27.nextSibling;\n                                                    _el$30.nextSibling;\n                                                    _el$24.$$click = ()=>setExpandedPages((old)=>old.includes(index) ? old.filter((d)=>d !== index) : [\n                                                                ...old,\n                                                                index\n                                                            ]);\n                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$24, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Expander, {\n                                                        get expanded () {\n                                                            return expandedPages().includes(index);\n                                                        }\n                                                    }), _el$25);\n                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$24, index * 100, _el$29);\n                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$24, index * 100 + 100 - 1, _el$30);\n                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$23, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                                        get when () {\n                                                            return expandedPages().includes(index);\n                                                        },\n                                                        get children () {\n                                                            const _el$31 = _tmpl$62();\n                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$31, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                                                                get each () {\n                                                                    return entries2();\n                                                                },\n                                                                by: (entry)=>entry.label,\n                                                                children: (entry)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                                                                        get defaultExpanded () {\n                                                                            return props.defaultExpanded;\n                                                                        },\n                                                                        get label () {\n                                                                            return entry().label;\n                                                                        },\n                                                                        get value () {\n                                                                            return entry().value;\n                                                                        },\n                                                                        get editable () {\n                                                                            return props.editable;\n                                                                        },\n                                                                        get dataPath () {\n                                                                            return [\n                                                                                ...currentDataPath,\n                                                                                entry().label\n                                                                            ];\n                                                                        },\n                                                                        get activeQuery () {\n                                                                            return props.activeQuery;\n                                                                        }\n                                                                    })\n                                                            }));\n                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$31, styles().subEntry));\n                                                            return _el$31;\n                                                        }\n                                                    }), null);\n                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                                                        const _v$10 = styles().entry, _v$11 = styles().expanderButton;\n                                                        _v$10 !== _p$._v$10 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$23, _p$._v$10 = _v$10);\n                                                        _v$11 !== _p$._v$11 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$24, _p$._v$11 = _v$11);\n                                                        return _p$;\n                                                    }, {\n                                                        _v$10: void 0,\n                                                        _v$11: void 0\n                                                    });\n                                                    return _el$22;\n                                                })()\n                                        }));\n                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$16, styles().subEntry));\n                                        return _el$16;\n                                    }\n                                })\n                            ];\n                        }\n                    })\n                ];\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$6, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return subEntryPages().length === 0;\n            },\n            get children () {\n                const _el$17 = _tmpl$102(), _el$18 = _el$17.firstChild, _el$19 = _el$18.firstChild;\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$18, ()=>props.label, _el$19);\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$17, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                    get when () {\n                        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!(props.editable && props.activeQuery !== void 0))() && (type() === \"string\" || type() === \"number\" || type() === \"boolean\");\n                    },\n                    get fallback () {\n                        return (()=>{\n                            const _el$32 = _tmpl$92();\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$32, ()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(props.value));\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$32, styles().value));\n                            return _el$32;\n                        })();\n                    },\n                    get children () {\n                        return [\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                get when () {\n                                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!(props.editable && props.activeQuery !== void 0))() && (type() === \"string\" || type() === \"number\");\n                                },\n                                get children () {\n                                    const _el$20 = _tmpl$82();\n                                    _el$20.addEventListener(\"change\", (changeEvent)=>{\n                                        const oldData = props.activeQuery.state.data;\n                                        const newData = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.updateNestedDataByPath)(oldData, currentDataPath, type() === \"number\" ? changeEvent.target.valueAsNumber : changeEvent.target.value);\n                                        queryClient.setQueryData(props.activeQuery.queryKey, newData);\n                                    });\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                                        const _v$6 = type() === \"number\" ? \"number\" : \"text\", _v$7 = clsx(styles().value, styles().editableInput);\n                                        _v$6 !== _p$._v$6 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$20, \"type\", _p$._v$6 = _v$6);\n                                        _v$7 !== _p$._v$7 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$20, _p$._v$7 = _v$7);\n                                        return _p$;\n                                    }, {\n                                        _v$6: void 0,\n                                        _v$7: void 0\n                                    });\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$20.value = props.value);\n                                    return _el$20;\n                                }\n                            }),\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                                get when () {\n                                    return type() === \"boolean\";\n                                },\n                                get children () {\n                                    const _el$21 = _tmpl$92();\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$21, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ToggleValueButton, {\n                                        get activeQuery () {\n                                            return props.activeQuery;\n                                        },\n                                        dataPath: currentDataPath,\n                                        get value () {\n                                            return props.value;\n                                        }\n                                    }), null);\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$21, ()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(props.value), null);\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$21, clsx(styles().value, styles().actions, styles().editableInput)));\n                                    return _el$21;\n                                }\n                            })\n                        ];\n                    }\n                }), null);\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$17, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                    get when () {\n                        return props.editable && props.itemsDeletable && props.activeQuery !== void 0;\n                    },\n                    get children () {\n                        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DeleteItemButton, {\n                            get activeQuery () {\n                                return props.activeQuery;\n                            },\n                            dataPath: currentDataPath\n                        });\n                    }\n                }), null);\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                    const _v$8 = styles().row, _v$9 = styles().label;\n                    _v$8 !== _p$._v$8 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$17, _p$._v$8 = _v$8);\n                    _v$9 !== _p$._v$9 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$18, _p$._v$9 = _v$9);\n                    return _p$;\n                }, {\n                    _v$8: void 0,\n                    _v$9: void 0\n                });\n                return _el$17;\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$6, styles().entry));\n        return _el$6;\n    })();\n}\n_s56(Explorer, \"G4I9cKpFG1IYYZ1odxtRaK00Ock=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext\n    ];\n});\n_c73 = Explorer;\nvar stylesFactory = (theme)=>{\n    const { colors, font, size: size2, border } = tokens;\n    const t2 = (light, dark)=>theme === \"light\" ? light : dark;\n    return {\n        entry: u(_templateObject3(), font.size.xs),\n        subEntry: u(_templateObject4(), t2(colors.gray[300], colors.darkGray[400]), colors.teal[400]),\n        expander: u(_templateObject5(), colors.gray[400], size2[3], size2[3], colors.blue[400]),\n        expanderButtonContainer: u(_templateObject6(), size2[4], size2[4], size2[2]),\n        expanderButton: u(_templateObject7(), size2[5], size2[1], colors.green[400], border.radius.xs, colors.blue[800]),\n        info: u(_templateObject8(), t2(colors.gray[500], colors.gray[500]), font.size.xs, size2[1], colors.yellow[400]),\n        label: u(_templateObject9(), t2(colors.gray[700], colors.gray[300])),\n        value: u(_templateObject10(), t2(colors.purple[600], colors.purple[400])),\n        actions: u(_templateObject11(), size2[2]),\n        row: u(_templateObject12(), size2[2], size2[0.25], size2[4.5]),\n        editableInput: u(_templateObject13(), size2[0.5], size2[1], size2[0.5], size2[1.5], border.radius.xs, t2(colors.gray[200], colors.darkGray[500]), t2(colors.gray[300], colors.darkGray[600])),\n        actionButton: u(_templateObject14(), t2(colors.gray[500], colors.gray[500]), size2[3], size2[3], t2(colors.gray[600], colors.gray[400]), border.radius.xs, colors.blue[800])\n    };\n};\nvar lightStyles = stylesFactory(\"light\");\nvar darkStyles = stylesFactory(\"dark\");\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n    \"click\"\n]);\n// src/Devtools.tsx\nvar _tmpl$25 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div aria-hidden=true></div><button aria-label=\"Open Tanstack query devtools\"class=tsqd-open-btn>');\nvar _tmpl$26 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div>\");\nvar _tmpl$33 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<aside aria-label=\"Tanstack query devtools\"><div></div><button aria-label=\"Close tanstack query devtools\">');\nvar _tmpl$43 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<select name=tsqd-queries-filter-sort>\");\nvar _tmpl$53 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<select name=tsqd-mutations-filter-sort>\");\nvar _tmpl$63 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Asc\");\nvar _tmpl$73 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Desc\");\nvar _tmpl$83 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<button aria-label=\"Open in picture-in-picture mode\"title=\"Open in picture-in-picture mode\">');\nvar _tmpl$93 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div>Settings\");\nvar _tmpl$103 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Position\");\nvar _tmpl$113 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Top\");\nvar _tmpl$122 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Bottom\");\nvar _tmpl$132 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Left\");\nvar _tmpl$142 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Right\");\nvar _tmpl$152 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Theme\");\nvar _tmpl$162 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Light\");\nvar _tmpl$172 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>Dark\");\nvar _tmpl$182 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>System\");\nvar _tmpl$192 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><div class=tsqd-queries-container>\");\nvar _tmpl$202 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div><div class=tsqd-mutations-container>\");\nvar _tmpl$212 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div><div><button aria-label=\"Close Tanstack query devtools\"><span>TANSTACK</span><span> v</span></button></div></div><div><div><div><input aria-label=\"Filter queries by query key\"type=text placeholder=Filter name=tsqd-query-filter-input></div><div></div><button class=tsqd-query-filter-sort-order-btn></button></div><div><button aria-label=\"Clear query cache\"></button><button>');\nvar _tmpl$222 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<option>Sort by \");\nvar _tmpl$232 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div class=tsqd-query-disabled-indicator>disabled\");\nvar _tmpl$242 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<button><div></div><code class=tsqd-query-hash>\");\nvar _tmpl$252 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<div role=tooltip id=tsqd-status-tooltip>\");\nvar _tmpl$262 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<span>\");\nvar _tmpl$27 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<button><span></span><span>\");\nvar _tmpl$28 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<button><span></span> Error\");\nvar _tmpl$29 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><span></span>Trigger Error<select><option value=\"\"disabled selected>');\nvar _tmpl$30 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div>Query Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-observers-count><span>Observers:</span><span></span></div><div class=tsqd-query-details-last-updated><span>Last Updated:</span><span></span></div></div><div>Actions</div><div><button><span></span>Refetch</button><button><span></span>Invalidate</button><button><span></span>Reset</button><button><span></span>Remove</button><button><span></span> Loading</button></div><div>Data Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-data-explorer\"></div><div>Query Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\">');\nvar _tmpl$31 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)(\"<option>\");\nvar _tmpl$322 = /* @__PURE__ */ (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.template)('<div><div>Mutation Details</div><div><div class=tsqd-query-details-summary><pre><code></code></pre><span></span></div><div class=tsqd-query-details-last-updated><span>Submitted At:</span><span></span></div></div><div>Variables Details</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\"></div><div>Context Details</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\"></div><div>Data Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\"></div><div>Mutations Explorer</div><div class=\"tsqd-query-details-explorer-container tsqd-query-details-query-explorer\">');\nvar firstBreakpoint = 1024;\nvar secondBreakpoint = 796;\nvar thirdBreakpoint = 700;\nvar BUTTON_POSITION = \"bottom-right\";\nvar POSITION = \"bottom\";\nvar THEME_PREFERENCE = \"system\";\nvar INITIAL_IS_OPEN = false;\nvar DEFAULT_HEIGHT = 500;\nvar DEFAULT_WIDTH = 500;\nvar DEFAULT_SORT_FN_NAME = Object.keys(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.sortFns)[0];\nvar DEFAULT_SORT_ORDER = 1;\nvar DEFAULT_MUTATION_SORT_FN_NAME = Object.keys(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mutationSortFns)[0];\nvar [selectedQueryHash, setSelectedQueryHash] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(null);\nvar [selectedMutationId, setSelectedMutationId] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(null);\nvar [panelWidth, setPanelWidth] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(0);\nvar PiPContext = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createContext)(void 0);\nvar PiPProvider = (props)=>{\n    const [pipWindow, setPipWindow] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(null);\n    const closePipWindow = ()=>{\n        const w = pipWindow();\n        if (w != null) {\n            w.close();\n            setPipWindow(null);\n        }\n    };\n    const requestPipWindow = async (width, height)=>{\n        if (pipWindow() != null) {\n            return;\n        }\n        const pip = window.open(\"\", \"TSQD-Devtools-Panel\", \"width=\".concat(width, \",height=\").concat(height, \",popup\"));\n        if (!pip) {\n            throw new Error(\"Failed to open popup. Please allow popups for this site to view the devtools in picture-in-picture mode.\");\n        }\n        pip.document.head.innerHTML = \"\";\n        pip.document.body.innerHTML = \"\";\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.clearDelegatedEvents)(pip.document);\n        pip.document.title = \"TanStack Query Devtools\";\n        pip.document.body.style.margin = \"0\";\n        pip.addEventListener(\"pagehide\", ()=>{\n            props.setLocalStore(\"pip_open\", \"false\");\n            setPipWindow(null);\n        });\n        [\n            ...document.styleSheets\n        ].forEach((styleSheet)=>{\n            try {\n                const cssRules = [\n                    ...styleSheet.cssRules\n                ].map((rule)=>rule.cssText).join(\"\");\n                const style2 = document.createElement(\"style\");\n                const style_node = styleSheet.ownerNode;\n                let style_id = \"\";\n                if (style_node && \"id\" in style_node) {\n                    style_id = style_node.id;\n                }\n                if (style_id) {\n                    style2.setAttribute(\"id\", style_id);\n                }\n                style2.textContent = cssRules;\n                pip.document.head.appendChild(style2);\n            } catch (e2) {\n                const link = document.createElement(\"link\");\n                if (styleSheet.href == null) {\n                    return;\n                }\n                link.rel = \"stylesheet\";\n                link.type = styleSheet.type;\n                link.media = styleSheet.media.toString();\n                link.href = styleSheet.href;\n                pip.document.head.appendChild(link);\n            }\n        });\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n            \"focusin\",\n            \"focusout\",\n            \"pointermove\",\n            \"keydown\",\n            \"pointerdown\",\n            \"pointerup\",\n            \"click\",\n            \"mousedown\",\n            \"input\"\n        ], pip.document);\n        props.setLocalStore(\"pip_open\", \"true\");\n        setPipWindow(pip);\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _props_localStore_pip_open;\n        const pip_open = (_props_localStore_pip_open = props.localStore.pip_open) !== null && _props_localStore_pip_open !== void 0 ? _props_localStore_pip_open : \"false\";\n        if (pip_open === \"true\") {\n            requestPipWindow(Number(window.innerWidth), Number(props.localStore.height || DEFAULT_HEIGHT));\n        }\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const gooberStyles = document.getElementById(\"_goober\");\n        const w = pipWindow();\n        if (gooberStyles && w) {\n            const observer = new MutationObserver(()=>{\n                const pip_style = w.document.getElementById(\"_goober\");\n                if (pip_style) {\n                    pip_style.textContent = gooberStyles.textContent;\n                }\n            });\n            observer.observe(gooberStyles, {\n                childList: true,\n                // observe direct children\n                subtree: true,\n                // and lower descendants too\n                characterDataOldValue: true\n            });\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n                observer.disconnect();\n            });\n        }\n    });\n    const value = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>({\n            pipWindow: pipWindow(),\n            requestPipWindow,\n            closePipWindow\n        }));\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPContext.Provider, {\n        value,\n        get children () {\n            return props.children;\n        }\n    });\n};\n_c74 = PiPProvider;\nvar usePiPWindow = ()=>{\n    var _s = $RefreshSig$();\n    const context = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const ctx = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.useContext)(PiPContext);\n        if (!ctx) {\n            throw new Error(\"usePiPWindow must be used within a PiPProvider\");\n        }\n        return ctx();\n    }, \"/dMy7t63NXD4eYACoT93CePwGrg=\"));\n    return context;\n};\nvar DevtoolsComponent = (props)=>{\n    const [localStore, setLocalStore] = createLocalStorage({\n        prefix: \"TanstackQueryDevtools\"\n    });\n    const colorScheme = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getPreferredColorScheme)();\n    const theme = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        const preference = localStore.theme_preference || THEME_PREFERENCE;\n        if (preference !== \"system\") return preference;\n        return colorScheme();\n    });\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryDevtoolsContext.Provider, {\n        value: props,\n        get children () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPProvider, {\n                localStore,\n                setLocalStore,\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ThemeContext.Provider, {\n                        value: theme,\n                        get children () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Devtools, {\n                                localStore,\n                                setLocalStore\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    });\n};\n_c75 = DevtoolsComponent;\nvar Devtools_default = DevtoolsComponent;\nvar Devtools = (props)=>{\n    _s57();\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const pip = usePiPWindow();\n    const buttonPosition = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return useQueryDevtoolsContext().buttonPosition || BUTTON_POSITION;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const isOpen = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s1(()=>{\n        _s1();\n        return props.localStore.open === \"true\" ? true : props.localStore.open === \"false\" ? false : useQueryDevtoolsContext().initialIsOpen || INITIAL_IS_OPEN;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const position = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s2(()=>{\n        _s2();\n        return props.localStore.position || useQueryDevtoolsContext().position || POSITION;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    let transitionsContainerRef;\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const root = transitionsContainerRef.parentElement;\n        const height = props.localStore.height || DEFAULT_HEIGHT;\n        const width = props.localStore.width || DEFAULT_WIDTH;\n        const panelPosition = position();\n        root.style.setProperty(\"--tsqd-panel-height\", \"\".concat(panelPosition === \"top\" ? \"-\" : \"\").concat(height, \"px\"));\n        root.style.setProperty(\"--tsqd-panel-width\", \"\".concat(panelPosition === \"left\" ? \"-\" : \"\").concat(width, \"px\"));\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        const onFocus = ()=>{\n            const root = transitionsContainerRef.parentElement;\n            const fontSize = getComputedStyle(root).fontSize;\n            root.style.setProperty(\"--tsqd-font-size\", fontSize);\n        };\n        onFocus();\n        window.addEventListener(\"focus\", onFocus);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            window.removeEventListener(\"focus\", onFocus);\n        });\n    });\n    const pip_open = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        var _props_localStore_pip_open;\n        return (_props_localStore_pip_open = props.localStore.pip_open) !== null && _props_localStore_pip_open !== void 0 ? _props_localStore_pip_open : \"false\";\n    });\n    return [\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() && pip_open() == \"true\";\n            },\n            get children () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Portal, {\n                    get mount () {\n                        var _pip_pipWindow;\n                        return (_pip_pipWindow = pip().pipWindow) === null || _pip_pipWindow === void 0 ? void 0 : _pip_pipWindow.document.body;\n                    },\n                    get children () {\n                        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPPanel, {\n                            get children () {\n                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ContentView, {\n                                    get localStore () {\n                                        return props.localStore;\n                                    },\n                                    get setLocalStore () {\n                                        return props.setLocalStore;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        }),\n        (()=>{\n            const _el$ = _tmpl$26();\n            const _ref$ = transitionsContainerRef;\n            typeof _ref$ === \"function\" ? (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$, _el$) : transitionsContainerRef = _el$;\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TransitionGroup, {\n                name: \"tsqd-panel-transition\",\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                        get when () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!(isOpen() && !pip().pipWindow))() && pip_open() == \"false\";\n                        },\n                        get children () {\n                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(DevtoolsPanel, {\n                                get localStore () {\n                                    return props.localStore;\n                                },\n                                get setLocalStore () {\n                                    return props.setLocalStore;\n                                }\n                            });\n                        }\n                    });\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TransitionGroup, {\n                name: \"tsqd-button-transition\",\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                        get when () {\n                            return !isOpen();\n                        },\n                        get children () {\n                            const _el$2 = _tmpl$25(), _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$3, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TanstackLogo, {}));\n                            _el$4.$$click = ()=>props.setLocalStore(\"open\", \"true\");\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$4, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(TanstackLogo, {}));\n                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$2, clsx(styles().devtoolsBtn, styles()[\"devtoolsBtn-position-\".concat(buttonPosition())], \"tsqd-open-btn-container\")));\n                            return _el$2;\n                        }\n                    });\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$, clsx(u(_templateObject15(), position() === \"top\" || position() === \"bottom\" ? \"transform: translateY(var(--tsqd-panel-height));\" : \"transform: translateX(var(--tsqd-panel-width));\", buttonPosition() === \"relative\" ? \"none;\" : buttonPosition() === \"top-left\" ? \"translateX(-72px);\" : buttonPosition() === \"top-right\" ? \"translateX(72px);\" : \"translateY(72px);\"), \"tsqd-transitions-container\")));\n            return _el$;\n        })()\n    ];\n};\n_s57(Devtools, \"FRPlgZJN3ZlxsXRPeHKYRwFyTzM=\", false, function() {\n    return [\n        useTheme,\n        usePiPWindow\n    ];\n});\n_c76 = Devtools;\nvar PiPPanel = (props)=>{\n    _s58();\n    const pip = usePiPWindow();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const getPanelDynamicStyles = ()=>{\n        const { colors } = tokens;\n        const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n        if (panelWidth() < secondBreakpoint) {\n            return u(_templateObject16(), t2(colors.gray[300], colors.gray[600]));\n        }\n        return u(_templateObject17(), t2(colors.gray[200], colors.darkGray[900]));\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        const win = pip().pipWindow;\n        const resizeCB = ()=>{\n            if (!win) return;\n            setPanelWidth(win.innerWidth);\n        };\n        if (win) {\n            win.addEventListener(\"resize\", resizeCB);\n            resizeCB();\n        }\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            if (win) {\n                win.removeEventListener(\"resize\", resizeCB);\n            }\n        });\n    });\n    return (()=>{\n        const _el$5 = _tmpl$26();\n        _el$5.style.setProperty(\"--tsqd-font-size\", \"16px\");\n        _el$5.style.setProperty(\"max-height\", \"100vh\");\n        _el$5.style.setProperty(\"height\", \"100vh\");\n        _el$5.style.setProperty(\"width\", \"100vw\");\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$5, ()=>props.children);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$5, clsx(styles().panel, getPanelDynamicStyles(), {\n                [u(_templateObject18())]: panelWidth() < thirdBreakpoint\n            }, \"tsqd-main-panel\")));\n        return _el$5;\n    })();\n};\n_s58(PiPPanel, \"+uShN8afCvHMRMMmORTSNpCilBk=\", false, function() {\n    return [\n        usePiPWindow,\n        useTheme\n    ];\n});\n_c77 = PiPPanel;\nvar DevtoolsPanel = (props)=>{\n    _s59();\n    var _s = $RefreshSig$();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const [isResizing, setIsResizing] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const position = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return props.localStore.position || useQueryDevtoolsContext().position || POSITION;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const handleDragStart = (event)=>{\n        const panelElement = event.currentTarget.parentElement;\n        if (!panelElement) return;\n        setIsResizing(true);\n        const { height, width } = panelElement.getBoundingClientRect();\n        const startX = event.clientX;\n        const startY = event.clientY;\n        let newSize = 0;\n        const minHeight = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.convertRemToPixels)(3.5);\n        const minWidth = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.convertRemToPixels)(12);\n        const runDrag = (moveEvent)=>{\n            moveEvent.preventDefault();\n            if (position() === \"left\" || position() === \"right\") {\n                const valToAdd = position() === \"right\" ? startX - moveEvent.clientX : moveEvent.clientX - startX;\n                newSize = Math.round(width + valToAdd);\n                if (newSize < minWidth) {\n                    newSize = minWidth;\n                }\n                props.setLocalStore(\"width\", String(Math.round(newSize)));\n                const newWidth = panelElement.getBoundingClientRect().width;\n                if (Number(props.localStore.width) < newWidth) {\n                    props.setLocalStore(\"width\", String(newWidth));\n                }\n            } else {\n                const valToAdd = position() === \"bottom\" ? startY - moveEvent.clientY : moveEvent.clientY - startY;\n                newSize = Math.round(height + valToAdd);\n                if (newSize < minHeight) {\n                    newSize = minHeight;\n                    setSelectedQueryHash(null);\n                }\n                props.setLocalStore(\"height\", String(Math.round(newSize)));\n            }\n        };\n        const unsubscribe = ()=>{\n            if (isResizing()) {\n                setIsResizing(false);\n            }\n            document.removeEventListener(\"mousemove\", runDrag, false);\n            document.removeEventListener(\"mouseUp\", unsubscribe, false);\n        };\n        document.addEventListener(\"mousemove\", runDrag, false);\n        document.addEventListener(\"mouseup\", unsubscribe, false);\n    };\n    let panelRef;\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onMount)(()=>{\n        createResizeObserver(panelRef, (param, el)=>{\n            let { width } = param;\n            if (el === panelRef) {\n                setPanelWidth(width);\n            }\n        });\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        var _panelRef_parentElement_parentElement, _panelRef_parentElement;\n        const rootContainer = (_panelRef_parentElement = panelRef.parentElement) === null || _panelRef_parentElement === void 0 ? void 0 : (_panelRef_parentElement_parentElement = _panelRef_parentElement.parentElement) === null || _panelRef_parentElement_parentElement === void 0 ? void 0 : _panelRef_parentElement_parentElement.parentElement;\n        if (!rootContainer) return;\n        const currentPosition = props.localStore.position || POSITION;\n        const styleProp = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getSidedProp)(\"padding\", currentPosition);\n        const isVertical = props.localStore.position === \"left\" || props.localStore.position === \"right\";\n        const previousPaddings = ((param)=>{\n            let { padding, paddingTop, paddingBottom, paddingLeft, paddingRight } = param;\n            return {\n                padding,\n                paddingTop,\n                paddingBottom,\n                paddingLeft,\n                paddingRight\n            };\n        })(rootContainer.style);\n        rootContainer.style[styleProp] = \"\".concat(isVertical ? props.localStore.width : props.localStore.height, \"px\");\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n            Object.entries(previousPaddings).forEach((param)=>{\n                let [property, previousValue] = param;\n                rootContainer.style[property] = previousValue;\n            });\n        });\n    });\n    const getPanelDynamicStyles = ()=>{\n        const { colors } = tokens;\n        const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n        if (panelWidth() < secondBreakpoint) {\n            return u(_templateObject19(), t2(colors.gray[300], colors.gray[600]));\n        }\n        return u(_templateObject20(), t2(colors.gray[200], colors.darkGray[900]));\n    };\n    return (()=>{\n        const _el$6 = _tmpl$33(), _el$7 = _el$6.firstChild, _el$8 = _el$7.nextSibling;\n        const _ref$2 = panelRef;\n        typeof _ref$2 === \"function\" ? (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$2, _el$6) : panelRef = _el$6;\n        _el$7.$$mousedown = handleDragStart;\n        _el$8.$$click = ()=>props.setLocalStore(\"open\", \"false\");\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$8, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {}));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$6, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ContentView, {\n            get localStore () {\n                return props.localStore;\n            },\n            get setLocalStore () {\n                return props.setLocalStore;\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n            const _v$ = clsx(styles().panel, styles()[\"panel-position-\".concat(position())], getPanelDynamicStyles(), {\n                [u(_templateObject21())]: panelWidth() < thirdBreakpoint && (position() === \"right\" || position() === \"left\")\n            }, \"tsqd-main-panel\"), _v$2 = position() === \"bottom\" || position() === \"top\" ? \"\".concat(props.localStore.height || DEFAULT_HEIGHT, \"px\") : \"auto\", _v$3 = position() === \"right\" || position() === \"left\" ? \"\".concat(props.localStore.width || DEFAULT_WIDTH, \"px\") : \"auto\", _v$4 = clsx(styles().dragHandle, styles()[\"dragHandle-position-\".concat(position())], \"tsqd-drag-handle\"), _v$5 = clsx(styles().closeBtn, styles()[\"closeBtn-position-\".concat(position())], \"tsqd-minimize-btn\");\n            _v$ !== _p$._v$ && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$6, _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && ((_p$._v$2 = _v$2) != null ? _el$6.style.setProperty(\"height\", _v$2) : _el$6.style.removeProperty(\"height\"));\n            _v$3 !== _p$._v$3 && ((_p$._v$3 = _v$3) != null ? _el$6.style.setProperty(\"width\", _v$3) : _el$6.style.removeProperty(\"width\"));\n            _v$4 !== _p$._v$4 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$7, _p$._v$4 = _v$4);\n            _v$5 !== _p$._v$5 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$8, _p$._v$5 = _v$5);\n            return _p$;\n        }, {\n            _v$: void 0,\n            _v$2: void 0,\n            _v$3: void 0,\n            _v$4: void 0,\n            _v$5: void 0\n        });\n        return _el$6;\n    })();\n};\n_s59(DevtoolsPanel, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c78 = DevtoolsPanel;\nvar ContentView = (props)=>{\n    _s60();\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n    setupQueryCacheSubscription();\n    setupMutationCacheSubscription();\n    let containerRef;\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const pip = usePiPWindow();\n    const [selectedView, setSelectedView] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(\"queries\");\n    const sort = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>props.localStore.sort || DEFAULT_SORT_FN_NAME);\n    const sortOrder = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>Number(props.localStore.sortOrder) || DEFAULT_SORT_ORDER);\n    const mutationSort = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>props.localStore.mutationSort || DEFAULT_MUTATION_SORT_FN_NAME);\n    const mutationSortOrder = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>Number(props.localStore.mutationSortOrder) || DEFAULT_SORT_ORDER);\n    const [offline, setOffline] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const sortFn = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.sortFns[sort()]);\n    const mutationSortFn = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mutationSortFns[mutationSort()]);\n    const onlineManager = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return useQueryDevtoolsContext().onlineManager;\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const query_cache = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s1(()=>{\n        _s1();\n        return useQueryDevtoolsContext().client.getQueryCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const mutation_cache = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s2(()=>{\n        _s2();\n        return useQueryDevtoolsContext().client.getMutationCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const queryCount = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        return queryCache().getAll().length;\n    }, false);\n    const queries = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(()=>[\n            queryCount(),\n            props.localStore.filter,\n            sort(),\n            sortOrder()\n        ], ()=>{\n        const curr = query_cache().getAll();\n        const filtered = props.localStore.filter ? curr.filter((item)=>rankItem(item.queryHash, props.localStore.filter || \"\").passed) : [\n            ...curr\n        ];\n        const sorted = sortFn() ? filtered.sort((a2, b2)=>sortFn()(a2, b2) * sortOrder()) : filtered;\n        return sorted;\n    }));\n    const mutationCount = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        return mutationCache().getAll().length;\n    }, false);\n    const mutations = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)((0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.on)(()=>[\n            mutationCount(),\n            props.localStore.mutationFilter,\n            mutationSort(),\n            mutationSortOrder()\n        ], ()=>{\n        const curr = mutation_cache().getAll();\n        const filtered = props.localStore.mutationFilter ? curr.filter((item)=>{\n            const value = \"\".concat(item.options.mutationKey ? JSON.stringify(item.options.mutationKey) + \" - \" : \"\").concat(new Date(item.state.submittedAt).toLocaleString());\n            return rankItem(value, props.localStore.mutationFilter || \"\").passed;\n        }) : [\n            ...curr\n        ];\n        const sorted = mutationSortFn() ? filtered.sort((a2, b2)=>mutationSortFn()(a2, b2) * mutationSortOrder()) : filtered;\n        return sorted;\n    }));\n    const setDevtoolsPosition = (pos)=>{\n        props.setLocalStore(\"position\", pos);\n    };\n    const setComputedVariables = (el)=>{\n        const computedStyle = getComputedStyle(containerRef);\n        const variable = computedStyle.getPropertyValue(\"--tsqd-font-size\");\n        el.style.setProperty(\"--tsqd-font-size\", variable);\n    };\n    return [\n        (()=>{\n            var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n            const _el$9 = _tmpl$212(), _el$10 = _el$9.firstChild, _el$11 = _el$10.firstChild, _el$12 = _el$11.firstChild, _el$13 = _el$12.firstChild, _el$14 = _el$13.nextSibling, _el$15 = _el$14.firstChild, _el$16 = _el$10.nextSibling, _el$17 = _el$16.firstChild, _el$18 = _el$17.firstChild, _el$19 = _el$18.firstChild, _el$20 = _el$18.nextSibling, _el$23 = _el$20.nextSibling, _el$26 = _el$17.nextSibling, _el$27 = _el$26.firstChild, _el$28 = _el$27.nextSibling;\n            const _ref$3 = containerRef;\n            typeof _ref$3 === \"function\" ? (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$3, _el$9) : containerRef = _el$9;\n            _el$12.$$click = ()=>{\n                if (!pip().pipWindow) {\n                    props.setLocalStore(\"open\", \"false\");\n                }\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, _s(()=>{\n                _s();\n                return useQueryDevtoolsContext().queryFlavor;\n            }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n                return [\n                    useQueryDevtoolsContext\n                ];\n            }), _el$15);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$14, _s1(()=>{\n                _s1();\n                return useQueryDevtoolsContext().version;\n            }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n                return [\n                    useQueryDevtoolsContext\n                ];\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$11, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.Root, {\n                get [\"class\"] () {\n                    return clsx(styles().viewToggle);\n                },\n                get value () {\n                    return selectedView();\n                },\n                onChange: (value)=>{\n                    setSelectedView(value);\n                    setSelectedQueryHash(null);\n                    setSelectedMutationId(null);\n                },\n                get children () {\n                    return [\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.Item, {\n                            value: \"queries\",\n                            \"class\": \"tsqd-radio-toggle\",\n                            get children () {\n                                return [\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemInput, {}),\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemControl, {\n                                        get children () {\n                                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemIndicator, {});\n                                        }\n                                    }),\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemLabel, {\n                                        title: \"Toggle Queries View\",\n                                        children: \"Queries\"\n                                    })\n                                ];\n                            }\n                        }),\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.Item, {\n                            value: \"mutations\",\n                            \"class\": \"tsqd-radio-toggle\",\n                            get children () {\n                                return [\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemInput, {}),\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemControl, {\n                                        get children () {\n                                            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemIndicator, {});\n                                        }\n                                    }),\n                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$9.ItemLabel, {\n                                        title: \"Toggle Mutations View\",\n                                        children: \"Mutations\"\n                                    })\n                                ];\n                            }\n                        })\n                    ];\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$10, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"queries\";\n                },\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatusCount, {});\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$10, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"mutations\";\n                },\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MutationStatusCount, {});\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$18, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Search, {}), _el$19);\n            _el$19.$$input = (e2)=>{\n                if (selectedView() === \"queries\") {\n                    props.setLocalStore(\"filter\", e2.currentTarget.value);\n                } else {\n                    props.setLocalStore(\"mutationFilter\", e2.currentTarget.value);\n                }\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$20, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"queries\";\n                },\n                get children () {\n                    const _el$21 = _tmpl$43();\n                    _el$21.addEventListener(\"change\", (e2)=>{\n                        props.setLocalStore(\"sort\", e2.currentTarget.value);\n                    });\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$21, ()=>Object.keys(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.sortFns).map((key)=>(()=>{\n                                const _el$44 = _tmpl$222();\n                                _el$44.firstChild;\n                                _el$44.value = key;\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$44, key, null);\n                                return _el$44;\n                            })()));\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$21.value = sort());\n                    return _el$21;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$20, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"mutations\";\n                },\n                get children () {\n                    const _el$22 = _tmpl$53();\n                    _el$22.addEventListener(\"change\", (e2)=>{\n                        props.setLocalStore(\"mutationSort\", e2.currentTarget.value);\n                    });\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$22, ()=>Object.keys(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mutationSortFns).map((key)=>(()=>{\n                                const _el$46 = _tmpl$222();\n                                _el$46.firstChild;\n                                _el$46.value = key;\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$46, key, null);\n                                return _el$46;\n                            })()));\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$22.value = mutationSort());\n                    return _el$22;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$20, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {}), null);\n            _el$23.$$click = ()=>{\n                if (selectedView() === \"queries\") {\n                    props.setLocalStore(\"sortOrder\", String(sortOrder() * -1));\n                } else {\n                    props.setLocalStore(\"mutationSortOrder\", String(mutationSortOrder() * -1));\n                }\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$23, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return (selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === 1;\n                },\n                get children () {\n                    return [\n                        _tmpl$63(),\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowUp, {})\n                    ];\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$23, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return (selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === -1;\n                },\n                get children () {\n                    return [\n                        _tmpl$73(),\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowDown, {})\n                    ];\n                }\n            }), null);\n            _el$27.$$click = ()=>{\n                if (selectedView() === \"queries\") {\n                    query_cache().clear();\n                } else {\n                    mutation_cache().clear();\n                }\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$27, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Trash, {}));\n            _el$28.$$click = ()=>{\n                if (offline()) {\n                    onlineManager().setOnline(true);\n                    setOffline(false);\n                } else {\n                    onlineManager().setOnline(false);\n                    setOffline(true);\n                }\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$28, (()=>{\n                const _c$ = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!offline());\n                return ()=>_c$() ? (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Offline, {}) : (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Wifi, {});\n            })());\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$26, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return !pip().pipWindow;\n                },\n                get children () {\n                    const _el$29 = _tmpl$83();\n                    _el$29.$$click = ()=>{\n                        var _props_localStore_height;\n                        pip().requestPipWindow(Number(window.innerWidth), Number((_props_localStore_height = props.localStore.height) !== null && _props_localStore_height !== void 0 ? _props_localStore_height : 500));\n                    };\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$29, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PiPIcon, {}));\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$29, clsx(styles().actionsBtn, \"tsqd-actions-btn\", \"tsqd-action-open-pip\")));\n                    return _el$29;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$26, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Root, {\n                gutter: 4,\n                get children () {\n                    return [\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Trigger, {\n                            get [\"class\"] () {\n                                return clsx(styles().actionsBtn, \"tsqd-actions-btn\", \"tsqd-action-settings\");\n                            },\n                            get children () {\n                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Settings, {});\n                            }\n                        }),\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Portal, {\n                            ref: (el)=>setComputedVariables(el),\n                            get mount () {\n                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;\n                            },\n                            get children () {\n                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Content, {\n                                    get [\"class\"] () {\n                                        return clsx(styles().settingsMenu, \"tsqd-settings-menu\");\n                                    },\n                                    get children () {\n                                        return [\n                                            (()=>{\n                                                const _el$30 = _tmpl$93();\n                                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$30, clsx(styles().settingsMenuHeader, \"tsqd-settings-menu-header\")));\n                                                return _el$30;\n                                            })(),\n                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Sub, {\n                                                overlap: true,\n                                                gutter: 8,\n                                                shift: -4,\n                                                get children () {\n                                                    return [\n                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.SubTrigger, {\n                                                            get [\"class\"] () {\n                                                                return clsx(styles().settingsSubTrigger, \"tsqd-settings-menu-sub-trigger\", \"tsqd-settings-menu-sub-trigger-position\");\n                                                            },\n                                                            get children () {\n                                                                return [\n                                                                    _tmpl$103(),\n                                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {})\n                                                                ];\n                                                            }\n                                                        }),\n                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Portal, {\n                                                            ref: (el)=>setComputedVariables(el),\n                                                            get mount () {\n                                                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;\n                                                            },\n                                                            get children () {\n                                                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.SubContent, {\n                                                                    get [\"class\"] () {\n                                                                        return clsx(styles().settingsMenu, \"tsqd-settings-submenu\");\n                                                                    },\n                                                                    get children () {\n                                                                        return [\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"top\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-top\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$113(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowUp, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"bottom\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-bottom\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$122(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowDown, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"left\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-left\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$132(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowLeft, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    setDevtoolsPosition(\"right\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-right\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$142(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ArrowRight, {})\n                                                                                    ];\n                                                                                }\n                                                                            })\n                                                                        ];\n                                                                    }\n                                                                });\n                                                            }\n                                                        })\n                                                    ];\n                                                }\n                                            }),\n                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Sub, {\n                                                overlap: true,\n                                                gutter: 8,\n                                                shift: -4,\n                                                get children () {\n                                                    return [\n                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.SubTrigger, {\n                                                            get [\"class\"] () {\n                                                                return clsx(styles().settingsSubTrigger, \"tsqd-settings-menu-sub-trigger\", \"tsqd-settings-menu-sub-trigger-position\");\n                                                            },\n                                                            get children () {\n                                                                return [\n                                                                    _tmpl$152(),\n                                                                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {})\n                                                                ];\n                                                            }\n                                                        }),\n                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Portal, {\n                                                            ref: (el)=>setComputedVariables(el),\n                                                            get mount () {\n                                                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!pip().pipWindow)() ? pip().pipWindow.document.body : document.body;\n                                                            },\n                                                            get children () {\n                                                                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.SubContent, {\n                                                                    get [\"class\"] () {\n                                                                        return clsx(styles().settingsMenu, \"tsqd-settings-submenu\");\n                                                                    },\n                                                                    get children () {\n                                                                        return [\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    props.setLocalStore(\"theme_preference\", \"light\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === \"light\" && styles().themeSelectedButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-top\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$162(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Sun, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    props.setLocalStore(\"theme_preference\", \"dark\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === \"dark\" && styles().themeSelectedButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-bottom\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$172(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Moon, {})\n                                                                                    ];\n                                                                                }\n                                                                            }),\n                                                                            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(index$f.Item, {\n                                                                                onSelect: ()=>{\n                                                                                    props.setLocalStore(\"theme_preference\", \"system\");\n                                                                                },\n                                                                                as: \"button\",\n                                                                                get [\"class\"] () {\n                                                                                    return clsx(styles().settingsSubButton, props.localStore.theme_preference === \"system\" && styles().themeSelectedButton, \"tsqd-settings-menu-position-btn\", \"tsqd-settings-menu-position-btn-left\");\n                                                                                },\n                                                                                get children () {\n                                                                                    return [\n                                                                                        _tmpl$182(),\n                                                                                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Monitor, {})\n                                                                                    ];\n                                                                                }\n                                                                            })\n                                                                        ];\n                                                                    }\n                                                                });\n                                                            }\n                                                        })\n                                                    ];\n                                                }\n                                            })\n                                        ];\n                                    }\n                                });\n                            }\n                        })\n                    ];\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$9, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"queries\";\n                },\n                get children () {\n                    const _el$40 = _tmpl$192(), _el$41 = _el$40.firstChild;\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$41, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                        by: (q)=>q.queryHash,\n                        get each () {\n                            return queries();\n                        },\n                        children: (query)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryRow, {\n                                get query () {\n                                    return query();\n                                }\n                            })\n                    }));\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$40, clsx(styles().overflowQueryContainer, \"tsqd-queries-overflow-container\")));\n                    return _el$40;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$9, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return selectedView() === \"mutations\";\n                },\n                get children () {\n                    const _el$42 = _tmpl$202(), _el$43 = _el$42.firstChild;\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$43, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Key, {\n                        by: (m)=>m.mutationId,\n                        get each () {\n                            return mutations();\n                        },\n                        children: (mutation)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MutationRow, {\n                                get mutation () {\n                                    return mutation();\n                                }\n                            })\n                    }));\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$42, clsx(styles().overflowQueryContainer, \"tsqd-mutations-overflow-container\")));\n                    return _el$42;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$6 = clsx(styles().queriesContainer, panelWidth() < secondBreakpoint && (selectedQueryHash() || selectedMutationId()) && u(_templateObject22()), panelWidth() < secondBreakpoint && !(selectedQueryHash() || selectedMutationId()) && u(_templateObject23()), \"tsqd-queries-container\"), _v$7 = clsx(styles().row, \"tsqd-header\"), _v$8 = styles().logoAndToggleContainer, _v$9 = clsx(styles().logo, \"tsqd-text-logo-container\"), _v$10 = clsx(styles().tanstackLogo, \"tsqd-text-logo-tanstack\"), _v$11 = clsx(styles().queryFlavorLogo, \"tsqd-text-logo-query-flavor\"), _v$12 = clsx(styles().row, \"tsqd-filters-actions-container\"), _v$13 = clsx(styles().filtersContainer, \"tsqd-filters-container\"), _v$14 = clsx(styles().filterInput, \"tsqd-query-filter-textfield-container\"), _v$15 = clsx(\"tsqd-query-filter-textfield\"), _v$16 = clsx(styles().filterSelect, \"tsqd-query-filter-sort-container\"), _v$17 = \"Sort order \".concat((selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === -1 ? \"descending\" : \"ascending\"), _v$18 = (selectedView() === \"queries\" ? sortOrder() : mutationSortOrder()) === -1, _v$19 = clsx(styles().actionsContainer, \"tsqd-actions-container\"), _v$20 = clsx(styles().actionsBtn, \"tsqd-actions-btn\", \"tsqd-action-clear-cache\"), _v$21 = \"Clear \".concat(selectedView(), \" cache\"), _v$22 = clsx(styles().actionsBtn, offline() && styles().actionsBtnOffline, \"tsqd-actions-btn\", \"tsqd-action-mock-offline-behavior\"), _v$23 = \"\".concat(offline() ? \"Unset offline mocking behavior\" : \"Mock offline behavior\"), _v$24 = offline(), _v$25 = \"\".concat(offline() ? \"Unset offline mocking behavior\" : \"Mock offline behavior\");\n                _v$6 !== _p$._v$6 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$9, _p$._v$6 = _v$6);\n                _v$7 !== _p$._v$7 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$10, _p$._v$7 = _v$7);\n                _v$8 !== _p$._v$8 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$11, _p$._v$8 = _v$8);\n                _v$9 !== _p$._v$9 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$12, _p$._v$9 = _v$9);\n                _v$10 !== _p$._v$10 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$13, _p$._v$10 = _v$10);\n                _v$11 !== _p$._v$11 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$14, _p$._v$11 = _v$11);\n                _v$12 !== _p$._v$12 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$16, _p$._v$12 = _v$12);\n                _v$13 !== _p$._v$13 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$17, _p$._v$13 = _v$13);\n                _v$14 !== _p$._v$14 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$18, _p$._v$14 = _v$14);\n                _v$15 !== _p$._v$15 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$19, _p$._v$15 = _v$15);\n                _v$16 !== _p$._v$16 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$20, _p$._v$16 = _v$16);\n                _v$17 !== _p$._v$17 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$23, \"aria-label\", _p$._v$17 = _v$17);\n                _v$18 !== _p$._v$18 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$23, \"aria-pressed\", _p$._v$18 = _v$18);\n                _v$19 !== _p$._v$19 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$26, _p$._v$19 = _v$19);\n                _v$20 !== _p$._v$20 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$27, _p$._v$20 = _v$20);\n                _v$21 !== _p$._v$21 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$27, \"title\", _p$._v$21 = _v$21);\n                _v$22 !== _p$._v$22 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$28, _p$._v$22 = _v$22);\n                _v$23 !== _p$._v$23 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$28, \"aria-label\", _p$._v$23 = _v$23);\n                _v$24 !== _p$._v$24 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$28, \"aria-pressed\", _p$._v$24 = _v$24);\n                _v$25 !== _p$._v$25 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$28, \"title\", _p$._v$25 = _v$25);\n                return _p$;\n            }, {\n                _v$6: void 0,\n                _v$7: void 0,\n                _v$8: void 0,\n                _v$9: void 0,\n                _v$10: void 0,\n                _v$11: void 0,\n                _v$12: void 0,\n                _v$13: void 0,\n                _v$14: void 0,\n                _v$15: void 0,\n                _v$16: void 0,\n                _v$17: void 0,\n                _v$18: void 0,\n                _v$19: void 0,\n                _v$20: void 0,\n                _v$21: void 0,\n                _v$22: void 0,\n                _v$23: void 0,\n                _v$24: void 0,\n                _v$25: void 0\n            });\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$19.value = selectedView() === \"queries\" ? props.localStore.filter || \"\" : props.localStore.mutationFilter || \"\");\n            return _el$9;\n        })(),\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>selectedView() === \"queries\")() && selectedQueryHash();\n            },\n            get children () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryDetails, {});\n            }\n        }),\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>selectedView() === \"mutations\")() && selectedMutationId();\n            },\n            get children () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(MutationDetails, {});\n            }\n        })\n    ];\n};\n_s60(ContentView, \"FRPlgZJN3ZlxsXRPeHKYRwFyTzM=\", false, function() {\n    return [\n        useTheme,\n        usePiPWindow\n    ];\n});\n_c79 = ContentView;\nvar QueryRow = (props)=>{\n    _s61();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const { colors, alpha } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const queryState = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        return (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.state;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const isDisabled = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        var _queryCache_find_isDisabled;\n        return (_queryCache_find_isDisabled = (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.isDisabled()) !== null && _queryCache_find_isDisabled !== void 0 ? _queryCache_find_isDisabled : false;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const isStale = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        var _queryCache_find_isStale;\n        return (_queryCache_find_isStale = (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.isStale()) !== null && _queryCache_find_isStale !== void 0 ? _queryCache_find_isStale : false;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const observers = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_find;\n        var _queryCache_find_getObserversCount;\n        return (_queryCache_find_getObserversCount = (_queryCache_find = queryCache().find({\n            queryKey: props.query.queryKey\n        })) === null || _queryCache_find === void 0 ? void 0 : _queryCache_find.getObserversCount()) !== null && _queryCache_find_getObserversCount !== void 0 ? _queryCache_find_getObserversCount : 0;\n    }, true, (e2)=>e2.query.queryHash === props.query.queryHash);\n    const color = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusColor)({\n            queryState: queryState(),\n            observerCount: observers(),\n            isStale: isStale()\n        }));\n    const getObserverCountColorStyles = ()=>{\n        if (color() === \"gray\") {\n            return u(_templateObject24(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]));\n        }\n        return u(_templateObject25(), t2(colors[color()][200] + alpha[80], colors[color()][900]), t2(colors[color()][800], colors[color()][300]));\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return queryState();\n        },\n        get children () {\n            const _el$48 = _tmpl$242(), _el$49 = _el$48.firstChild, _el$50 = _el$49.nextSibling;\n            _el$48.$$click = ()=>setSelectedQueryHash(props.query.queryHash === selectedQueryHash() ? null : props.query.queryHash);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$49, observers);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$50, ()=>props.query.queryHash);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$48, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return isDisabled();\n                },\n                get children () {\n                    return _tmpl$232();\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$26 = clsx(styles().queryRow, selectedQueryHash() === props.query.queryHash && styles().selectedQueryRow, \"tsqd-query-row\"), _v$27 = \"Query key \".concat(props.query.queryHash), _v$28 = clsx(getObserverCountColorStyles(), \"tsqd-query-observer-count\");\n                _v$26 !== _p$._v$26 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$48, _p$._v$26 = _v$26);\n                _v$27 !== _p$._v$27 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$48, \"aria-label\", _p$._v$27 = _v$27);\n                _v$28 !== _p$._v$28 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$49, _p$._v$28 = _v$28);\n                return _p$;\n            }, {\n                _v$26: void 0,\n                _v$27: void 0,\n                _v$28: void 0\n            });\n            return _el$48;\n        }\n    });\n};\n_s61(QueryRow, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c80 = QueryRow;\nvar MutationRow = (props)=>{\n    _s62();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const { colors, alpha } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const mutationState = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === props.mutation.mutationId);\n        return mutation === null || mutation === void 0 ? void 0 : mutation.state;\n    });\n    const isPaused = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === props.mutation.mutationId);\n        if (!mutation) return false;\n        return mutation.state.isPaused;\n    });\n    const status = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === props.mutation.mutationId);\n        if (!mutation) return \"idle\";\n        return mutation.state.status;\n    });\n    const color = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n            isPaused: isPaused(),\n            status: status()\n        }));\n    const getObserverCountColorStyles = ()=>{\n        if (color() === \"gray\") {\n            return u(_templateObject26(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]));\n        }\n        return u(_templateObject27(), t2(colors[color()][200] + alpha[80], colors[color()][900]), t2(colors[color()][800], colors[color()][300]));\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return mutationState();\n        },\n        get children () {\n            const _el$52 = _tmpl$242(), _el$53 = _el$52.firstChild, _el$54 = _el$53.nextSibling;\n            _el$52.$$click = ()=>{\n                setSelectedMutationId(props.mutation.mutationId === selectedMutationId() ? null : props.mutation.mutationId);\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"purple\";\n                },\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(PauseCircle, {});\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"green\";\n                },\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(CheckCircle, {});\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"red\";\n                },\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(XCircle, {});\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$53, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"yellow\";\n                },\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(LoadingCircle, {});\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$54, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return props.mutation.options.mutationKey;\n                },\n                get children () {\n                    return [\n                        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>JSON.stringify(props.mutation.options.mutationKey)),\n                        \" -\",\n                        \" \"\n                    ];\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$54, ()=>new Date(props.mutation.state.submittedAt).toLocaleString(), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$29 = clsx(styles().queryRow, selectedMutationId() === props.mutation.mutationId && styles().selectedQueryRow, \"tsqd-query-row\"), _v$30 = \"Mutation submitted at \".concat(new Date(props.mutation.state.submittedAt).toLocaleString()), _v$31 = clsx(getObserverCountColorStyles(), \"tsqd-query-observer-count\");\n                _v$29 !== _p$._v$29 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$52, _p$._v$29 = _v$29);\n                _v$30 !== _p$._v$30 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.setAttribute)(_el$52, \"aria-label\", _p$._v$30 = _v$30);\n                _v$31 !== _p$._v$31 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$53, _p$._v$31 = _v$31);\n                return _p$;\n            }, {\n                _v$29: void 0,\n                _v$30: void 0,\n                _v$31: void 0\n            });\n            return _el$52;\n        }\n    });\n};\n_s62(MutationRow, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c81 = MutationRow;\nvar QueryStatusCount = ()=>{\n    _s63();\n    const stale = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"stale\").length);\n    const fresh = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"fresh\").length);\n    const fetching = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"fetching\").length);\n    const paused = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"paused\").length);\n    const inactive = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().filter((q)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(q) === \"inactive\").length);\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    return (()=>{\n        const _el$55 = _tmpl$26();\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Fresh\",\n            color: \"green\",\n            get count () {\n                return fresh();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Fetching\",\n            color: \"blue\",\n            get count () {\n                return fetching();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Paused\",\n            color: \"purple\",\n            get count () {\n                return paused();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Stale\",\n            color: \"yellow\",\n            get count () {\n                return stale();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$55, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Inactive\",\n            color: \"gray\",\n            get count () {\n                return inactive();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$55, clsx(styles().queryStatusContainer, \"tsqd-query-status-container\")));\n        return _el$55;\n    })();\n};\n_s63(QueryStatusCount, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c82 = QueryStatusCount;\nvar MutationStatusCount = ()=>{\n    _s64();\n    const success = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"green\").length);\n    const pending = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"yellow\").length);\n    const paused = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"purple\").length);\n    const error = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().filter((m)=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n                isPaused: m.state.isPaused,\n                status: m.state.status\n            }) === \"red\").length);\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    return (()=>{\n        const _el$56 = _tmpl$26();\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Paused\",\n            color: \"purple\",\n            get count () {\n                return paused();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Pending\",\n            color: \"yellow\",\n            get count () {\n                return pending();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Success\",\n            color: \"green\",\n            get count () {\n                return success();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$56, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(QueryStatus, {\n            label: \"Error\",\n            color: \"red\",\n            get count () {\n                return error();\n            }\n        }), null);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$56, clsx(styles().queryStatusContainer, \"tsqd-query-status-container\")));\n        return _el$56;\n    })();\n};\n_s64(MutationStatusCount, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c83 = MutationStatusCount;\nvar QueryStatus = (props)=>{\n    _s65();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const { colors, alpha } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    let tagRef;\n    const [mouseOver, setMouseOver] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const [focused, setFocused] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const showLabel = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        if (selectedQueryHash()) {\n            if (panelWidth() < firstBreakpoint && panelWidth() > secondBreakpoint) {\n                return false;\n            }\n        }\n        if (panelWidth() < thirdBreakpoint) {\n            return false;\n        }\n        return true;\n    });\n    return (()=>{\n        const _el$57 = _tmpl$27(), _el$59 = _el$57.firstChild, _el$61 = _el$59.nextSibling;\n        const _ref$4 = tagRef;\n        typeof _ref$4 === \"function\" ? (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.use)(_ref$4, _el$57) : tagRef = _el$57;\n        _el$57.addEventListener(\"mouseleave\", ()=>{\n            setMouseOver(false);\n            setFocused(false);\n        });\n        _el$57.addEventListener(\"mouseenter\", ()=>setMouseOver(true));\n        _el$57.addEventListener(\"blur\", ()=>setFocused(false));\n        _el$57.addEventListener(\"focus\", ()=>setFocused(true));\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.spread)(_el$57, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.mergeProps)({\n            get disabled () {\n                return showLabel();\n            },\n            get [\"class\"] () {\n                return clsx(styles().queryStatusTag, !showLabel() && u(_templateObject28(), t2(colors.gray[200], colors.darkGray[400]), alpha[80]), \"tsqd-query-status-tag\", \"tsqd-query-status-tag-\".concat(props.label.toLowerCase()));\n            }\n        }, ()=>mouseOver() || focused() ? {\n                \"aria-describedby\": \"tsqd-status-tooltip\"\n            } : {}), false, true);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$57, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!!showLabel())() && (mouseOver() || focused());\n            },\n            get children () {\n                const _el$58 = _tmpl$252();\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$58, ()=>props.label);\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$58, clsx(styles().statusTooltip, \"tsqd-query-status-tooltip\")));\n                return _el$58;\n            }\n        }), _el$59);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$57, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n            get when () {\n                return showLabel();\n            },\n            get children () {\n                const _el$60 = _tmpl$262();\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$60, ()=>props.label);\n                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$60, clsx(styles().queryStatusTagLabel, \"tsqd-query-status-tag-label\")));\n                return _el$60;\n            }\n        }), _el$61);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$61, ()=>props.count);\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n            const _v$32 = clsx(u(_templateObject29(), tokens.size[1.5], tokens.size[1.5], tokens.border.radius.full, tokens.colors[props.color][500]), \"tsqd-query-status-tag-dot\"), _v$33 = clsx(styles().queryStatusCount, props.count > 0 && props.color !== \"gray\" && u(_templateObject30(), t2(colors[props.color][100], colors[props.color][900]), t2(colors[props.color][700], colors[props.color][300])), \"tsqd-query-status-tag-count\");\n            _v$32 !== _p$._v$32 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$59, _p$._v$32 = _v$32);\n            _v$33 !== _p$._v$33 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$61, _p$._v$33 = _v$33);\n            return _p$;\n        }, {\n            _v$32: void 0,\n            _v$33: void 0\n        });\n        return _el$57;\n    })();\n};\n_s65(QueryStatus, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c84 = QueryStatus;\nvar QueryDetails = ()=>{\n    _s66();\n    var _s = $RefreshSig$();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const { colors } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const queryClient = useQueryDevtoolsContext().client;\n    const [restoringLoading, setRestoringLoading] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(false);\n    const errorTypes = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        return useQueryDevtoolsContext().errorTypes || [];\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const activeQuery = createSubscribeToQueryCacheBatcher((queryCache)=>queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash()), false);\n    const activeQueryFresh = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        return queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash());\n    }, false);\n    const activeQueryState = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_getAll_find;\n        return (_queryCache_getAll_find = queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash())) === null || _queryCache_getAll_find === void 0 ? void 0 : _queryCache_getAll_find.state;\n    }, false);\n    const activeQueryStateData = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_getAll_find;\n        return (_queryCache_getAll_find = queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash())) === null || _queryCache_getAll_find === void 0 ? void 0 : _queryCache_getAll_find.state.data;\n    }, false);\n    const statusLabel = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        const query = queryCache().getAll().find((q)=>q.queryHash === selectedQueryHash());\n        if (!query) return \"inactive\";\n        return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusLabel)(query);\n    });\n    const queryStatus = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        const query = queryCache().getAll().find((q)=>q.queryHash === selectedQueryHash());\n        if (!query) return \"pending\";\n        return query.state.status;\n    });\n    const observerCount = createSubscribeToQueryCacheBatcher((queryCache)=>{\n        var _queryCache_getAll_find;\n        var _queryCache_getAll_find_getObserversCount;\n        return (_queryCache_getAll_find_getObserversCount = (_queryCache_getAll_find = queryCache().getAll().find((query)=>query.queryHash === selectedQueryHash())) === null || _queryCache_getAll_find === void 0 ? void 0 : _queryCache_getAll_find.getObserversCount()) !== null && _queryCache_getAll_find_getObserversCount !== void 0 ? _queryCache_getAll_find_getObserversCount : 0;\n    });\n    const color = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getQueryStatusColorByLabel)(statusLabel()));\n    const handleRefetch = ()=>{\n        var _activeQuery;\n        const promise = (_activeQuery = activeQuery()) === null || _activeQuery === void 0 ? void 0 : _activeQuery.fetch();\n        promise === null || promise === void 0 ? void 0 : promise.catch(()=>{});\n    };\n    const triggerError = (errorType)=>{\n        var _errorType_initializer;\n        const error = (_errorType_initializer = errorType === null || errorType === void 0 ? void 0 : errorType.initializer(activeQuery())) !== null && _errorType_initializer !== void 0 ? _errorType_initializer : new Error(\"Unknown error from devtools\");\n        const __previousQueryOptions = activeQuery().options;\n        activeQuery().setState({\n            status: \"error\",\n            error,\n            fetchMeta: {\n                ...activeQuery().state.fetchMeta,\n                __previousQueryOptions\n            }\n        });\n    };\n    const restoreQueryAfterLoadingOrError = ()=>{\n        var _activeQuery, _activeQuery1;\n        (_activeQuery1 = activeQuery()) === null || _activeQuery1 === void 0 ? void 0 : _activeQuery1.fetch(((_activeQuery = activeQuery()) === null || _activeQuery === void 0 ? void 0 : _activeQuery.state.fetchMeta).__previousQueryOptions, {\n            // Make sure this fetch will cancel the previous one\n            cancelRefetch: true\n        });\n    };\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        if (statusLabel() !== \"fetching\") {\n            setRestoringLoading(false);\n        }\n    });\n    const getQueryStatusColors = ()=>{\n        if (color() === \"gray\") {\n            return u(_templateObject31(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n        }\n        return u(_templateObject32(), t2(colors[color()][100], colors[color()][900]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>!!activeQuery())() && activeQueryState();\n        },\n        get children () {\n            const _el$62 = _tmpl$30(), _el$63 = _el$62.firstChild, _el$64 = _el$63.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$65.firstChild, _el$67 = _el$66.firstChild, _el$68 = _el$66.nextSibling, _el$69 = _el$65.nextSibling, _el$70 = _el$69.firstChild, _el$71 = _el$70.nextSibling, _el$72 = _el$69.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$73.nextSibling, _el$75 = _el$64.nextSibling, _el$76 = _el$75.nextSibling, _el$77 = _el$76.firstChild, _el$78 = _el$77.firstChild, _el$79 = _el$77.nextSibling, _el$80 = _el$79.firstChild, _el$81 = _el$79.nextSibling, _el$82 = _el$81.firstChild, _el$83 = _el$81.nextSibling, _el$84 = _el$83.firstChild, _el$85 = _el$83.nextSibling, _el$86 = _el$85.firstChild, _el$87 = _el$86.nextSibling, _el$96 = _el$76.nextSibling, _el$97 = _el$96.nextSibling, _el$98 = _el$97.nextSibling, _el$99 = _el$98.nextSibling;\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$67, ()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(activeQuery().queryKey, true));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$68, statusLabel);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$71, observerCount);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$74, ()=>new Date(activeQueryState().dataUpdatedAt).toLocaleTimeString());\n            _el$77.$$click = handleRefetch;\n            _el$79.$$click = ()=>queryClient.invalidateQueries(activeQuery());\n            _el$81.$$click = ()=>queryClient.resetQueries(activeQuery());\n            _el$83.$$click = ()=>{\n                queryClient.removeQueries(activeQuery());\n                setSelectedQueryHash(null);\n            };\n            _el$85.$$click = ()=>{\n                var _activeQuery;\n                if (((_activeQuery = activeQuery()) === null || _activeQuery === void 0 ? void 0 : _activeQuery.state.data) === void 0) {\n                    setRestoringLoading(true);\n                    restoreQueryAfterLoadingOrError();\n                } else {\n                    const activeQueryVal = activeQuery();\n                    if (!activeQueryVal) return;\n                    const __previousQueryOptions = activeQueryVal.options;\n                    activeQueryVal.fetch({\n                        ...__previousQueryOptions,\n                        queryFn: ()=>{\n                            return new Promise(()=>{});\n                        },\n                        gcTime: -1\n                    });\n                    activeQueryVal.setState({\n                        data: void 0,\n                        status: \"pending\",\n                        fetchMeta: {\n                            ...activeQueryVal.state.fetchMeta,\n                            __previousQueryOptions\n                        }\n                    });\n                }\n            };\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$85, ()=>queryStatus() === \"pending\" ? \"Restore\" : \"Trigger\", _el$87);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$76, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return errorTypes().length === 0 || queryStatus() === \"error\";\n                },\n                get children () {\n                    const _el$88 = _tmpl$28(), _el$89 = _el$88.firstChild, _el$90 = _el$89.nextSibling;\n                    _el$88.$$click = ()=>{\n                        if (!activeQuery().state.error) {\n                            triggerError();\n                        } else {\n                            queryClient.resetQueries(activeQuery());\n                        }\n                    };\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$88, ()=>queryStatus() === \"error\" ? \"Restore\" : \"Trigger\", _el$90);\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                        const _v$34 = clsx(u(_templateObject33(), t2(colors.red[500], colors.red[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-error\"), _v$35 = queryStatus() === \"pending\", _v$36 = u(_templateObject34(), t2(colors.red[500], colors.red[400]));\n                        _v$34 !== _p$._v$34 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$88, _p$._v$34 = _v$34);\n                        _v$35 !== _p$._v$35 && (_el$88.disabled = _p$._v$35 = _v$35);\n                        _v$36 !== _p$._v$36 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$89, _p$._v$36 = _v$36);\n                        return _p$;\n                    }, {\n                        _v$34: void 0,\n                        _v$35: void 0,\n                        _v$36: void 0\n                    });\n                    return _el$88;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$76, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return !(errorTypes().length === 0 || queryStatus() === \"error\");\n                },\n                get children () {\n                    const _el$91 = _tmpl$29(), _el$92 = _el$91.firstChild, _el$93 = _el$92.nextSibling, _el$94 = _el$93.nextSibling;\n                    _el$94.firstChild;\n                    _el$94.addEventListener(\"change\", (e2)=>{\n                        const errorType = errorTypes().find((et)=>et.name === e2.currentTarget.value);\n                        triggerError(errorType);\n                    });\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$94, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.For, {\n                        get each () {\n                            return errorTypes();\n                        },\n                        children: (errorType)=>(()=>{\n                                const _el$100 = _tmpl$31();\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$100, ()=>errorType.name);\n                                (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)(()=>_el$100.value = errorType.name);\n                                return _el$100;\n                            })()\n                    }), null);\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$91, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(ChevronDown, {}), null);\n                    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                        const _v$37 = clsx(styles().actionsSelect, \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-error-multiple\"), _v$38 = u(_templateObject35(), tokens.colors.red[400]), _v$39 = queryStatus() === \"pending\";\n                        _v$37 !== _p$._v$37 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$91, _p$._v$37 = _v$37);\n                        _v$38 !== _p$._v$38 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$92, _p$._v$38 = _v$38);\n                        _v$39 !== _p$._v$39 && (_el$94.disabled = _p$._v$39 = _v$39);\n                        return _p$;\n                    }, {\n                        _v$37: void 0,\n                        _v$38: void 0,\n                        _v$39: void 0\n                    });\n                    return _el$91;\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$97, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Data\",\n                defaultExpanded: [\n                    \"Data\"\n                ],\n                get value () {\n                    return activeQueryStateData();\n                },\n                editable: true,\n                get activeQuery () {\n                    return activeQuery();\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$99, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Query\",\n                defaultExpanded: [\n                    \"Query\",\n                    \"queryKey\"\n                ],\n                get value () {\n                    return activeQueryFresh();\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$40 = clsx(styles().detailsContainer, \"tsqd-query-details-container\"), _v$41 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$42 = clsx(styles().detailsBody, \"tsqd-query-details-summary-container\"), _v$43 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$44 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$45 = clsx(styles().actionsBody, \"tsqd-query-details-actions-container\"), _v$46 = clsx(u(_templateObject36(), t2(colors.blue[600], colors.blue[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-refetch\"), _v$47 = statusLabel() === \"fetching\", _v$48 = u(_templateObject37(), t2(colors.blue[600], colors.blue[400])), _v$49 = clsx(u(_templateObject38(), t2(colors.yellow[600], colors.yellow[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-invalidate\"), _v$50 = queryStatus() === \"pending\", _v$51 = u(_templateObject39(), t2(colors.yellow[600], colors.yellow[400])), _v$52 = clsx(u(_templateObject40(), t2(colors.gray[600], colors.gray[300])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-reset\"), _v$53 = queryStatus() === \"pending\", _v$54 = u(_templateObject41(), t2(colors.gray[600], colors.gray[400])), _v$55 = clsx(u(_templateObject42(), t2(colors.pink[500], colors.pink[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-remove\"), _v$56 = statusLabel() === \"fetching\", _v$57 = u(_templateObject43(), t2(colors.pink[500], colors.pink[400])), _v$58 = clsx(u(_templateObject44(), t2(colors.cyan[500], colors.cyan[400])), \"tsqd-query-details-actions-btn\", \"tsqd-query-details-action-loading\"), _v$59 = restoringLoading(), _v$60 = u(_templateObject45(), t2(colors.cyan[500], colors.cyan[400])), _v$61 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$62 = tokens.size[2], _v$63 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$64 = tokens.size[2];\n                _v$40 !== _p$._v$40 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$62, _p$._v$40 = _v$40);\n                _v$41 !== _p$._v$41 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$63, _p$._v$41 = _v$41);\n                _v$42 !== _p$._v$42 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$64, _p$._v$42 = _v$42);\n                _v$43 !== _p$._v$43 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$68, _p$._v$43 = _v$43);\n                _v$44 !== _p$._v$44 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$75, _p$._v$44 = _v$44);\n                _v$45 !== _p$._v$45 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$76, _p$._v$45 = _v$45);\n                _v$46 !== _p$._v$46 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$77, _p$._v$46 = _v$46);\n                _v$47 !== _p$._v$47 && (_el$77.disabled = _p$._v$47 = _v$47);\n                _v$48 !== _p$._v$48 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$78, _p$._v$48 = _v$48);\n                _v$49 !== _p$._v$49 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$79, _p$._v$49 = _v$49);\n                _v$50 !== _p$._v$50 && (_el$79.disabled = _p$._v$50 = _v$50);\n                _v$51 !== _p$._v$51 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$80, _p$._v$51 = _v$51);\n                _v$52 !== _p$._v$52 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$81, _p$._v$52 = _v$52);\n                _v$53 !== _p$._v$53 && (_el$81.disabled = _p$._v$53 = _v$53);\n                _v$54 !== _p$._v$54 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$82, _p$._v$54 = _v$54);\n                _v$55 !== _p$._v$55 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$83, _p$._v$55 = _v$55);\n                _v$56 !== _p$._v$56 && (_el$83.disabled = _p$._v$56 = _v$56);\n                _v$57 !== _p$._v$57 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$84, _p$._v$57 = _v$57);\n                _v$58 !== _p$._v$58 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$85, _p$._v$58 = _v$58);\n                _v$59 !== _p$._v$59 && (_el$85.disabled = _p$._v$59 = _v$59);\n                _v$60 !== _p$._v$60 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$86, _p$._v$60 = _v$60);\n                _v$61 !== _p$._v$61 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$96, _p$._v$61 = _v$61);\n                _v$62 !== _p$._v$62 && ((_p$._v$62 = _v$62) != null ? _el$97.style.setProperty(\"padding\", _v$62) : _el$97.style.removeProperty(\"padding\"));\n                _v$63 !== _p$._v$63 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$98, _p$._v$63 = _v$63);\n                _v$64 !== _p$._v$64 && ((_p$._v$64 = _v$64) != null ? _el$99.style.setProperty(\"padding\", _v$64) : _el$99.style.removeProperty(\"padding\"));\n                return _p$;\n            }, {\n                _v$40: void 0,\n                _v$41: void 0,\n                _v$42: void 0,\n                _v$43: void 0,\n                _v$44: void 0,\n                _v$45: void 0,\n                _v$46: void 0,\n                _v$47: void 0,\n                _v$48: void 0,\n                _v$49: void 0,\n                _v$50: void 0,\n                _v$51: void 0,\n                _v$52: void 0,\n                _v$53: void 0,\n                _v$54: void 0,\n                _v$55: void 0,\n                _v$56: void 0,\n                _v$57: void 0,\n                _v$58: void 0,\n                _v$59: void 0,\n                _v$60: void 0,\n                _v$61: void 0,\n                _v$62: void 0,\n                _v$63: void 0,\n                _v$64: void 0\n            });\n            return _el$62;\n        }\n    });\n};\n_s66(QueryDetails, \"G4I9cKpFG1IYYZ1odxtRaK00Ock=\", false, function() {\n    return [\n        useTheme,\n        useQueryDevtoolsContext\n    ];\n});\n_c85 = QueryDetails;\nvar MutationDetails = ()=>{\n    _s67();\n    const theme = useTheme();\n    const styles = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>{\n        return theme() === \"dark\" ? darkStyles2 : lightStyles2;\n    });\n    const { colors } = tokens;\n    const t2 = (light, dark)=>theme() === \"dark\" ? dark : light;\n    const isPaused = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === selectedMutationId());\n        if (!mutation) return false;\n        return mutation.state.isPaused;\n    });\n    const status = createSubscribeToMutationCacheBatcher((mutationCache)=>{\n        const mutations = mutationCache().getAll();\n        const mutation = mutations.find((m)=>m.mutationId === selectedMutationId());\n        if (!mutation) return \"idle\";\n        return mutation.state.status;\n    });\n    const color = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(()=>(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.getMutationStatusColor)({\n            isPaused: isPaused(),\n            status: status()\n        }));\n    const activeMutation = createSubscribeToMutationCacheBatcher((mutationCache)=>mutationCache().getAll().find((mutation)=>mutation.mutationId === selectedMutationId()), false);\n    const getQueryStatusColors = ()=>{\n        if (color() === \"gray\") {\n            return u(_templateObject46(), t2(colors[color()][200], colors[color()][700]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n        }\n        return u(_templateObject47(), t2(colors[color()][100], colors[color()][900]), t2(colors[color()][700], colors[color()][300]), t2(colors[color()][400], colors[color()][600]));\n    };\n    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n        get when () {\n            return activeMutation();\n        },\n        get children () {\n            const _el$101 = _tmpl$322(), _el$102 = _el$101.firstChild, _el$103 = _el$102.nextSibling, _el$104 = _el$103.firstChild, _el$105 = _el$104.firstChild, _el$106 = _el$105.firstChild, _el$107 = _el$105.nextSibling, _el$108 = _el$104.nextSibling, _el$109 = _el$108.firstChild, _el$110 = _el$109.nextSibling, _el$111 = _el$103.nextSibling, _el$112 = _el$111.nextSibling, _el$113 = _el$112.nextSibling, _el$114 = _el$113.nextSibling, _el$115 = _el$114.nextSibling, _el$116 = _el$115.nextSibling, _el$117 = _el$116.nextSibling, _el$118 = _el$117.nextSibling;\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$106, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return activeMutation().options.mutationKey;\n                },\n                fallback: \"No mutationKey found\",\n                get children () {\n                    return (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.displayValue)(activeMutation().options.mutationKey, true);\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$107, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() === \"purple\";\n                },\n                children: \"pending\"\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$107, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.Show, {\n                get when () {\n                    return color() !== \"purple\";\n                },\n                get children () {\n                    return status();\n                }\n            }), null);\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$110, ()=>new Date(activeMutation().state.submittedAt).toLocaleTimeString());\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$112, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Variables\",\n                defaultExpanded: [\n                    \"Variables\"\n                ],\n                get value () {\n                    return activeMutation().state.variables;\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$114, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Context\",\n                defaultExpanded: [\n                    \"Context\"\n                ],\n                get value () {\n                    return activeMutation().state.context;\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$116, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Data\",\n                defaultExpanded: [\n                    \"Data\"\n                ],\n                get value () {\n                    return activeMutation().state.data;\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.insert)(_el$118, (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createComponent)(Explorer, {\n                label: \"Mutation\",\n                defaultExpanded: [\n                    \"Mutation\"\n                ],\n                get value () {\n                    return activeMutation();\n                }\n            }));\n            (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createRenderEffect)((_p$)=>{\n                const _v$65 = clsx(styles().detailsContainer, \"tsqd-query-details-container\"), _v$66 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$67 = clsx(styles().detailsBody, \"tsqd-query-details-summary-container\"), _v$68 = clsx(styles().queryDetailsStatus, getQueryStatusColors()), _v$69 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$70 = tokens.size[2], _v$71 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$72 = tokens.size[2], _v$73 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$74 = tokens.size[2], _v$75 = clsx(styles().detailsHeader, \"tsqd-query-details-header\"), _v$76 = tokens.size[2];\n                _v$65 !== _p$._v$65 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$101, _p$._v$65 = _v$65);\n                _v$66 !== _p$._v$66 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$102, _p$._v$66 = _v$66);\n                _v$67 !== _p$._v$67 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$103, _p$._v$67 = _v$67);\n                _v$68 !== _p$._v$68 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$107, _p$._v$68 = _v$68);\n                _v$69 !== _p$._v$69 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$111, _p$._v$69 = _v$69);\n                _v$70 !== _p$._v$70 && ((_p$._v$70 = _v$70) != null ? _el$112.style.setProperty(\"padding\", _v$70) : _el$112.style.removeProperty(\"padding\"));\n                _v$71 !== _p$._v$71 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$113, _p$._v$71 = _v$71);\n                _v$72 !== _p$._v$72 && ((_p$._v$72 = _v$72) != null ? _el$114.style.setProperty(\"padding\", _v$72) : _el$114.style.removeProperty(\"padding\"));\n                _v$73 !== _p$._v$73 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$115, _p$._v$73 = _v$73);\n                _v$74 !== _p$._v$74 && ((_p$._v$74 = _v$74) != null ? _el$116.style.setProperty(\"padding\", _v$74) : _el$116.style.removeProperty(\"padding\"));\n                _v$75 !== _p$._v$75 && (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.className)(_el$117, _p$._v$75 = _v$75);\n                _v$76 !== _p$._v$76 && ((_p$._v$76 = _v$76) != null ? _el$118.style.setProperty(\"padding\", _v$76) : _el$118.style.removeProperty(\"padding\"));\n                return _p$;\n            }, {\n                _v$65: void 0,\n                _v$66: void 0,\n                _v$67: void 0,\n                _v$68: void 0,\n                _v$69: void 0,\n                _v$70: void 0,\n                _v$71: void 0,\n                _v$72: void 0,\n                _v$73: void 0,\n                _v$74: void 0,\n                _v$75: void 0,\n                _v$76: void 0\n            });\n            return _el$101;\n        }\n    });\n};\n_s67(MutationDetails, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function() {\n    return [\n        useTheme\n    ];\n});\n_c86 = MutationDetails;\nvar queryCacheMap = /* @__PURE__ */ new Map();\nvar setupQueryCacheSubscription = ()=>{\n    var _s = $RefreshSig$();\n    const queryCache = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getQueryCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const unsubscribe = queryCache().subscribe((q)=>{\n        (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.batch)(()=>{\n            for (const [callback, value] of queryCacheMap.entries()){\n                if (!value.shouldUpdate(q)) continue;\n                value.setter(callback(queryCache));\n            }\n        });\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        queryCacheMap.clear();\n        unsubscribe();\n    });\n    return unsubscribe;\n};\nvar createSubscribeToQueryCacheBatcher = function(callback) {\n    let equalityCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, shouldUpdate = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>true;\n    var _s = $RefreshSig$();\n    const queryCache = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getQueryCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const [value, setValue] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(callback(queryCache), !equalityCheck ? {\n        equals: false\n    } : void 0);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        setValue(callback(queryCache));\n    });\n    queryCacheMap.set(callback, {\n        setter: setValue,\n        shouldUpdate\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        queryCacheMap.delete(callback);\n    });\n    return value;\n};\nvar mutationCacheMap = /* @__PURE__ */ new Map();\nvar setupMutationCacheSubscription = ()=>{\n    var _s = $RefreshSig$();\n    const mutationCache = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getMutationCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const unsubscribe = mutationCache().subscribe(()=>{\n        for (const [callback, setter] of mutationCacheMap.entries()){\n            queueMicrotask(()=>{\n                setter(callback(mutationCache));\n            });\n        }\n    });\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        mutationCacheMap.clear();\n        unsubscribe();\n    });\n    return unsubscribe;\n};\nvar createSubscribeToMutationCacheBatcher = function(callback) {\n    let equalityCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    var _s = $RefreshSig$();\n    const mutationCache = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createMemo)(_s(()=>{\n        _s();\n        const client = useQueryDevtoolsContext().client;\n        return client.getMutationCache();\n    }, \"yurpmIDLi492InJlcUnt6fCmTL4=\", false, function() {\n        return [\n            useQueryDevtoolsContext\n        ];\n    }));\n    const [value, setValue] = (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createSignal)(callback(mutationCache), !equalityCheck ? {\n        equals: false\n    } : void 0);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.createEffect)(()=>{\n        setValue(callback(mutationCache));\n    });\n    mutationCacheMap.set(callback, setValue);\n    (0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.onCleanup)(()=>{\n        mutationCacheMap.delete(callback);\n    });\n    return value;\n};\nvar stylesFactory2 = (theme)=>{\n    const { colors, font, size: size2, alpha, shadow, border } = tokens;\n    const t2 = (light, dark)=>theme === \"light\" ? light : dark;\n    return {\n        devtoolsBtn: u(_templateObject48(), shadow.md(), colors.green[600]),\n        panel: u(_templateObject49(), tokens.size[0.5], t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[400], colors.darkGray[300])),\n        \"devtoolsBtn-position-bottom-right\": u(_templateObject50()),\n        \"devtoolsBtn-position-bottom-left\": u(_templateObject51()),\n        \"devtoolsBtn-position-top-left\": u(_templateObject52()),\n        \"devtoolsBtn-position-top-right\": u(_templateObject53()),\n        \"devtoolsBtn-position-relative\": u(_templateObject54()),\n        \"panel-position-top\": u(_templateObject55(), size2[14], t2(colors.gray[400], colors.darkGray[300])),\n        \"panel-position-bottom\": u(_templateObject56(), size2[14], t2(colors.gray[400], colors.darkGray[300])),\n        \"panel-position-right\": u(_templateObject57(), t2(colors.gray[400], colors.darkGray[300])),\n        \"panel-position-left\": u(_templateObject58(), t2(colors.gray[400], colors.darkGray[300])),\n        closeBtn: u(_templateObject59(), t2(colors.gray[50], colors.darkGray[700]), t2(colors.gray[200], colors.darkGray[500]), colors.blue[600], t2(colors.gray[600], colors.gray[400]), size2[2], size2[2]),\n        \"closeBtn-position-top\": u(_templateObject60(), size2[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size2[0.5], size2[1.5], size2[1], size2[1.5], size2[2.5], size2[1.5], size2[5]),\n        \"closeBtn-position-bottom\": u(_templateObject61(), size2[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size2[1], size2[1.5], size2[0.5], size2[1.5], size2[2.5], size2[1.5], size2[5]),\n        \"closeBtn-position-right\": u(_templateObject62(), size2[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size2[1.5], size2[0.5], size2[1.5], size2[1], size2[5], size2[1.5]),\n        \"closeBtn-position-left\": u(_templateObject63(), size2[2], t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), t2(colors.gray[400], colors.darkGray[300]), border.radius.sm, border.radius.sm, size2[1.5], size2[1], size2[1.5], size2[0.5], size2[5], size2[1.5]),\n        queriesContainer: u(_templateObject64(), t2(colors.gray[50], colors.darkGray[700])),\n        dragHandle: u(_templateObject65(), colors.purple[400], t2(\"\", alpha[90])),\n        \"dragHandle-position-top\": u(_templateObject66()),\n        \"dragHandle-position-bottom\": u(_templateObject67()),\n        \"dragHandle-position-right\": u(_templateObject68()),\n        \"dragHandle-position-left\": u(_templateObject69()),\n        row: u(_templateObject70(), tokens.size[2], tokens.size[2.5], tokens.size[2.5], t2(colors.gray[300], colors.darkGray[500]), size2[0.5]),\n        logoAndToggleContainer: u(_templateObject71(), tokens.size[3]),\n        logo: u(_templateObject72(), tokens.size[0.5], border.radius.xs, colors.blue[800]),\n        tanstackLogo: u(_templateObject73(), font.size.md, font.weight.bold, font.lineHeight.xs, t2(colors.gray[600], colors.gray[300])),\n        queryFlavorLogo: u(_templateObject74(), font.weight.semibold, font.size.xs, t2(\"#ea4037, #ff9b11\", \"#dd524b, #e9a03b\")),\n        queryStatusContainer: u(_templateObject75(), tokens.size[2]),\n        queryStatusTag: u(_templateObject76(), tokens.size[1.5], tokens.size[6.5], t2(colors.gray[50], colors.darkGray[500]), t2(colors.gray[700], colors.gray[300]), tokens.border.radius.sm, font.size.sm, tokens.size[1], tokens.size[1.5], font.weight.medium, t2(\"1px solid \" + colors.gray[300], \"1px solid transparent\"), colors.blue[800]),\n        queryStatusTagLabel: u(_templateObject77(), font.size.xs),\n        queryStatusCount: u(_templateObject78(), font.size.xs, t2(colors.gray[500], colors.gray[400]), t2(colors.gray[200], colors.darkGray[300]), tokens.size[4.5]),\n        statusTooltip: u(_templateObject79(), t2(colors.gray[50], colors.darkGray[500]), tokens.size[2], tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, font.size.xs, t2(colors.gray[400], colors.gray[600]), t2(colors[\"gray\"][600], colors[\"gray\"][300]), t2(colors.gray[400], colors.gray[600]), t2(colors.gray[100], colors.darkGray[500])),\n        filtersContainer: u(_templateObject80(), tokens.size[2], tokens.size[0.5], tokens.size[1.5], tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[700], colors.gray[300]), font.size.xs, font.lineHeight.sm, tokens.size[1.5], border.radius.xs, colors.blue[800], tokens.size[3], tokens.size[3], t2(colors.gray[500], colors.gray[400])),\n        filterInput: u(_templateObject81(), size2[0.5], size2[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), tokens.size[1.5], t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[600], colors.gray[400]), size2[3], size2[3], font.size.xs, t2(colors.gray[100], colors.darkGray[400]), font.lineHeight.sm, t2(colors.gray[700], colors.gray[300]), t2(colors.gray[700], colors.gray[300]), border.radius.xs, colors.blue[800]),\n        filterSelect: u(_templateObject82(), tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), tokens.size[1.5], t2(colors.gray[300], colors.darkGray[200]), t2(colors.gray[600], colors.gray[400]), tokens.size[2], tokens.size[2], t2(colors.gray[700], colors.gray[300]), font.lineHeight.sm, font.size.xs, t2(colors.gray[100], colors.darkGray[400]), border.radius.xs, colors.blue[800]),\n        actionsContainer: u(_templateObject83(), tokens.size[2]),\n        actionsBtn: u(_templateObject84(), tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[400]), t2(colors.gray[300], colors.darkGray[200]), tokens.size[6.5], tokens.size[6.5], tokens.size[1.5], t2(colors.gray[200], colors.darkGray[500]), t2(colors.gray[700], colors.gray[300]), tokens.size[3], tokens.size[3], border.radius.xs, colors.blue[800]),\n        actionsBtnOffline: u(_templateObject85(), t2(colors.yellow[700], colors.yellow[500]), t2(colors.yellow[700], colors.yellow[500])),\n        overflowQueryContainer: u(_templateObject86()),\n        queryRow: u(_templateObject87(), t2(colors.gray[700], colors.gray[300]), t2(colors.gray[50], colors.darkGray[700]), border.radius.xs, colors.blue[800], t2(colors.gray[200], colors.darkGray[600]), tokens.size[1], tokens.size[6.5], font.size.xs, font.weight.medium, t2(colors.gray[300], colors.darkGray[700]), font.size.xs, tokens.size[6], tokens.size[1], tokens.size[2], t2(colors.gray[300], colors.darkGray[400]), tokens.size[2], t2(colors.gray[800], colors.gray[300]), t2(colors.gray[300], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[400]), font.size.xs),\n        selectedQueryRow: u(_templateObject88(), t2(colors.gray[200], colors.darkGray[500])),\n        detailsContainer: u(_templateObject89(), t2(colors.gray[50], colors.darkGray[700]), t2(colors.gray[700], colors.gray[300])),\n        detailsHeader: u(_templateObject90(), t2(colors.gray[200], colors.darkGray[600]), tokens.size[1.5], tokens.size[2], font.weight.medium, font.size.xs, font.lineHeight.xs),\n        detailsBody: u(_templateObject91(), tokens.size[1.5], tokens.size[2], tokens.size[2], font.lineHeight.sm, font.size.xs, tokens.size[1.5], font.size.xs, font.lineHeight.xs),\n        queryDetailsStatus: u(_templateObject92(), colors.darkGray[200], tokens.border.radius.sm, font.weight.medium, tokens.size[1], tokens.size[2.5]),\n        actionsBody: u(_templateObject93(), tokens.size[2], tokens.size[2], tokens.size[2], tokens.size[2], font.size.xs, tokens.size[1], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[400]), tokens.size[2], font.weight.medium, font.lineHeight.xs, border.radius.xs, colors.blue[800], t2(colors.gray[200], colors.darkGray[500]), size2[1.5], size2[1.5], tokens.border.radius.full),\n        actionsSelect: u(_templateObject94(), font.size.xs, tokens.size[0.5], tokens.size[2], tokens.border.radius.sm, t2(colors.gray[100], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[400]), tokens.size[2], font.weight.medium, font.lineHeight.sm, t2(colors.red[500], colors.red[400]), t2(colors.gray[200], colors.darkGray[500]), size2[1.5], size2[1.5], tokens.border.radius.full, border.radius.xs, colors.blue[800], tokens.colors.red[400], tokens.size[2], tokens.size[2]),\n        settingsMenu: u(_templateObject95(), size2[0.5], tokens.border.radius.sm, t2(colors.gray[300], colors.gray[700]), t2(colors.gray[50], colors.darkGray[600]), font.size.xs, t2(colors.gray[700], colors.gray[300]), size2[0.5]),\n        settingsSubTrigger: u(_templateObject96(), tokens.border.radius.xs, tokens.size[1], tokens.size[1], t2(colors.gray[700], colors.gray[300]), t2(colors.gray[600], colors.gray[400]), tokens.size[2], tokens.size[2], t2(colors.gray[200], colors.darkGray[500]), colors.blue[800]),\n        settingsMenuHeader: u(_templateObject97(), tokens.size[1], tokens.size[1], font.weight.medium, t2(colors.gray[300], colors.darkGray[400]), t2(colors.gray[500], colors.gray[400]), font.size[\"xs\"]),\n        settingsSubButton: u(_templateObject98(), t2(colors.gray[700], colors.gray[300]), font.size[\"xs\"], tokens.border.radius.xs, tokens.size[1], tokens.size[1], t2(colors.gray[600], colors.gray[400]), t2(colors.gray[200], colors.darkGray[500]), colors.blue[800]),\n        themeSelectedButton: u(_templateObject99(), t2(colors.purple[100], colors.purple[900]), t2(colors.purple[700], colors.purple[300]), t2(colors.purple[700], colors.purple[300]), t2(colors.purple[100], colors.purple[900])),\n        viewToggle: u(_templateObject100(), tokens.border.radius.sm, t2(colors.gray[200], colors.darkGray[600]), t2(colors.gray[300], colors.darkGray[200]), font.size.xs, t2(colors.gray[700], colors.gray[300]), colors.blue[800], font.lineHeight.md, t2(colors.gray[100], colors.darkGray[500]), t2(colors.gray[100], colors.darkGray[400]), t2(colors.gray[100], colors.darkGray[400]), tokens.size[1.5], tokens.size[2], t2(colors.gray[300], colors.darkGray[200]), tokens.size[2], tokens.size[1.5])\n    };\n};\nvar lightStyles2 = stylesFactory2(\"light\");\nvar darkStyles2 = stylesFactory2(\"dark\");\n(0,_chunk_KQZGNKMT_js__WEBPACK_IMPORTED_MODULE_1__.delegateEvents)([\n    \"click\",\n    \"mousedown\",\n    \"input\"\n]);\n/*! Bundled license information:\n\n@tanstack/match-sorter-utils/build/lib/index.mjs:\n  (**\n     * match-sorter-utils\n     *\n     * Copyright (c) TanStack\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE.md file in the root directory of this source tree.\n     *\n     * @license MIT\n     *)\n  (**\n   * @name match-sorter\n   * @license MIT license.\n   * @copyright (c) 2099 Kent C. Dodds\n   * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)\n   *)\n\n@kobalte/utils/dist/index.js:\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/da142672eddefa99365773ced72171facc06fdcb/packages/ariakit-utils/src/array.ts\n   *)\n  (*!\n   * Original code by Chakra UI\n   * MIT Licensed, Copyright (c) 2019 Segun Adebayo.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/chakra-ui/blob/main/packages/utils/src/assertion.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/solidjs-community/solid-aria/blob/2c5f54feb5cfea514b1ee0a52d0416878f882351/packages/utils/src/createGlobalListeners.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/232bc79018ec20967fec1e097a9474aba3bb5be7/packages/ariakit-utils/src/dom.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/cf9ab24f3255be1530d0f584061a01aa1e8180e6/packages/@react-aria/utils/src/platform.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/focusWithoutScrolling.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/main/packages/ariakit-utils/src/focus.ts\n   *\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/focus/src/isElementVisible.ts\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/focus/src/FocusScope.tsx\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/f6e686fe9d3b983d48650980c1ecfdde320bc62f/packages/@react-aria/focus/src/FocusScope.tsx\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/getScrollParent.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/isVirtualEvent.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/ff3e690fffc6c54367b8057e28a0e5b9211f37b5/packages/@react-stately/utils/src/number.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/84e97943ad637a582c01c9b56d880cd95f595737/packages/ariakit/src/hovercard/__utils/polygon.ts\n   * https://github.com/ariakit/ariakit/blob/f2a96973de523d67e41eec983263936c489ef3e2/packages/ariakit/src/hovercard/__utils/debug-polygon.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a9dea8a3672179e6c38aafd1429daf44c7ea2ff6/packages/@react-aria/utils/src/runAfterTransition.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/utils/src/scrollIntoView.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Original code by Chakra UI\n   * MIT Licensed, Copyright (c) 2019 Segun Adebayo.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/chakra-ui/blob/main/packages/color-mode/src/color-mode-context.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Original code by Chakra UI\n   * MIT Licensed, Copyright (c) 2019 Segun Adebayo.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/chakra-ui/blob/main/packages/color-mode/src/storage-manager.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Original code by Chakra UI\n   * MIT Licensed, Copyright (c) 2019 Segun Adebayo.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/chakra-ui/blob/main/packages/color-mode/src/color-mode.utils.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/collections/src/useCollection.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/22cb32d329e66c60f55d4fc4025d1d44bb015d71/packages/@react-stately/collections/src/getItemCount.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from radix-ui-primitives.\n   * MIT Licensed, Copyright (c) 2022 WorkOS.\n   *\n   * Credits to the Radix UI team:\n   * https://github.com/radix-ui/primitives/blob/81b25f4b40c54f72aeb106ca0e64e1e09655153e/packages/react/dismissable-layer/src/DismissableLayer.tsx\n   *\n   * Portions of this file are based on code from zag.\n   * MIT Licensed, Copyright (c) 2021 Chakra UI.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/zag/blob/d1dbf9e240803c9e3ed81ebef363739be4273de0/packages/utilities/dismissable/src/layer-stack.ts\n   *)\n  (*!\n   * Portions of this file are based on code from radix-ui-primitives.\n   * MIT Licensed, Copyright (c) 2022 WorkOS.\n   *\n   * Credits to the Radix UI team:\n   * https://github.com/radix-ui/primitives/blob/81b25f4b40c54f72aeb106ca0e64e1e09655153e/packages/react/focus-scope/src/FocusScope.tsx\n   *\n   * Portions of this file are based on code from zag.\n   * MIT Licensed, Copyright (c) 2021 Chakra UI.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/zag/blob/d1dbf9e240803c9e3ed81ebef363739be4273de0/packages/utilities/focus-scope/src/focus-on-child-unmount.ts\n   * https://github.com/chakra-ui/zag/blob/d1dbf9e240803c9e3ed81ebef363739be4273de0/packages/utilities/focus-scope/src/focus-containment.ts\n   *)\n  (*!\n   * Portions of this file are based on code from zag.\n   * MIT Licensed, Copyright (c) 2021 Chakra UI.\n   *\n   * Credits to the zag team:\n   * https://github.com/chakra-ui/zag/blob/c1e6c7689b22bf58741ded7cf224dd9baec2a046/packages/utilities/form-utils/src/form.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/15e101b74966bd5eb719c6529ce71ce57eaed430/packages/@react-aria/live-announcer/src/LiveAnnouncer.tsx\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * This file is based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/810579b671791f1593108f62cdc1893de3a220e3/packages/@react-aria/overlays/src/ariaHideOutside.ts\n   *)\n  (*!\n   * Portions of this file are based on code from radix-ui-primitives.\n   * MIT Licensed, Copyright (c) 2022 WorkOS.\n   *\n   * Credits to the Radix UI team:\n   * https://github.com/radix-ui/primitives/blob/81b25f4b40c54f72aeb106ca0e64e1e09655153e/packages/react/dismissable-layer/src/DismissableLayer.tsx\n   *\n   * Portions of this file are based on code from zag.\n   * MIT Licensed, Copyright (c) 2021 Chakra UI.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/zag/blob/d1dbf9e240803c9e3ed81ebef363739be4273de0/packages/utilities/interact-outside/src/index.ts\n   *)\n  (*!\n   * Portions of this file are based on code from radix-ui-primitives.\n   * MIT Licensed, Copyright (c) 2022 WorkOS.\n   *\n   * Credits to the Radix UI team:\n   * https://github.com/radix-ui/primitives/blob/21a7c97dc8efa79fecca36428eec49f187294085/packages/react/presence/src/Presence.tsx\n   * https://github.com/radix-ui/primitives/blob/21a7c97dc8efa79fecca36428eec49f187294085/packages/react/presence/src/useStateMachine.tsx\n   *)\n  (*!\n   * Portions of this file are based on code from floating-ui.\n   * MIT Licensed, Copyright (c) 2021 Floating UI contributors.\n   *\n   * Credits to the Floating UI contributors:\n   * https://github.com/floating-ui/floating-ui/blob/f7ce9420aa32c150eb45049f12cf3b5506715341/packages/react/src/components/FloatingOverlay.tsx\n   *\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/5d8a1f047fcadcf117073c70359663a3946b73bf/packages/ariakit/src/dialog/__utils/use-prevent-body-scroll.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the ariakit team:\n   * https://github.com/ariakit/ariakit/blob/8a13899ff807bbf39f3d89d2d5964042ba4d5287/packages/ariakit-react-utils/src/hooks.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/a13802d8be6f83af1450e56f7a88527b10d9cadf/packages/@react-stately/toggle/src/useToggleState.ts\n   *)\n  (*!\n   * Portions of this file are based on code from mantinedev.\n   * MIT Licensed, Copyright (c) 2021 Vitaly Rtishchev.\n   *\n   * Credits to the Mantinedev team:\n   * https://github.com/mantinedev/mantine/blob/8546c580fdcaa9653edc6f4813103349a96cfb09/src/mantine-core/src/Transition/get-transition-styles/get-transition-styles.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from mantinedev.\n   * MIT Licensed, Copyright (c) 2021 Vitaly Rtishchev.\n   *\n   * Credits to the Mantinedev team:\n   * https://github.com/mantinedev/mantine/blob/8546c580fdcaa9653edc6f4813103349a96cfb09/src/mantine-core/src/Transition/use-transition.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/70e7caf1946c423bc9aa9cb0e50dbdbe953d239b/packages/@react-aria/label/src/useField.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/i18n/src/utils.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/i18n/src/useDefaultLocale.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/i18n/src/useCollator.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/15e101b74966bd5eb719c6529ce71ce57eaed430/packages/@react-aria/i18n/src/useDateFormatter.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/22cb32d329e66c60f55d4fc4025d1d44bb015d71/packages/@react-aria/i18n/src/useFilter.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/23c3a91e7b87952f07da9da115188bd2abd99d77/packages/@react-aria/i18n/src/useMessageFormatter.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/i18n/src/useNumberFormatter.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/selection/src/Selection.ts\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/selection/src/types.ts\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-types/shared/src/selection.d.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/selection/src/utils.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/selection/src/useMultipleSelectionState.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/selection/src/useTypeSelect.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/selection/src/useSelectableCollection.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/selection/src/useSelectableItem.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/selection/src/SelectionManager.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/list/src/ListCollection.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/bfce84fee12a027d9cbc38b43e1747e3e4b4b169/packages/@react-stately/list/src/useListState.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/selection/src/ListKeyboardDelegate.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-aria/selection/src/useSelectableList.ts\n   *)\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/8f2f2acb3d5850382ebe631f055f88c704aa7d17/packages/@react-stately/list/src/useSingleSelectListState.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from ariakit\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the ariakit team:\n   * https://github.com/hope-ui/hope-ui/blob/54125b130195f37161dbeeea0c21dc3b198bc3ac/packages/core/src/button/is-button.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/da142672eddefa99365773ced72171facc06fdcb/packages/ariakit/src/collection/collection-state.ts\n   *)\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/da142672eddefa99365773ced72171facc06fdcb/packages/ariakit/src/collection/collection.tsx\n   * https://github.com/ariakit/ariakit/blob/da142672eddefa99365773ced72171facc06fdcb/packages/ariakit/src/collection/collection-state.ts\n   * https://github.com/ariakit/ariakit/blob/da142672eddefa99365773ced72171facc06fdcb/packages/ariakit/src/collection/collection-item.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/0a1d0cd4e1b2f77eed7c0ea08fce8a04f8de6921/packages/@react-stately/calendar/src/utils.ts\n   *\n   * Portions of this file are based on code from zag, based on code from react-spectrum.\n   * MIT Licensed, Copyright (c) 2021 Chakra UI.\n   *\n   * Credits to the Chakra UI team:\n   * https://github.com/chakra-ui/zag/blob/main/packages/utilities/date-utils/src/pagination.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from radix-ui-primitives.\n   * MIT Licensed, Copyright (c) 2022 WorkOS.\n   *\n   * Credits to the Radix UI team:\n   * https://github.com/radix-ui/primitives/blob/81b25f4b40c54f72aeb106ca0e64e1e09655153e/packages/react/menu/src/Menu.tsx\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/950d45db36e63851f411ed0dc6a5aad0af57da68/packages/@react-stately/datepicker/src/placeholders.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/950d45db36e63851f411ed0dc6a5aad0af57da68/packages/@react-stately/datepicker/src/utils.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/99ca82e87ba2d7fdd54f5b49326fd242320b4b51/packages/%40react-aria/datepicker/src/useDisplayNames.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/84e97943ad637a582c01c9b56d880cd95f595737/packages/ariakit/src/hovercard/__utils/polygon.ts\n   * https://github.com/ariakit/ariakit/blob/f2a96973de523d67e41eec983263936c489ef3e2/packages/ariakit/src/hovercard/__utils/debug-polygon.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/1ddcde7b4fef9af7f08e11bb78d71fe60bbcc64b/packages/@react-stately/slider/src/useSliderState.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/blob/6b51339cca0b8344507d3c8e81e7ad05d6e75f9b/packages/@react-aria/tabs/src/TabsKeyboardDelegate.ts\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from react-spectrum.\n   * Apache License Version 2.0, Copyright 2020 Adobe.\n   *\n   * Credits to the React Spectrum team:\n   * https://github.com/adobe/react-spectrum/tree/main/packages/%40react-aria/toast/intl\n   *)\n\n@kobalte/core/dist/esm/index.js:\n  (*!\n   * Portions of this file are based on code from ariakit.\n   * MIT Licensed, Copyright (c) Diego Haz.\n   *\n   * Credits to the Ariakit team:\n   * https://github.com/ariakit/ariakit/blob/84e97943ad637a582c01c9b56d880cd95f595737/packages/ariakit/src/hovercard/__utils/polygon.ts\n   * https://github.com/ariakit/ariakit/blob/f2a96973de523d67e41eec983263936c489ef3e2/packages/ariakit/src/hovercard/__utils/debug-polygon.ts\n   *)\n*/ \nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49, _c50, _c51, _c52, _c53, _c54, _c55, _c56, _c57, _c58, _c59, _c60, _c61, _c62, _c63, _c64, _c65, _c66, _c67, _c68, _c69, _c70, _c71, _c72, _c73, _c74, _c75, _c76, _c77, _c78, _c79, _c80, _c81, _c82, _c83, _c84, _c85, _c86;\n$RefreshReg$(_c, \"TransitionGroup\");\n$RefreshReg$(_c1, \"Key\");\n$RefreshReg$(_c2, \"Polymorphic\");\n$RefreshReg$(_c3, \"FormControlDescription\");\n$RefreshReg$(_c4, \"FormControlErrorMessage\");\n$RefreshReg$(_c5, \"FormControlLabel\");\n$RefreshReg$(_c6, \"ButtonRoot\");\n$RefreshReg$(_c7, \"DismissableLayer\");\n$RefreshReg$(_c8, \"PopperArrow\");\n$RefreshReg$(_c9, \"PopperPositioner\");\n$RefreshReg$(_c10, \"PopperRoot\");\n$RefreshReg$(_c11, \"Menu\");\n$RefreshReg$(_c12, \"MenuItemBase\");\n$RefreshReg$(_c13, \"MenuCheckboxItem\");\n$RefreshReg$(_c14, \"MenuContentBase\");\n$RefreshReg$(_c15, \"MenuContent\");\n$RefreshReg$(_c16, \"MenuGroup\");\n$RefreshReg$(_c17, \"MenuGroupLabel\");\n$RefreshReg$(_c18, \"MenuIcon\");\n$RefreshReg$(_c19, \"MenuItem\");\n$RefreshReg$(_c20, \"MenuItemDescription\");\n$RefreshReg$(_c21, \"MenuItemIndicator\");\n$RefreshReg$(_c22, \"MenuItemLabel\");\n$RefreshReg$(_c23, \"MenuPortal\");\n$RefreshReg$(_c24, \"MenuRadioGroup\");\n$RefreshReg$(_c25, \"MenuRadioItem\");\n$RefreshReg$(_c26, \"MenuRoot\");\n$RefreshReg$(_c27, \"MenuSub\");\n$RefreshReg$(_c28, \"MenuSubContent\");\n$RefreshReg$(_c29, \"MenuSubTrigger\");\n$RefreshReg$(_c30, \"MenuTrigger\");\n$RefreshReg$(_c31, \"SeparatorRoot\");\n$RefreshReg$(_c32, \"DropdownMenuContent\");\n$RefreshReg$(_c33, \"DropdownMenuRoot\");\n$RefreshReg$(_c34, \"RadioGroupItem\");\n$RefreshReg$(_c35, \"RadioGroupItemControl\");\n$RefreshReg$(_c36, \"RadioGroupItemDescription\");\n$RefreshReg$(_c37, \"RadioGroupItemIndicator\");\n$RefreshReg$(_c38, \"RadioGroupItemInput\");\n$RefreshReg$(_c39, \"RadioGroupItemLabel\");\n$RefreshReg$(_c40, \"RadioGroupLabel\");\n$RefreshReg$(_c41, \"RadioGroupRoot\");\n$RefreshReg$(_c42, \"Search\");\n$RefreshReg$(_c43, \"Trash\");\n$RefreshReg$(_c44, \"ChevronDown\");\n$RefreshReg$(_c45, \"ArrowUp\");\n$RefreshReg$(_c46, \"ArrowDown\");\n$RefreshReg$(_c47, \"ArrowLeft\");\n$RefreshReg$(_c48, \"ArrowRight\");\n$RefreshReg$(_c49, \"Sun\");\n$RefreshReg$(_c50, \"Moon\");\n$RefreshReg$(_c51, \"Monitor\");\n$RefreshReg$(_c52, \"Wifi\");\n$RefreshReg$(_c53, \"Offline\");\n$RefreshReg$(_c54, \"Settings\");\n$RefreshReg$(_c55, \"PiPIcon\");\n$RefreshReg$(_c56, \"Copier\");\n$RefreshReg$(_c57, \"CopiedCopier\");\n$RefreshReg$(_c58, \"ErrorCopier\");\n$RefreshReg$(_c59, \"List\");\n$RefreshReg$(_c60, \"Check\");\n$RefreshReg$(_c61, \"CheckCircle\");\n$RefreshReg$(_c62, \"LoadingCircle\");\n$RefreshReg$(_c63, \"XCircle\");\n$RefreshReg$(_c64, \"PauseCircle\");\n$RefreshReg$(_c65, \"TanstackLogo\");\n$RefreshReg$(_c66, \"ThemeContext$createContext\");\n$RefreshReg$(_c67, \"ThemeContext\");\n$RefreshReg$(_c68, \"Expander\");\n$RefreshReg$(_c69, \"CopyButton\");\n$RefreshReg$(_c70, \"ClearArrayButton\");\n$RefreshReg$(_c71, \"DeleteItemButton\");\n$RefreshReg$(_c72, \"ToggleValueButton\");\n$RefreshReg$(_c73, \"Explorer\");\n$RefreshReg$(_c74, \"PiPProvider\");\n$RefreshReg$(_c75, \"DevtoolsComponent\");\n$RefreshReg$(_c76, \"Devtools\");\n$RefreshReg$(_c77, \"PiPPanel\");\n$RefreshReg$(_c78, \"DevtoolsPanel\");\n$RefreshReg$(_c79, \"ContentView\");\n$RefreshReg$(_c80, \"QueryRow\");\n$RefreshReg$(_c81, \"MutationRow\");\n$RefreshReg$(_c82, \"QueryStatusCount\");\n$RefreshReg$(_c83, \"MutationStatusCount\");\n$RefreshReg$(_c84, \"QueryStatus\");\n$RefreshReg$(_c85, \"QueryDetails\");\n$RefreshReg$(_c86, \"MutationDetails\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tanstack/query-devtools/build/Devtools/XYYT2JS6.js\n"));

/***/ })

}]);